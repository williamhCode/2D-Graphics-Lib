/* Generated by Cython 3.0.0a11 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "extra_compile_args": [
            "-w"
        ],
        "include_dirs": [
            "./engine/libs/include"
        ],
        "language": "c++",
        "libraries": [
            "glad",
            "glfw"
        ],
        "library_dirs": [
            "./engine/libs/shared/Darwin"
        ],
        "name": "engine.constants",
        "runtime_library_dirs": [
            "./engine/libs/shared/Darwin"
        ],
        "sources": [
            "./engine/constants.py"
        ]
    },
    "module_name": "engine.constants"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#define CYTHON_ABI "3_0_0a11"
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x030000AB
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC (PYPY_VERSION_HEX >= 0x07030900)
  #endif
#elif defined(CYTHON_LIMITED_API)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS 1
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus) && __cplusplus >= 201103L
    #if __has_cpp_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH [[fallthrough]]
    #elif __has_cpp_attribute(clang::fallthrough)
      #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
    #elif __has_cpp_attribute(gnu::fallthrough)
      #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__ ) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(U other) { return *ptr == other; }
    template<typename U> bool operator !=(U other) { return *ptr != other; }
  private:
    T *ptr;
};

#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define Py_OptimizeFlag 0
#endif
#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *call_result=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject* co=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(p))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto cleanup_code_too;
        if (!(empty = PyTuple_New(0))) goto cleanup_code_too; // unfortunately __pyx_empty_tuple isn't available here
        if (!(call_result = PyObject_Call(replace, empty, kwds))) goto cleanup_code_too;
        Py_XDECREF((PyObject*)co);
        co = (PyCodeObject*)call_result;
        call_result = NULL;
        if (0) {
            cleanup_code_too:
            Py_XDECREF((PyObject*)co);
            co = NULL;
        }
        end:
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(call_result);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return co;
    }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE(obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535 : 1114111)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#define __PYX_HAVE__engine__constants
#define __PYX_HAVE_API__engine__constants
/* Early includes */
#include <stdint.h>
#include "GLFW/glfw3.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
static PyObject *__pyx_d;
static PyObject *__pyx_b;
static PyObject *__pyx_cython_runtime = NULL;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static PyObject *__pyx_empty_unicode;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "engine/constants.py",
};
/* #### Code section: utility_code_proto_before_types ### */
/* #### Code section: numeric_typedefs ### */
/* #### Code section: complex_type_declarations ### */
/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#define __Pyx_PyErr_Occurred()  __pyx_tstate->curexc_type
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* GCCDiagnostics.proto */
#if defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_Occurred(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* InitStrings.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str);
#else
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);
#endif

/* #### Code section: module_declarations ### */

/* Module declarations from "libc.stdint" */
#if !CYTHON_USE_MODULE_STATE
#endif

/* Module declarations from "engine.libs.glfw" */
#if !CYTHON_USE_MODULE_STATE
#endif

/* Module declarations from "engine.constants" */
#if !CYTHON_USE_MODULE_STATE
#endif
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "engine.constants"
extern int __pyx_module_is_main_engine__constants;
int __pyx_module_is_main_engine__constants = 0;

/* Implementation of "engine.constants" */
/* #### Code section: global_var ### */
/* #### Code section: string_decls ### */
static const char __pyx_k_[] = "?";
static const char __pyx_k_TRUE[] = "TRUE";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_FALSE[] = "FALSE";
static const char __pyx_k_KEY_0[] = "KEY_0";
static const char __pyx_k_KEY_1[] = "KEY_1";
static const char __pyx_k_KEY_2[] = "KEY_2";
static const char __pyx_k_KEY_3[] = "KEY_3";
static const char __pyx_k_KEY_4[] = "KEY_4";
static const char __pyx_k_KEY_5[] = "KEY_5";
static const char __pyx_k_KEY_6[] = "KEY_6";
static const char __pyx_k_KEY_7[] = "KEY_7";
static const char __pyx_k_KEY_8[] = "KEY_8";
static const char __pyx_k_KEY_9[] = "KEY_9";
static const char __pyx_k_KEY_A[] = "KEY_A";
static const char __pyx_k_KEY_B[] = "KEY_B";
static const char __pyx_k_KEY_C[] = "KEY_C";
static const char __pyx_k_KEY_D[] = "KEY_D";
static const char __pyx_k_KEY_E[] = "KEY_E";
static const char __pyx_k_KEY_F[] = "KEY_F";
static const char __pyx_k_KEY_G[] = "KEY_G";
static const char __pyx_k_KEY_H[] = "KEY_H";
static const char __pyx_k_KEY_I[] = "KEY_I";
static const char __pyx_k_KEY_J[] = "KEY_J";
static const char __pyx_k_KEY_K[] = "KEY_K";
static const char __pyx_k_KEY_L[] = "KEY_L";
static const char __pyx_k_KEY_M[] = "KEY_M";
static const char __pyx_k_KEY_N[] = "KEY_N";
static const char __pyx_k_KEY_O[] = "KEY_O";
static const char __pyx_k_KEY_P[] = "KEY_P";
static const char __pyx_k_KEY_Q[] = "KEY_Q";
static const char __pyx_k_KEY_R[] = "KEY_R";
static const char __pyx_k_KEY_S[] = "KEY_S";
static const char __pyx_k_KEY_T[] = "KEY_T";
static const char __pyx_k_KEY_U[] = "KEY_U";
static const char __pyx_k_KEY_V[] = "KEY_V";
static const char __pyx_k_KEY_W[] = "KEY_W";
static const char __pyx_k_KEY_X[] = "KEY_X";
static const char __pyx_k_KEY_Y[] = "KEY_Y";
static const char __pyx_k_KEY_Z[] = "KEY_Z";
static const char __pyx_k_PRESS[] = "PRESS";
static const char __pyx_k_CURSOR[] = "CURSOR";
static const char __pyx_k_HAT_UP[] = "HAT_UP";
static const char __pyx_k_KEY_F1[] = "KEY_F1";
static const char __pyx_k_KEY_F2[] = "KEY_F2";
static const char __pyx_k_KEY_F3[] = "KEY_F3";
static const char __pyx_k_KEY_F4[] = "KEY_F4";
static const char __pyx_k_KEY_F5[] = "KEY_F5";
static const char __pyx_k_KEY_F6[] = "KEY_F6";
static const char __pyx_k_KEY_F7[] = "KEY_F7";
static const char __pyx_k_KEY_F8[] = "KEY_F8";
static const char __pyx_k_KEY_F9[] = "KEY_F9";
static const char __pyx_k_KEY_UP[] = "KEY_UP";
static const char __pyx_k_NO_API[] = "NO_API";
static const char __pyx_k_REPEAT[] = "REPEAT";
static const char __pyx_k_STEREO[] = "STEREO";
static const char __pyx_k_FOCUSED[] = "FOCUSED";
static const char __pyx_k_HOVERED[] = "HOVERED";
static const char __pyx_k_KEY_END[] = "KEY_END";
static const char __pyx_k_KEY_F10[] = "KEY_F10";
static const char __pyx_k_KEY_F11[] = "KEY_F11";
static const char __pyx_k_KEY_F12[] = "KEY_F12";
static const char __pyx_k_KEY_F13[] = "KEY_F13";
static const char __pyx_k_KEY_F14[] = "KEY_F14";
static const char __pyx_k_KEY_F15[] = "KEY_F15";
static const char __pyx_k_KEY_F16[] = "KEY_F16";
static const char __pyx_k_KEY_F17[] = "KEY_F17";
static const char __pyx_k_KEY_F18[] = "KEY_F18";
static const char __pyx_k_KEY_F19[] = "KEY_F19";
static const char __pyx_k_KEY_F20[] = "KEY_F20";
static const char __pyx_k_KEY_F21[] = "KEY_F21";
static const char __pyx_k_KEY_F22[] = "KEY_F22";
static const char __pyx_k_KEY_F23[] = "KEY_F23";
static const char __pyx_k_KEY_F24[] = "KEY_F24";
static const char __pyx_k_KEY_F25[] = "KEY_F25";
static const char __pyx_k_KEY_TAB[] = "KEY_TAB";
static const char __pyx_k_MOD_ALT[] = "MOD_ALT";
static const char __pyx_k_RELEASE[] = "RELEASE";
static const char __pyx_k_SAMPLES[] = "SAMPLES";
static const char __pyx_k_VISIBLE[] = "VISIBLE";
static const char __pyx_k_FLOATING[] = "FLOATING";
static const char __pyx_k_HAT_DOWN[] = "HAT_DOWN";
static const char __pyx_k_HAT_LEFT[] = "HAT_LEFT";
static const char __pyx_k_KEY_DOWN[] = "KEY_DOWN";
static const char __pyx_k_KEY_HOME[] = "KEY_HOME";
static const char __pyx_k_KEY_KP_0[] = "KEY_KP_0";
static const char __pyx_k_KEY_KP_1[] = "KEY_KP_1";
static const char __pyx_k_KEY_KP_2[] = "KEY_KP_2";
static const char __pyx_k_KEY_KP_3[] = "KEY_KP_3";
static const char __pyx_k_KEY_KP_4[] = "KEY_KP_4";
static const char __pyx_k_KEY_KP_5[] = "KEY_KP_5";
static const char __pyx_k_KEY_KP_6[] = "KEY_KP_6";
static const char __pyx_k_KEY_KP_7[] = "KEY_KP_7";
static const char __pyx_k_KEY_KP_8[] = "KEY_KP_8";
static const char __pyx_k_KEY_KP_9[] = "KEY_KP_9";
static const char __pyx_k_KEY_LAST[] = "KEY_LAST";
static const char __pyx_k_KEY_LEFT[] = "KEY_LEFT";
static const char __pyx_k_KEY_MENU[] = "KEY_MENU";
static const char __pyx_k_NO_ERROR[] = "NO_ERROR";
static const char __pyx_k_RED_BITS[] = "RED_BITS";
static const char __pyx_k_BLUE_BITS[] = "BLUE_BITS";
static const char __pyx_k_CONNECTED[] = "CONNECTED";
static const char __pyx_k_DECORATED[] = "DECORATED";
static const char __pyx_k_DONT_CARE[] = "DONT_CARE";
static const char __pyx_k_HAT_RIGHT[] = "HAT_RIGHT";
static const char __pyx_k_ICONIFIED[] = "ICONIFIED";
static const char __pyx_k_KEY_COMMA[] = "KEY_COMMA";
static const char __pyx_k_KEY_ENTER[] = "KEY_ENTER";
static const char __pyx_k_KEY_EQUAL[] = "KEY_EQUAL";
static const char __pyx_k_KEY_MINUS[] = "KEY_MINUS";
static const char __pyx_k_KEY_PAUSE[] = "KEY_PAUSE";
static const char __pyx_k_KEY_RIGHT[] = "KEY_RIGHT";
static const char __pyx_k_KEY_SLASH[] = "KEY_SLASH";
static const char __pyx_k_KEY_SPACE[] = "KEY_SPACE";
static const char __pyx_k_MAXIMIZED[] = "MAXIMIZED";
static const char __pyx_k_MOD_SHIFT[] = "MOD_SHIFT";
static const char __pyx_k_MOD_SUPER[] = "MOD_SUPER";
static const char __pyx_k_RESIZABLE[] = "RESIZABLE";
static const char __pyx_k_ALPHA_BITS[] = "ALPHA_BITS";
static const char __pyx_k_CLIENT_API[] = "CLIENT_API";
static const char __pyx_k_DEPTH_BITS[] = "DEPTH_BITS";
static const char __pyx_k_GREEN_BITS[] = "GREEN_BITS";
static const char __pyx_k_JOYSTICK_1[] = "JOYSTICK_1";
static const char __pyx_k_JOYSTICK_2[] = "JOYSTICK_2";
static const char __pyx_k_JOYSTICK_3[] = "JOYSTICK_3";
static const char __pyx_k_JOYSTICK_4[] = "JOYSTICK_4";
static const char __pyx_k_JOYSTICK_5[] = "JOYSTICK_5";
static const char __pyx_k_JOYSTICK_6[] = "JOYSTICK_6";
static const char __pyx_k_JOYSTICK_7[] = "JOYSTICK_7";
static const char __pyx_k_JOYSTICK_8[] = "JOYSTICK_8";
static const char __pyx_k_JOYSTICK_9[] = "JOYSTICK_9";
static const char __pyx_k_KEY_DELETE[] = "KEY_DELETE";
static const char __pyx_k_KEY_ESCAPE[] = "KEY_ESCAPE";
static const char __pyx_k_KEY_INSERT[] = "KEY_INSERT";
static const char __pyx_k_KEY_KP_ADD[] = "KEY_KP_ADD";
static const char __pyx_k_KEY_PERIOD[] = "KEY_PERIOD";
static const char __pyx_k_OPENGL_API[] = "OPENGL_API";
static const char __pyx_k_AUX_BUFFERS[] = "AUX_BUFFERS";
static const char __pyx_k_HAND_CURSOR[] = "HAND_CURSOR";
static const char __pyx_k_HAT_LEFT_UP[] = "HAT_LEFT_UP";
static const char __pyx_k_JOYSTICK_10[] = "JOYSTICK_10";
static const char __pyx_k_JOYSTICK_11[] = "JOYSTICK_11";
static const char __pyx_k_JOYSTICK_12[] = "JOYSTICK_12";
static const char __pyx_k_JOYSTICK_13[] = "JOYSTICK_13";
static const char __pyx_k_JOYSTICK_14[] = "JOYSTICK_14";
static const char __pyx_k_JOYSTICK_15[] = "JOYSTICK_15";
static const char __pyx_k_JOYSTICK_16[] = "JOYSTICK_16";
static const char __pyx_k_KEY_PAGE_UP[] = "KEY_PAGE_UP";
static const char __pyx_k_KEY_UNKNOWN[] = "KEY_UNKNOWN";
static const char __pyx_k_KEY_WORLD_1[] = "KEY_WORLD_1";
static const char __pyx_k_KEY_WORLD_2[] = "KEY_WORLD_2";
static const char __pyx_k_MOD_CONTROL[] = "MOD_CONTROL";
static const char __pyx_k_STICKY_KEYS[] = "STICKY_KEYS";
static const char __pyx_k_ARROW_CURSOR[] = "ARROW_CURSOR";
static const char __pyx_k_AUTO_ICONIFY[] = "AUTO_ICONIFY";
static const char __pyx_k_DISCONNECTED[] = "DISCONNECTED";
static const char __pyx_k_DOUBLEBUFFER[] = "DOUBLEBUFFER";
static const char __pyx_k_HAT_CENTERED[] = "HAT_CENTERED";
static const char __pyx_k_HAT_RIGHT_UP[] = "HAT_RIGHT_UP";
static const char __pyx_k_IBEAM_CURSOR[] = "IBEAM_CURSOR";
static const char __pyx_k_INVALID_ENUM[] = "INVALID_ENUM";
static const char __pyx_k_KEY_KP_ENTER[] = "KEY_KP_ENTER";
static const char __pyx_k_KEY_KP_EQUAL[] = "KEY_KP_EQUAL";
static const char __pyx_k_KEY_LEFT_ALT[] = "KEY_LEFT_ALT";
static const char __pyx_k_KEY_NUM_LOCK[] = "KEY_NUM_LOCK";
static const char __pyx_k_MOD_NUM_LOCK[] = "MOD_NUM_LOCK";
static const char __pyx_k_REFRESH_RATE[] = "REFRESH_RATE";
static const char __pyx_k_SRGB_CAPABLE[] = "SRGB_CAPABLE";
static const char __pyx_k_STENCIL_BITS[] = "STENCIL_BITS";
static const char __pyx_k_CENTER_CURSOR[] = "CENTER_CURSOR";
static const char __pyx_k_COCOA_MENUBAR[] = "COCOA_MENUBAR";
static const char __pyx_k_CURSOR_HIDDEN[] = "CURSOR_HIDDEN";
static const char __pyx_k_CURSOR_NORMAL[] = "CURSOR_NORMAL";
static const char __pyx_k_FOCUS_ON_SHOW[] = "FOCUS_ON_SHOW";
static const char __pyx_k_HAT_LEFT_DOWN[] = "HAT_LEFT_DOWN";
static const char __pyx_k_INVALID_VALUE[] = "INVALID_VALUE";
static const char __pyx_k_JOYSTICK_LAST[] = "JOYSTICK_LAST";
static const char __pyx_k_KEY_BACKSLASH[] = "KEY_BACKSLASH";
static const char __pyx_k_KEY_BACKSPACE[] = "KEY_BACKSPACE";
static const char __pyx_k_KEY_CAPS_LOCK[] = "KEY_CAPS_LOCK";
static const char __pyx_k_KEY_KP_DIVIDE[] = "KEY_KP_DIVIDE";
static const char __pyx_k_KEY_PAGE_DOWN[] = "KEY_PAGE_DOWN";
static const char __pyx_k_KEY_RIGHT_ALT[] = "KEY_RIGHT_ALT";
static const char __pyx_k_KEY_SEMICOLON[] = "KEY_SEMICOLON";
static const char __pyx_k_LOCK_KEY_MODS[] = "LOCK_KEY_MODS";
static const char __pyx_k_MOD_CAPS_LOCK[] = "MOD_CAPS_LOCK";
static const char __pyx_k_NO_ROBUSTNESS[] = "NO_ROBUSTNESS";
static const char __pyx_k_OPENGL_ES_API[] = "OPENGL_ES_API";
static const char __pyx_k_OUT_OF_MEMORY[] = "OUT_OF_MEMORY";
static const char __pyx_k_VERSION_MAJOR[] = "VERSION_MAJOR";
static const char __pyx_k_VERSION_MINOR[] = "VERSION_MINOR";
static const char __pyx_k_ACCUM_RED_BITS[] = "ACCUM_RED_BITS";
static const char __pyx_k_HAT_RIGHT_DOWN[] = "HAT_RIGHT_DOWN";
static const char __pyx_k_HRESIZE_CURSOR[] = "HRESIZE_CURSOR";
static const char __pyx_k_KEY_APOSTROPHE[] = "KEY_APOSTROPHE";
static const char __pyx_k_KEY_KP_DECIMAL[] = "KEY_KP_DECIMAL";
static const char __pyx_k_KEY_LEFT_SHIFT[] = "KEY_LEFT_SHIFT";
static const char __pyx_k_KEY_LEFT_SUPER[] = "KEY_LEFT_SUPER";
static const char __pyx_k_MOUSE_BUTTON_1[] = "MOUSE_BUTTON_1";
static const char __pyx_k_MOUSE_BUTTON_2[] = "MOUSE_BUTTON_2";
static const char __pyx_k_MOUSE_BUTTON_3[] = "MOUSE_BUTTON_3";
static const char __pyx_k_MOUSE_BUTTON_4[] = "MOUSE_BUTTON_4";
static const char __pyx_k_MOUSE_BUTTON_5[] = "MOUSE_BUTTON_5";
static const char __pyx_k_MOUSE_BUTTON_6[] = "MOUSE_BUTTON_6";
static const char __pyx_k_MOUSE_BUTTON_7[] = "MOUSE_BUTTON_7";
static const char __pyx_k_MOUSE_BUTTON_8[] = "MOUSE_BUTTON_8";
static const char __pyx_k_OPENGL_PROFILE[] = "OPENGL_PROFILE";
static const char __pyx_k_PLATFORM_ERROR[] = "PLATFORM_ERROR";
static const char __pyx_k_VRESIZE_CURSOR[] = "VRESIZE_CURSOR";
static const char __pyx_k_X11_CLASS_NAME[] = "X11_CLASS_NAME";
static const char __pyx_k_ACCUM_BLUE_BITS[] = "ACCUM_BLUE_BITS";
static const char __pyx_k_API_UNAVAILABLE[] = "API_UNAVAILABLE";
static const char __pyx_k_CURSOR_DISABLED[] = "CURSOR_DISABLED";
static const char __pyx_k_EGL_CONTEXT_API[] = "EGL_CONTEXT_API";
static const char __pyx_k_KEY_KP_MULTIPLY[] = "KEY_KP_MULTIPLY";
static const char __pyx_k_KEY_KP_SUBTRACT[] = "KEY_KP_SUBTRACT";
static const char __pyx_k_KEY_RIGHT_SHIFT[] = "KEY_RIGHT_SHIFT";
static const char __pyx_k_KEY_RIGHT_SUPER[] = "KEY_RIGHT_SUPER";
static const char __pyx_k_KEY_SCROLL_LOCK[] = "KEY_SCROLL_LOCK";
static const char __pyx_k_NOT_INITIALIZED[] = "NOT_INITIALIZED";
static const char __pyx_k_ACCUM_ALPHA_BITS[] = "ACCUM_ALPHA_BITS";
static const char __pyx_k_ACCUM_GREEN_BITS[] = "ACCUM_GREEN_BITS";
static const char __pyx_k_COCOA_FRAME_NAME[] = "COCOA_FRAME_NAME";
static const char __pyx_k_CONTEXT_NO_ERROR[] = "CONTEXT_NO_ERROR";
static const char __pyx_k_CONTEXT_REVISION[] = "CONTEXT_REVISION";
static const char __pyx_k_CROSSHAIR_CURSOR[] = "CROSSHAIR_CURSOR";
static const char __pyx_k_GAMEPAD_BUTTON_A[] = "GAMEPAD_BUTTON_A";
static const char __pyx_k_GAMEPAD_BUTTON_B[] = "GAMEPAD_BUTTON_B";
static const char __pyx_k_GAMEPAD_BUTTON_X[] = "GAMEPAD_BUTTON_X";
static const char __pyx_k_GAMEPAD_BUTTON_Y[] = "GAMEPAD_BUTTON_Y";
static const char __pyx_k_KEY_GRAVE_ACCENT[] = "KEY_GRAVE_ACCENT";
static const char __pyx_k_KEY_LEFT_BRACKET[] = "KEY_LEFT_BRACKET";
static const char __pyx_k_KEY_LEFT_CONTROL[] = "KEY_LEFT_CONTROL";
static const char __pyx_k_KEY_PRINT_SCREEN[] = "KEY_PRINT_SCREEN";
static const char __pyx_k_RAW_MOUSE_MOTION[] = "RAW_MOUSE_MOTION";
static const char __pyx_k_SCALE_TO_MONITOR[] = "SCALE_TO_MONITOR";
static const char __pyx_k_VERSION_REVISION[] = "VERSION_REVISION";
static const char __pyx_k_GAMEPAD_AXIS_LAST[] = "GAMEPAD_AXIS_LAST";
static const char __pyx_k_KEY_RIGHT_BRACKET[] = "KEY_RIGHT_BRACKET";
static const char __pyx_k_KEY_RIGHT_CONTROL[] = "KEY_RIGHT_CONTROL";
static const char __pyx_k_MOUSE_BUTTON_LAST[] = "MOUSE_BUTTON_LAST";
static const char __pyx_k_MOUSE_BUTTON_LEFT[] = "MOUSE_BUTTON_LEFT";
static const char __pyx_k_NO_WINDOW_CONTEXT[] = "NO_WINDOW_CONTEXT";
static const char __pyx_k_X11_INSTANCE_NAME[] = "X11_INSTANCE_NAME";
static const char __pyx_k_CONTEXT_ROBUSTNESS[] = "CONTEXT_ROBUSTNESS";
static const char __pyx_k_FORMAT_UNAVAILABLE[] = "FORMAT_UNAVAILABLE";
static const char __pyx_k_MOUSE_BUTTON_RIGHT[] = "MOUSE_BUTTON_RIGHT";
static const char __pyx_k_NATIVE_CONTEXT_API[] = "NATIVE_CONTEXT_API";
static const char __pyx_k_NO_CURRENT_CONTEXT[] = "NO_CURRENT_CONTEXT";
static const char __pyx_k_OPENGL_ANY_PROFILE[] = "OPENGL_ANY_PROFILE";
static const char __pyx_k_OSMESA_CONTEXT_API[] = "OSMESA_CONTEXT_API";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_GAMEPAD_AXIS_LEFT_X[] = "GAMEPAD_AXIS_LEFT_X";
static const char __pyx_k_GAMEPAD_AXIS_LEFT_Y[] = "GAMEPAD_AXIS_LEFT_Y";
static const char __pyx_k_GAMEPAD_BUTTON_BACK[] = "GAMEPAD_BUTTON_BACK";
static const char __pyx_k_GAMEPAD_BUTTON_LAST[] = "GAMEPAD_BUTTON_LAST";
static const char __pyx_k_MOUSE_BUTTON_MIDDLE[] = "MOUSE_BUTTON_MIDDLE";
static const char __pyx_k_OPENGL_CORE_PROFILE[] = "OPENGL_CORE_PROFILE";
static const char __pyx_k_VERSION_UNAVAILABLE[] = "VERSION_UNAVAILABLE";
static const char __pyx_k_ANY_RELEASE_BEHAVIOR[] = "ANY_RELEASE_BEHAVIOR";
static const char __pyx_k_CONTEXT_CREATION_API[] = "CONTEXT_CREATION_API";
static const char __pyx_k_GAMEPAD_AXIS_RIGHT_X[] = "GAMEPAD_AXIS_RIGHT_X";
static const char __pyx_k_GAMEPAD_AXIS_RIGHT_Y[] = "GAMEPAD_AXIS_RIGHT_Y";
static const char __pyx_k_GAMEPAD_BUTTON_CROSS[] = "GAMEPAD_BUTTON_CROSS";
static const char __pyx_k_GAMEPAD_BUTTON_GUIDE[] = "GAMEPAD_BUTTON_GUIDE";
static const char __pyx_k_GAMEPAD_BUTTON_START[] = "GAMEPAD_BUTTON_START";
static const char __pyx_k_JOYSTICK_HAT_BUTTONS[] = "JOYSTICK_HAT_BUTTONS";
static const char __pyx_k_OPENGL_DEBUG_CONTEXT[] = "OPENGL_DEBUG_CONTEXT";
static const char __pyx_k_STICKY_MOUSE_BUTTONS[] = "STICKY_MOUSE_BUTTONS";
static const char __pyx_k_COCOA_CHDIR_RESOURCES[] = "COCOA_CHDIR_RESOURCES";
static const char __pyx_k_CONTEXT_VERSION_MAJOR[] = "CONTEXT_VERSION_MAJOR";
static const char __pyx_k_CONTEXT_VERSION_MINOR[] = "CONTEXT_VERSION_MINOR";
static const char __pyx_k_GAMEPAD_BUTTON_CIRCLE[] = "GAMEPAD_BUTTON_CIRCLE";
static const char __pyx_k_GAMEPAD_BUTTON_SQUARE[] = "GAMEPAD_BUTTON_SQUARE";
static const char __pyx_k_LOSE_CONTEXT_ON_RESET[] = "LOSE_CONTEXT_ON_RESET";
static const char __pyx_k_NO_RESET_NOTIFICATION[] = "NO_RESET_NOTIFICATION";
static const char __pyx_k_OPENGL_COMPAT_PROFILE[] = "OPENGL_COMPAT_PROFILE";
static const char __pyx_k_OPENGL_FORWARD_COMPAT[] = "OPENGL_FORWARD_COMPAT";
static const char __pyx_k_RELEASE_BEHAVIOR_NONE[] = "RELEASE_BEHAVIOR_NONE";
static const char __pyx_k_GAMEPAD_BUTTON_DPAD_UP[] = "GAMEPAD_BUTTON_DPAD_UP";
static const char __pyx_k_RELEASE_BEHAVIOR_FLUSH[] = "RELEASE_BEHAVIOR_FLUSH";
static const char __pyx_k_GAMEPAD_BUTTON_TRIANGLE[] = "GAMEPAD_BUTTON_TRIANGLE";
static const char __pyx_k_TRANSPARENT_FRAMEBUFFER[] = "TRANSPARENT_FRAMEBUFFER";
static const char __pyx_k_COCOA_GRAPHICS_SWITCHING[] = "COCOA_GRAPHICS_SWITCHING";
static const char __pyx_k_COCOA_RETINA_FRAMEBUFFER[] = "COCOA_RETINA_FRAMEBUFFER";
static const char __pyx_k_CONTEXT_RELEASE_BEHAVIOR[] = "CONTEXT_RELEASE_BEHAVIOR";
static const char __pyx_k_GAMEPAD_BUTTON_DPAD_DOWN[] = "GAMEPAD_BUTTON_DPAD_DOWN";
static const char __pyx_k_GAMEPAD_BUTTON_DPAD_LEFT[] = "GAMEPAD_BUTTON_DPAD_LEFT";
static const char __pyx_k_GAMEPAD_AXIS_LEFT_TRIGGER[] = "GAMEPAD_AXIS_LEFT_TRIGGER";
static const char __pyx_k_GAMEPAD_BUTTON_DPAD_RIGHT[] = "GAMEPAD_BUTTON_DPAD_RIGHT";
static const char __pyx_k_GAMEPAD_BUTTON_LEFT_THUMB[] = "GAMEPAD_BUTTON_LEFT_THUMB";
static const char __pyx_k_GAMEPAD_AXIS_RIGHT_TRIGGER[] = "GAMEPAD_AXIS_RIGHT_TRIGGER";
static const char __pyx_k_GAMEPAD_BUTTON_LEFT_BUMPER[] = "GAMEPAD_BUTTON_LEFT_BUMPER";
static const char __pyx_k_GAMEPAD_BUTTON_RIGHT_THUMB[] = "GAMEPAD_BUTTON_RIGHT_THUMB";
static const char __pyx_k_GAMEPAD_BUTTON_RIGHT_BUMPER[] = "GAMEPAD_BUTTON_RIGHT_BUMPER";
#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_n_s_;
static PyObject *__pyx_n_s_ACCUM_ALPHA_BITS;
static PyObject *__pyx_n_s_ACCUM_BLUE_BITS;
static PyObject *__pyx_n_s_ACCUM_GREEN_BITS;
static PyObject *__pyx_n_s_ACCUM_RED_BITS;
static PyObject *__pyx_n_s_ALPHA_BITS;
static PyObject *__pyx_n_s_ANY_RELEASE_BEHAVIOR;
static PyObject *__pyx_n_s_API_UNAVAILABLE;
static PyObject *__pyx_n_s_ARROW_CURSOR;
static PyObject *__pyx_n_s_AUTO_ICONIFY;
static PyObject *__pyx_n_s_AUX_BUFFERS;
static PyObject *__pyx_n_s_BLUE_BITS;
static PyObject *__pyx_n_s_CENTER_CURSOR;
static PyObject *__pyx_n_s_CLIENT_API;
static PyObject *__pyx_n_s_COCOA_CHDIR_RESOURCES;
static PyObject *__pyx_n_s_COCOA_FRAME_NAME;
static PyObject *__pyx_n_s_COCOA_GRAPHICS_SWITCHING;
static PyObject *__pyx_n_s_COCOA_MENUBAR;
static PyObject *__pyx_n_s_COCOA_RETINA_FRAMEBUFFER;
static PyObject *__pyx_n_s_CONNECTED;
static PyObject *__pyx_n_s_CONTEXT_CREATION_API;
static PyObject *__pyx_n_s_CONTEXT_NO_ERROR;
static PyObject *__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR;
static PyObject *__pyx_n_s_CONTEXT_REVISION;
static PyObject *__pyx_n_s_CONTEXT_ROBUSTNESS;
static PyObject *__pyx_n_s_CONTEXT_VERSION_MAJOR;
static PyObject *__pyx_n_s_CONTEXT_VERSION_MINOR;
static PyObject *__pyx_n_s_CROSSHAIR_CURSOR;
static PyObject *__pyx_n_s_CURSOR;
static PyObject *__pyx_n_s_CURSOR_DISABLED;
static PyObject *__pyx_n_s_CURSOR_HIDDEN;
static PyObject *__pyx_n_s_CURSOR_NORMAL;
static PyObject *__pyx_n_s_DECORATED;
static PyObject *__pyx_n_s_DEPTH_BITS;
static PyObject *__pyx_n_s_DISCONNECTED;
static PyObject *__pyx_n_s_DONT_CARE;
static PyObject *__pyx_n_s_DOUBLEBUFFER;
static PyObject *__pyx_n_s_EGL_CONTEXT_API;
static PyObject *__pyx_n_s_FALSE;
static PyObject *__pyx_n_s_FLOATING;
static PyObject *__pyx_n_s_FOCUSED;
static PyObject *__pyx_n_s_FOCUS_ON_SHOW;
static PyObject *__pyx_n_s_FORMAT_UNAVAILABLE;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_LAST;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_X;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_Y;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_X;
static PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_A;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_B;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_BACK;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_CIRCLE;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_CROSS;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_GUIDE;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_LAST;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_SQUARE;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_START;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_X;
static PyObject *__pyx_n_s_GAMEPAD_BUTTON_Y;
static PyObject *__pyx_n_s_GREEN_BITS;
static PyObject *__pyx_n_s_HAND_CURSOR;
static PyObject *__pyx_n_s_HAT_CENTERED;
static PyObject *__pyx_n_s_HAT_DOWN;
static PyObject *__pyx_n_s_HAT_LEFT;
static PyObject *__pyx_n_s_HAT_LEFT_DOWN;
static PyObject *__pyx_n_s_HAT_LEFT_UP;
static PyObject *__pyx_n_s_HAT_RIGHT;
static PyObject *__pyx_n_s_HAT_RIGHT_DOWN;
static PyObject *__pyx_n_s_HAT_RIGHT_UP;
static PyObject *__pyx_n_s_HAT_UP;
static PyObject *__pyx_n_s_HOVERED;
static PyObject *__pyx_n_s_HRESIZE_CURSOR;
static PyObject *__pyx_n_s_IBEAM_CURSOR;
static PyObject *__pyx_n_s_ICONIFIED;
static PyObject *__pyx_n_s_INVALID_ENUM;
static PyObject *__pyx_n_s_INVALID_VALUE;
static PyObject *__pyx_n_s_JOYSTICK_1;
static PyObject *__pyx_n_s_JOYSTICK_10;
static PyObject *__pyx_n_s_JOYSTICK_11;
static PyObject *__pyx_n_s_JOYSTICK_12;
static PyObject *__pyx_n_s_JOYSTICK_13;
static PyObject *__pyx_n_s_JOYSTICK_14;
static PyObject *__pyx_n_s_JOYSTICK_15;
static PyObject *__pyx_n_s_JOYSTICK_16;
static PyObject *__pyx_n_s_JOYSTICK_2;
static PyObject *__pyx_n_s_JOYSTICK_3;
static PyObject *__pyx_n_s_JOYSTICK_4;
static PyObject *__pyx_n_s_JOYSTICK_5;
static PyObject *__pyx_n_s_JOYSTICK_6;
static PyObject *__pyx_n_s_JOYSTICK_7;
static PyObject *__pyx_n_s_JOYSTICK_8;
static PyObject *__pyx_n_s_JOYSTICK_9;
static PyObject *__pyx_n_s_JOYSTICK_HAT_BUTTONS;
static PyObject *__pyx_n_s_JOYSTICK_LAST;
static PyObject *__pyx_n_s_KEY_0;
static PyObject *__pyx_n_s_KEY_1;
static PyObject *__pyx_n_s_KEY_2;
static PyObject *__pyx_n_s_KEY_3;
static PyObject *__pyx_n_s_KEY_4;
static PyObject *__pyx_n_s_KEY_5;
static PyObject *__pyx_n_s_KEY_6;
static PyObject *__pyx_n_s_KEY_7;
static PyObject *__pyx_n_s_KEY_8;
static PyObject *__pyx_n_s_KEY_9;
static PyObject *__pyx_n_s_KEY_A;
static PyObject *__pyx_n_s_KEY_APOSTROPHE;
static PyObject *__pyx_n_s_KEY_B;
static PyObject *__pyx_n_s_KEY_BACKSLASH;
static PyObject *__pyx_n_s_KEY_BACKSPACE;
static PyObject *__pyx_n_s_KEY_C;
static PyObject *__pyx_n_s_KEY_CAPS_LOCK;
static PyObject *__pyx_n_s_KEY_COMMA;
static PyObject *__pyx_n_s_KEY_D;
static PyObject *__pyx_n_s_KEY_DELETE;
static PyObject *__pyx_n_s_KEY_DOWN;
static PyObject *__pyx_n_s_KEY_E;
static PyObject *__pyx_n_s_KEY_END;
static PyObject *__pyx_n_s_KEY_ENTER;
static PyObject *__pyx_n_s_KEY_EQUAL;
static PyObject *__pyx_n_s_KEY_ESCAPE;
static PyObject *__pyx_n_s_KEY_F;
static PyObject *__pyx_n_s_KEY_F1;
static PyObject *__pyx_n_s_KEY_F10;
static PyObject *__pyx_n_s_KEY_F11;
static PyObject *__pyx_n_s_KEY_F12;
static PyObject *__pyx_n_s_KEY_F13;
static PyObject *__pyx_n_s_KEY_F14;
static PyObject *__pyx_n_s_KEY_F15;
static PyObject *__pyx_n_s_KEY_F16;
static PyObject *__pyx_n_s_KEY_F17;
static PyObject *__pyx_n_s_KEY_F18;
static PyObject *__pyx_n_s_KEY_F19;
static PyObject *__pyx_n_s_KEY_F2;
static PyObject *__pyx_n_s_KEY_F20;
static PyObject *__pyx_n_s_KEY_F21;
static PyObject *__pyx_n_s_KEY_F22;
static PyObject *__pyx_n_s_KEY_F23;
static PyObject *__pyx_n_s_KEY_F24;
static PyObject *__pyx_n_s_KEY_F25;
static PyObject *__pyx_n_s_KEY_F3;
static PyObject *__pyx_n_s_KEY_F4;
static PyObject *__pyx_n_s_KEY_F5;
static PyObject *__pyx_n_s_KEY_F6;
static PyObject *__pyx_n_s_KEY_F7;
static PyObject *__pyx_n_s_KEY_F8;
static PyObject *__pyx_n_s_KEY_F9;
static PyObject *__pyx_n_s_KEY_G;
static PyObject *__pyx_n_s_KEY_GRAVE_ACCENT;
static PyObject *__pyx_n_s_KEY_H;
static PyObject *__pyx_n_s_KEY_HOME;
static PyObject *__pyx_n_s_KEY_I;
static PyObject *__pyx_n_s_KEY_INSERT;
static PyObject *__pyx_n_s_KEY_J;
static PyObject *__pyx_n_s_KEY_K;
static PyObject *__pyx_n_s_KEY_KP_0;
static PyObject *__pyx_n_s_KEY_KP_1;
static PyObject *__pyx_n_s_KEY_KP_2;
static PyObject *__pyx_n_s_KEY_KP_3;
static PyObject *__pyx_n_s_KEY_KP_4;
static PyObject *__pyx_n_s_KEY_KP_5;
static PyObject *__pyx_n_s_KEY_KP_6;
static PyObject *__pyx_n_s_KEY_KP_7;
static PyObject *__pyx_n_s_KEY_KP_8;
static PyObject *__pyx_n_s_KEY_KP_9;
static PyObject *__pyx_n_s_KEY_KP_ADD;
static PyObject *__pyx_n_s_KEY_KP_DECIMAL;
static PyObject *__pyx_n_s_KEY_KP_DIVIDE;
static PyObject *__pyx_n_s_KEY_KP_ENTER;
static PyObject *__pyx_n_s_KEY_KP_EQUAL;
static PyObject *__pyx_n_s_KEY_KP_MULTIPLY;
static PyObject *__pyx_n_s_KEY_KP_SUBTRACT;
static PyObject *__pyx_n_s_KEY_L;
static PyObject *__pyx_n_s_KEY_LAST;
static PyObject *__pyx_n_s_KEY_LEFT;
static PyObject *__pyx_n_s_KEY_LEFT_ALT;
static PyObject *__pyx_n_s_KEY_LEFT_BRACKET;
static PyObject *__pyx_n_s_KEY_LEFT_CONTROL;
static PyObject *__pyx_n_s_KEY_LEFT_SHIFT;
static PyObject *__pyx_n_s_KEY_LEFT_SUPER;
static PyObject *__pyx_n_s_KEY_M;
static PyObject *__pyx_n_s_KEY_MENU;
static PyObject *__pyx_n_s_KEY_MINUS;
static PyObject *__pyx_n_s_KEY_N;
static PyObject *__pyx_n_s_KEY_NUM_LOCK;
static PyObject *__pyx_n_s_KEY_O;
static PyObject *__pyx_n_s_KEY_P;
static PyObject *__pyx_n_s_KEY_PAGE_DOWN;
static PyObject *__pyx_n_s_KEY_PAGE_UP;
static PyObject *__pyx_n_s_KEY_PAUSE;
static PyObject *__pyx_n_s_KEY_PERIOD;
static PyObject *__pyx_n_s_KEY_PRINT_SCREEN;
static PyObject *__pyx_n_s_KEY_Q;
static PyObject *__pyx_n_s_KEY_R;
static PyObject *__pyx_n_s_KEY_RIGHT;
static PyObject *__pyx_n_s_KEY_RIGHT_ALT;
static PyObject *__pyx_n_s_KEY_RIGHT_BRACKET;
static PyObject *__pyx_n_s_KEY_RIGHT_CONTROL;
static PyObject *__pyx_n_s_KEY_RIGHT_SHIFT;
static PyObject *__pyx_n_s_KEY_RIGHT_SUPER;
static PyObject *__pyx_n_s_KEY_S;
static PyObject *__pyx_n_s_KEY_SCROLL_LOCK;
static PyObject *__pyx_n_s_KEY_SEMICOLON;
static PyObject *__pyx_n_s_KEY_SLASH;
static PyObject *__pyx_n_s_KEY_SPACE;
static PyObject *__pyx_n_s_KEY_T;
static PyObject *__pyx_n_s_KEY_TAB;
static PyObject *__pyx_n_s_KEY_U;
static PyObject *__pyx_n_s_KEY_UNKNOWN;
static PyObject *__pyx_n_s_KEY_UP;
static PyObject *__pyx_n_s_KEY_V;
static PyObject *__pyx_n_s_KEY_W;
static PyObject *__pyx_n_s_KEY_WORLD_1;
static PyObject *__pyx_n_s_KEY_WORLD_2;
static PyObject *__pyx_n_s_KEY_X;
static PyObject *__pyx_n_s_KEY_Y;
static PyObject *__pyx_n_s_KEY_Z;
static PyObject *__pyx_n_s_LOCK_KEY_MODS;
static PyObject *__pyx_n_s_LOSE_CONTEXT_ON_RESET;
static PyObject *__pyx_n_s_MAXIMIZED;
static PyObject *__pyx_n_s_MOD_ALT;
static PyObject *__pyx_n_s_MOD_CAPS_LOCK;
static PyObject *__pyx_n_s_MOD_CONTROL;
static PyObject *__pyx_n_s_MOD_NUM_LOCK;
static PyObject *__pyx_n_s_MOD_SHIFT;
static PyObject *__pyx_n_s_MOD_SUPER;
static PyObject *__pyx_n_s_MOUSE_BUTTON_1;
static PyObject *__pyx_n_s_MOUSE_BUTTON_2;
static PyObject *__pyx_n_s_MOUSE_BUTTON_3;
static PyObject *__pyx_n_s_MOUSE_BUTTON_4;
static PyObject *__pyx_n_s_MOUSE_BUTTON_5;
static PyObject *__pyx_n_s_MOUSE_BUTTON_6;
static PyObject *__pyx_n_s_MOUSE_BUTTON_7;
static PyObject *__pyx_n_s_MOUSE_BUTTON_8;
static PyObject *__pyx_n_s_MOUSE_BUTTON_LAST;
static PyObject *__pyx_n_s_MOUSE_BUTTON_LEFT;
static PyObject *__pyx_n_s_MOUSE_BUTTON_MIDDLE;
static PyObject *__pyx_n_s_MOUSE_BUTTON_RIGHT;
static PyObject *__pyx_n_s_NATIVE_CONTEXT_API;
static PyObject *__pyx_n_s_NOT_INITIALIZED;
static PyObject *__pyx_n_s_NO_API;
static PyObject *__pyx_n_s_NO_CURRENT_CONTEXT;
static PyObject *__pyx_n_s_NO_ERROR;
static PyObject *__pyx_n_s_NO_RESET_NOTIFICATION;
static PyObject *__pyx_n_s_NO_ROBUSTNESS;
static PyObject *__pyx_n_s_NO_WINDOW_CONTEXT;
static PyObject *__pyx_n_s_OPENGL_ANY_PROFILE;
static PyObject *__pyx_n_s_OPENGL_API;
static PyObject *__pyx_n_s_OPENGL_COMPAT_PROFILE;
static PyObject *__pyx_n_s_OPENGL_CORE_PROFILE;
static PyObject *__pyx_n_s_OPENGL_DEBUG_CONTEXT;
static PyObject *__pyx_n_s_OPENGL_ES_API;
static PyObject *__pyx_n_s_OPENGL_FORWARD_COMPAT;
static PyObject *__pyx_n_s_OPENGL_PROFILE;
static PyObject *__pyx_n_s_OSMESA_CONTEXT_API;
static PyObject *__pyx_n_s_OUT_OF_MEMORY;
static PyObject *__pyx_n_s_PLATFORM_ERROR;
static PyObject *__pyx_n_s_PRESS;
static PyObject *__pyx_n_s_RAW_MOUSE_MOTION;
static PyObject *__pyx_n_s_RED_BITS;
static PyObject *__pyx_n_s_REFRESH_RATE;
static PyObject *__pyx_n_s_RELEASE;
static PyObject *__pyx_n_s_RELEASE_BEHAVIOR_FLUSH;
static PyObject *__pyx_n_s_RELEASE_BEHAVIOR_NONE;
static PyObject *__pyx_n_s_REPEAT;
static PyObject *__pyx_n_s_RESIZABLE;
static PyObject *__pyx_n_s_SAMPLES;
static PyObject *__pyx_n_s_SCALE_TO_MONITOR;
static PyObject *__pyx_n_s_SRGB_CAPABLE;
static PyObject *__pyx_n_s_STENCIL_BITS;
static PyObject *__pyx_n_s_STEREO;
static PyObject *__pyx_n_s_STICKY_KEYS;
static PyObject *__pyx_n_s_STICKY_MOUSE_BUTTONS;
static PyObject *__pyx_n_s_TRANSPARENT_FRAMEBUFFER;
static PyObject *__pyx_n_s_TRUE;
static PyObject *__pyx_n_s_VERSION_MAJOR;
static PyObject *__pyx_n_s_VERSION_MINOR;
static PyObject *__pyx_n_s_VERSION_REVISION;
static PyObject *__pyx_n_s_VERSION_UNAVAILABLE;
static PyObject *__pyx_n_s_VISIBLE;
static PyObject *__pyx_n_s_VRESIZE_CURSOR;
static PyObject *__pyx_n_s_X11_CLASS_NAME;
static PyObject *__pyx_n_s_X11_INSTANCE_NAME;
static PyObject *__pyx_n_s_cline_in_traceback;
static PyObject *__pyx_n_s_main;
static PyObject *__pyx_n_s_name;
static PyObject *__pyx_n_s_test;
#endif
/* #### Code section: decls ### */
#if !CYTHON_USE_MODULE_STATE
#endif
#if !CYTHON_USE_MODULE_STATE
#endif
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
#if CYTHON_USE_MODULE_STATE
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  PyObject *__pyx_n_s_;
  PyObject *__pyx_n_s_ACCUM_ALPHA_BITS;
  PyObject *__pyx_n_s_ACCUM_BLUE_BITS;
  PyObject *__pyx_n_s_ACCUM_GREEN_BITS;
  PyObject *__pyx_n_s_ACCUM_RED_BITS;
  PyObject *__pyx_n_s_ALPHA_BITS;
  PyObject *__pyx_n_s_ANY_RELEASE_BEHAVIOR;
  PyObject *__pyx_n_s_API_UNAVAILABLE;
  PyObject *__pyx_n_s_ARROW_CURSOR;
  PyObject *__pyx_n_s_AUTO_ICONIFY;
  PyObject *__pyx_n_s_AUX_BUFFERS;
  PyObject *__pyx_n_s_BLUE_BITS;
  PyObject *__pyx_n_s_CENTER_CURSOR;
  PyObject *__pyx_n_s_CLIENT_API;
  PyObject *__pyx_n_s_COCOA_CHDIR_RESOURCES;
  PyObject *__pyx_n_s_COCOA_FRAME_NAME;
  PyObject *__pyx_n_s_COCOA_GRAPHICS_SWITCHING;
  PyObject *__pyx_n_s_COCOA_MENUBAR;
  PyObject *__pyx_n_s_COCOA_RETINA_FRAMEBUFFER;
  PyObject *__pyx_n_s_CONNECTED;
  PyObject *__pyx_n_s_CONTEXT_CREATION_API;
  PyObject *__pyx_n_s_CONTEXT_NO_ERROR;
  PyObject *__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR;
  PyObject *__pyx_n_s_CONTEXT_REVISION;
  PyObject *__pyx_n_s_CONTEXT_ROBUSTNESS;
  PyObject *__pyx_n_s_CONTEXT_VERSION_MAJOR;
  PyObject *__pyx_n_s_CONTEXT_VERSION_MINOR;
  PyObject *__pyx_n_s_CROSSHAIR_CURSOR;
  PyObject *__pyx_n_s_CURSOR;
  PyObject *__pyx_n_s_CURSOR_DISABLED;
  PyObject *__pyx_n_s_CURSOR_HIDDEN;
  PyObject *__pyx_n_s_CURSOR_NORMAL;
  PyObject *__pyx_n_s_DECORATED;
  PyObject *__pyx_n_s_DEPTH_BITS;
  PyObject *__pyx_n_s_DISCONNECTED;
  PyObject *__pyx_n_s_DONT_CARE;
  PyObject *__pyx_n_s_DOUBLEBUFFER;
  PyObject *__pyx_n_s_EGL_CONTEXT_API;
  PyObject *__pyx_n_s_FALSE;
  PyObject *__pyx_n_s_FLOATING;
  PyObject *__pyx_n_s_FOCUSED;
  PyObject *__pyx_n_s_FOCUS_ON_SHOW;
  PyObject *__pyx_n_s_FORMAT_UNAVAILABLE;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_LAST;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_X;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_LEFT_Y;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_X;
  PyObject *__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_A;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_B;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_BACK;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_CIRCLE;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_CROSS;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_GUIDE;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_LAST;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_SQUARE;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_START;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_X;
  PyObject *__pyx_n_s_GAMEPAD_BUTTON_Y;
  PyObject *__pyx_n_s_GREEN_BITS;
  PyObject *__pyx_n_s_HAND_CURSOR;
  PyObject *__pyx_n_s_HAT_CENTERED;
  PyObject *__pyx_n_s_HAT_DOWN;
  PyObject *__pyx_n_s_HAT_LEFT;
  PyObject *__pyx_n_s_HAT_LEFT_DOWN;
  PyObject *__pyx_n_s_HAT_LEFT_UP;
  PyObject *__pyx_n_s_HAT_RIGHT;
  PyObject *__pyx_n_s_HAT_RIGHT_DOWN;
  PyObject *__pyx_n_s_HAT_RIGHT_UP;
  PyObject *__pyx_n_s_HAT_UP;
  PyObject *__pyx_n_s_HOVERED;
  PyObject *__pyx_n_s_HRESIZE_CURSOR;
  PyObject *__pyx_n_s_IBEAM_CURSOR;
  PyObject *__pyx_n_s_ICONIFIED;
  PyObject *__pyx_n_s_INVALID_ENUM;
  PyObject *__pyx_n_s_INVALID_VALUE;
  PyObject *__pyx_n_s_JOYSTICK_1;
  PyObject *__pyx_n_s_JOYSTICK_10;
  PyObject *__pyx_n_s_JOYSTICK_11;
  PyObject *__pyx_n_s_JOYSTICK_12;
  PyObject *__pyx_n_s_JOYSTICK_13;
  PyObject *__pyx_n_s_JOYSTICK_14;
  PyObject *__pyx_n_s_JOYSTICK_15;
  PyObject *__pyx_n_s_JOYSTICK_16;
  PyObject *__pyx_n_s_JOYSTICK_2;
  PyObject *__pyx_n_s_JOYSTICK_3;
  PyObject *__pyx_n_s_JOYSTICK_4;
  PyObject *__pyx_n_s_JOYSTICK_5;
  PyObject *__pyx_n_s_JOYSTICK_6;
  PyObject *__pyx_n_s_JOYSTICK_7;
  PyObject *__pyx_n_s_JOYSTICK_8;
  PyObject *__pyx_n_s_JOYSTICK_9;
  PyObject *__pyx_n_s_JOYSTICK_HAT_BUTTONS;
  PyObject *__pyx_n_s_JOYSTICK_LAST;
  PyObject *__pyx_n_s_KEY_0;
  PyObject *__pyx_n_s_KEY_1;
  PyObject *__pyx_n_s_KEY_2;
  PyObject *__pyx_n_s_KEY_3;
  PyObject *__pyx_n_s_KEY_4;
  PyObject *__pyx_n_s_KEY_5;
  PyObject *__pyx_n_s_KEY_6;
  PyObject *__pyx_n_s_KEY_7;
  PyObject *__pyx_n_s_KEY_8;
  PyObject *__pyx_n_s_KEY_9;
  PyObject *__pyx_n_s_KEY_A;
  PyObject *__pyx_n_s_KEY_APOSTROPHE;
  PyObject *__pyx_n_s_KEY_B;
  PyObject *__pyx_n_s_KEY_BACKSLASH;
  PyObject *__pyx_n_s_KEY_BACKSPACE;
  PyObject *__pyx_n_s_KEY_C;
  PyObject *__pyx_n_s_KEY_CAPS_LOCK;
  PyObject *__pyx_n_s_KEY_COMMA;
  PyObject *__pyx_n_s_KEY_D;
  PyObject *__pyx_n_s_KEY_DELETE;
  PyObject *__pyx_n_s_KEY_DOWN;
  PyObject *__pyx_n_s_KEY_E;
  PyObject *__pyx_n_s_KEY_END;
  PyObject *__pyx_n_s_KEY_ENTER;
  PyObject *__pyx_n_s_KEY_EQUAL;
  PyObject *__pyx_n_s_KEY_ESCAPE;
  PyObject *__pyx_n_s_KEY_F;
  PyObject *__pyx_n_s_KEY_F1;
  PyObject *__pyx_n_s_KEY_F10;
  PyObject *__pyx_n_s_KEY_F11;
  PyObject *__pyx_n_s_KEY_F12;
  PyObject *__pyx_n_s_KEY_F13;
  PyObject *__pyx_n_s_KEY_F14;
  PyObject *__pyx_n_s_KEY_F15;
  PyObject *__pyx_n_s_KEY_F16;
  PyObject *__pyx_n_s_KEY_F17;
  PyObject *__pyx_n_s_KEY_F18;
  PyObject *__pyx_n_s_KEY_F19;
  PyObject *__pyx_n_s_KEY_F2;
  PyObject *__pyx_n_s_KEY_F20;
  PyObject *__pyx_n_s_KEY_F21;
  PyObject *__pyx_n_s_KEY_F22;
  PyObject *__pyx_n_s_KEY_F23;
  PyObject *__pyx_n_s_KEY_F24;
  PyObject *__pyx_n_s_KEY_F25;
  PyObject *__pyx_n_s_KEY_F3;
  PyObject *__pyx_n_s_KEY_F4;
  PyObject *__pyx_n_s_KEY_F5;
  PyObject *__pyx_n_s_KEY_F6;
  PyObject *__pyx_n_s_KEY_F7;
  PyObject *__pyx_n_s_KEY_F8;
  PyObject *__pyx_n_s_KEY_F9;
  PyObject *__pyx_n_s_KEY_G;
  PyObject *__pyx_n_s_KEY_GRAVE_ACCENT;
  PyObject *__pyx_n_s_KEY_H;
  PyObject *__pyx_n_s_KEY_HOME;
  PyObject *__pyx_n_s_KEY_I;
  PyObject *__pyx_n_s_KEY_INSERT;
  PyObject *__pyx_n_s_KEY_J;
  PyObject *__pyx_n_s_KEY_K;
  PyObject *__pyx_n_s_KEY_KP_0;
  PyObject *__pyx_n_s_KEY_KP_1;
  PyObject *__pyx_n_s_KEY_KP_2;
  PyObject *__pyx_n_s_KEY_KP_3;
  PyObject *__pyx_n_s_KEY_KP_4;
  PyObject *__pyx_n_s_KEY_KP_5;
  PyObject *__pyx_n_s_KEY_KP_6;
  PyObject *__pyx_n_s_KEY_KP_7;
  PyObject *__pyx_n_s_KEY_KP_8;
  PyObject *__pyx_n_s_KEY_KP_9;
  PyObject *__pyx_n_s_KEY_KP_ADD;
  PyObject *__pyx_n_s_KEY_KP_DECIMAL;
  PyObject *__pyx_n_s_KEY_KP_DIVIDE;
  PyObject *__pyx_n_s_KEY_KP_ENTER;
  PyObject *__pyx_n_s_KEY_KP_EQUAL;
  PyObject *__pyx_n_s_KEY_KP_MULTIPLY;
  PyObject *__pyx_n_s_KEY_KP_SUBTRACT;
  PyObject *__pyx_n_s_KEY_L;
  PyObject *__pyx_n_s_KEY_LAST;
  PyObject *__pyx_n_s_KEY_LEFT;
  PyObject *__pyx_n_s_KEY_LEFT_ALT;
  PyObject *__pyx_n_s_KEY_LEFT_BRACKET;
  PyObject *__pyx_n_s_KEY_LEFT_CONTROL;
  PyObject *__pyx_n_s_KEY_LEFT_SHIFT;
  PyObject *__pyx_n_s_KEY_LEFT_SUPER;
  PyObject *__pyx_n_s_KEY_M;
  PyObject *__pyx_n_s_KEY_MENU;
  PyObject *__pyx_n_s_KEY_MINUS;
  PyObject *__pyx_n_s_KEY_N;
  PyObject *__pyx_n_s_KEY_NUM_LOCK;
  PyObject *__pyx_n_s_KEY_O;
  PyObject *__pyx_n_s_KEY_P;
  PyObject *__pyx_n_s_KEY_PAGE_DOWN;
  PyObject *__pyx_n_s_KEY_PAGE_UP;
  PyObject *__pyx_n_s_KEY_PAUSE;
  PyObject *__pyx_n_s_KEY_PERIOD;
  PyObject *__pyx_n_s_KEY_PRINT_SCREEN;
  PyObject *__pyx_n_s_KEY_Q;
  PyObject *__pyx_n_s_KEY_R;
  PyObject *__pyx_n_s_KEY_RIGHT;
  PyObject *__pyx_n_s_KEY_RIGHT_ALT;
  PyObject *__pyx_n_s_KEY_RIGHT_BRACKET;
  PyObject *__pyx_n_s_KEY_RIGHT_CONTROL;
  PyObject *__pyx_n_s_KEY_RIGHT_SHIFT;
  PyObject *__pyx_n_s_KEY_RIGHT_SUPER;
  PyObject *__pyx_n_s_KEY_S;
  PyObject *__pyx_n_s_KEY_SCROLL_LOCK;
  PyObject *__pyx_n_s_KEY_SEMICOLON;
  PyObject *__pyx_n_s_KEY_SLASH;
  PyObject *__pyx_n_s_KEY_SPACE;
  PyObject *__pyx_n_s_KEY_T;
  PyObject *__pyx_n_s_KEY_TAB;
  PyObject *__pyx_n_s_KEY_U;
  PyObject *__pyx_n_s_KEY_UNKNOWN;
  PyObject *__pyx_n_s_KEY_UP;
  PyObject *__pyx_n_s_KEY_V;
  PyObject *__pyx_n_s_KEY_W;
  PyObject *__pyx_n_s_KEY_WORLD_1;
  PyObject *__pyx_n_s_KEY_WORLD_2;
  PyObject *__pyx_n_s_KEY_X;
  PyObject *__pyx_n_s_KEY_Y;
  PyObject *__pyx_n_s_KEY_Z;
  PyObject *__pyx_n_s_LOCK_KEY_MODS;
  PyObject *__pyx_n_s_LOSE_CONTEXT_ON_RESET;
  PyObject *__pyx_n_s_MAXIMIZED;
  PyObject *__pyx_n_s_MOD_ALT;
  PyObject *__pyx_n_s_MOD_CAPS_LOCK;
  PyObject *__pyx_n_s_MOD_CONTROL;
  PyObject *__pyx_n_s_MOD_NUM_LOCK;
  PyObject *__pyx_n_s_MOD_SHIFT;
  PyObject *__pyx_n_s_MOD_SUPER;
  PyObject *__pyx_n_s_MOUSE_BUTTON_1;
  PyObject *__pyx_n_s_MOUSE_BUTTON_2;
  PyObject *__pyx_n_s_MOUSE_BUTTON_3;
  PyObject *__pyx_n_s_MOUSE_BUTTON_4;
  PyObject *__pyx_n_s_MOUSE_BUTTON_5;
  PyObject *__pyx_n_s_MOUSE_BUTTON_6;
  PyObject *__pyx_n_s_MOUSE_BUTTON_7;
  PyObject *__pyx_n_s_MOUSE_BUTTON_8;
  PyObject *__pyx_n_s_MOUSE_BUTTON_LAST;
  PyObject *__pyx_n_s_MOUSE_BUTTON_LEFT;
  PyObject *__pyx_n_s_MOUSE_BUTTON_MIDDLE;
  PyObject *__pyx_n_s_MOUSE_BUTTON_RIGHT;
  PyObject *__pyx_n_s_NATIVE_CONTEXT_API;
  PyObject *__pyx_n_s_NOT_INITIALIZED;
  PyObject *__pyx_n_s_NO_API;
  PyObject *__pyx_n_s_NO_CURRENT_CONTEXT;
  PyObject *__pyx_n_s_NO_ERROR;
  PyObject *__pyx_n_s_NO_RESET_NOTIFICATION;
  PyObject *__pyx_n_s_NO_ROBUSTNESS;
  PyObject *__pyx_n_s_NO_WINDOW_CONTEXT;
  PyObject *__pyx_n_s_OPENGL_ANY_PROFILE;
  PyObject *__pyx_n_s_OPENGL_API;
  PyObject *__pyx_n_s_OPENGL_COMPAT_PROFILE;
  PyObject *__pyx_n_s_OPENGL_CORE_PROFILE;
  PyObject *__pyx_n_s_OPENGL_DEBUG_CONTEXT;
  PyObject *__pyx_n_s_OPENGL_ES_API;
  PyObject *__pyx_n_s_OPENGL_FORWARD_COMPAT;
  PyObject *__pyx_n_s_OPENGL_PROFILE;
  PyObject *__pyx_n_s_OSMESA_CONTEXT_API;
  PyObject *__pyx_n_s_OUT_OF_MEMORY;
  PyObject *__pyx_n_s_PLATFORM_ERROR;
  PyObject *__pyx_n_s_PRESS;
  PyObject *__pyx_n_s_RAW_MOUSE_MOTION;
  PyObject *__pyx_n_s_RED_BITS;
  PyObject *__pyx_n_s_REFRESH_RATE;
  PyObject *__pyx_n_s_RELEASE;
  PyObject *__pyx_n_s_RELEASE_BEHAVIOR_FLUSH;
  PyObject *__pyx_n_s_RELEASE_BEHAVIOR_NONE;
  PyObject *__pyx_n_s_REPEAT;
  PyObject *__pyx_n_s_RESIZABLE;
  PyObject *__pyx_n_s_SAMPLES;
  PyObject *__pyx_n_s_SCALE_TO_MONITOR;
  PyObject *__pyx_n_s_SRGB_CAPABLE;
  PyObject *__pyx_n_s_STENCIL_BITS;
  PyObject *__pyx_n_s_STEREO;
  PyObject *__pyx_n_s_STICKY_KEYS;
  PyObject *__pyx_n_s_STICKY_MOUSE_BUTTONS;
  PyObject *__pyx_n_s_TRANSPARENT_FRAMEBUFFER;
  PyObject *__pyx_n_s_TRUE;
  PyObject *__pyx_n_s_VERSION_MAJOR;
  PyObject *__pyx_n_s_VERSION_MINOR;
  PyObject *__pyx_n_s_VERSION_REVISION;
  PyObject *__pyx_n_s_VERSION_UNAVAILABLE;
  PyObject *__pyx_n_s_VISIBLE;
  PyObject *__pyx_n_s_VRESIZE_CURSOR;
  PyObject *__pyx_n_s_X11_CLASS_NAME;
  PyObject *__pyx_n_s_X11_INSTANCE_NAME;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_test;
} __pyx_mstate;

#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_n_s_);
  Py_CLEAR(clear_module_state->__pyx_n_s_ACCUM_ALPHA_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ACCUM_BLUE_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ACCUM_GREEN_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ACCUM_RED_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ALPHA_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_ANY_RELEASE_BEHAVIOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_API_UNAVAILABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_ARROW_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_AUTO_ICONIFY);
  Py_CLEAR(clear_module_state->__pyx_n_s_AUX_BUFFERS);
  Py_CLEAR(clear_module_state->__pyx_n_s_BLUE_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_CENTER_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CLIENT_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_COCOA_CHDIR_RESOURCES);
  Py_CLEAR(clear_module_state->__pyx_n_s_COCOA_FRAME_NAME);
  Py_CLEAR(clear_module_state->__pyx_n_s_COCOA_GRAPHICS_SWITCHING);
  Py_CLEAR(clear_module_state->__pyx_n_s_COCOA_MENUBAR);
  Py_CLEAR(clear_module_state->__pyx_n_s_COCOA_RETINA_FRAMEBUFFER);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONNECTED);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_CREATION_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_NO_ERROR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_REVISION);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_ROBUSTNESS);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_VERSION_MAJOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CONTEXT_VERSION_MINOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CROSSHAIR_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_CURSOR_DISABLED);
  Py_CLEAR(clear_module_state->__pyx_n_s_CURSOR_HIDDEN);
  Py_CLEAR(clear_module_state->__pyx_n_s_CURSOR_NORMAL);
  Py_CLEAR(clear_module_state->__pyx_n_s_DECORATED);
  Py_CLEAR(clear_module_state->__pyx_n_s_DEPTH_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_DISCONNECTED);
  Py_CLEAR(clear_module_state->__pyx_n_s_DONT_CARE);
  Py_CLEAR(clear_module_state->__pyx_n_s_DOUBLEBUFFER);
  Py_CLEAR(clear_module_state->__pyx_n_s_EGL_CONTEXT_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_FALSE);
  Py_CLEAR(clear_module_state->__pyx_n_s_FLOATING);
  Py_CLEAR(clear_module_state->__pyx_n_s_FOCUSED);
  Py_CLEAR(clear_module_state->__pyx_n_s_FOCUS_ON_SHOW);
  Py_CLEAR(clear_module_state->__pyx_n_s_FORMAT_UNAVAILABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_LAST);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_A);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_B);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_BACK);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_CIRCLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_CROSS);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_GUIDE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_LAST);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_SQUARE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_START);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_GAMEPAD_BUTTON_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_GREEN_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAND_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_CENTERED);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_LEFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_LEFT_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_LEFT_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_RIGHT);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_RIGHT_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_RIGHT_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_HAT_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_HOVERED);
  Py_CLEAR(clear_module_state->__pyx_n_s_HRESIZE_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_IBEAM_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_ICONIFIED);
  Py_CLEAR(clear_module_state->__pyx_n_s_INVALID_ENUM);
  Py_CLEAR(clear_module_state->__pyx_n_s_INVALID_VALUE);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_10);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_11);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_12);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_13);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_14);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_15);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_16);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_5);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_6);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_7);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_9);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_HAT_BUTTONS);
  Py_CLEAR(clear_module_state->__pyx_n_s_JOYSTICK_LAST);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_5);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_6);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_7);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_9);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_A);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_APOSTROPHE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_B);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_BACKSLASH);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_BACKSPACE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_C);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_CAPS_LOCK);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_COMMA);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_D);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_DELETE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_E);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_END);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_ENTER);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_EQUAL);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_ESCAPE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F1);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F10);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F11);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F12);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F13);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F14);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F15);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F16);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F17);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F18);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F19);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F2);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F20);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F21);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F22);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F23);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F24);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F25);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F3);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F4);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F5);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F6);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F7);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F8);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_F9);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_G);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_GRAVE_ACCENT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_H);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_HOME);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_I);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_INSERT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_J);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_K);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_5);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_6);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_7);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_9);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_ADD);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_DECIMAL);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_DIVIDE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_ENTER);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_EQUAL);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_MULTIPLY);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_KP_SUBTRACT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_L);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LAST);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT_ALT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT_BRACKET);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT_CONTROL);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT_SHIFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_LEFT_SUPER);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_M);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_MENU);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_MINUS);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_N);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_NUM_LOCK);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_O);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_P);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_PAGE_DOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_PAGE_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_PAUSE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_PERIOD);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_PRINT_SCREEN);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_Q);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_R);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT_ALT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT_BRACKET);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT_CONTROL);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT_SHIFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_RIGHT_SUPER);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_S);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_SCROLL_LOCK);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_SEMICOLON);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_SLASH);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_SPACE);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_T);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_TAB);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_U);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_UNKNOWN);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_UP);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_V);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_W);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_WORLD_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_WORLD_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s_KEY_Z);
  Py_CLEAR(clear_module_state->__pyx_n_s_LOCK_KEY_MODS);
  Py_CLEAR(clear_module_state->__pyx_n_s_LOSE_CONTEXT_ON_RESET);
  Py_CLEAR(clear_module_state->__pyx_n_s_MAXIMIZED);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_ALT);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_CAPS_LOCK);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_CONTROL);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_NUM_LOCK);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_SHIFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOD_SUPER);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_3);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_4);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_5);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_6);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_7);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_8);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_LAST);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_LEFT);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_MIDDLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_MOUSE_BUTTON_RIGHT);
  Py_CLEAR(clear_module_state->__pyx_n_s_NATIVE_CONTEXT_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_NOT_INITIALIZED);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_CURRENT_CONTEXT);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_ERROR);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_RESET_NOTIFICATION);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_ROBUSTNESS);
  Py_CLEAR(clear_module_state->__pyx_n_s_NO_WINDOW_CONTEXT);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_ANY_PROFILE);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_COMPAT_PROFILE);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_CORE_PROFILE);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_DEBUG_CONTEXT);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_ES_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_FORWARD_COMPAT);
  Py_CLEAR(clear_module_state->__pyx_n_s_OPENGL_PROFILE);
  Py_CLEAR(clear_module_state->__pyx_n_s_OSMESA_CONTEXT_API);
  Py_CLEAR(clear_module_state->__pyx_n_s_OUT_OF_MEMORY);
  Py_CLEAR(clear_module_state->__pyx_n_s_PLATFORM_ERROR);
  Py_CLEAR(clear_module_state->__pyx_n_s_PRESS);
  Py_CLEAR(clear_module_state->__pyx_n_s_RAW_MOUSE_MOTION);
  Py_CLEAR(clear_module_state->__pyx_n_s_RED_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_REFRESH_RATE);
  Py_CLEAR(clear_module_state->__pyx_n_s_RELEASE);
  Py_CLEAR(clear_module_state->__pyx_n_s_RELEASE_BEHAVIOR_FLUSH);
  Py_CLEAR(clear_module_state->__pyx_n_s_RELEASE_BEHAVIOR_NONE);
  Py_CLEAR(clear_module_state->__pyx_n_s_REPEAT);
  Py_CLEAR(clear_module_state->__pyx_n_s_RESIZABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_SAMPLES);
  Py_CLEAR(clear_module_state->__pyx_n_s_SCALE_TO_MONITOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_SRGB_CAPABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_STENCIL_BITS);
  Py_CLEAR(clear_module_state->__pyx_n_s_STEREO);
  Py_CLEAR(clear_module_state->__pyx_n_s_STICKY_KEYS);
  Py_CLEAR(clear_module_state->__pyx_n_s_STICKY_MOUSE_BUTTONS);
  Py_CLEAR(clear_module_state->__pyx_n_s_TRANSPARENT_FRAMEBUFFER);
  Py_CLEAR(clear_module_state->__pyx_n_s_TRUE);
  Py_CLEAR(clear_module_state->__pyx_n_s_VERSION_MAJOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_VERSION_MINOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_VERSION_REVISION);
  Py_CLEAR(clear_module_state->__pyx_n_s_VERSION_UNAVAILABLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_VISIBLE);
  Py_CLEAR(clear_module_state->__pyx_n_s_VRESIZE_CURSOR);
  Py_CLEAR(clear_module_state->__pyx_n_s_X11_CLASS_NAME);
  Py_CLEAR(clear_module_state->__pyx_n_s_X11_INSTANCE_NAME);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_n_s_);
  Py_VISIT(traverse_module_state->__pyx_n_s_ACCUM_ALPHA_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ACCUM_BLUE_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ACCUM_GREEN_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ACCUM_RED_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ALPHA_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_ANY_RELEASE_BEHAVIOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_API_UNAVAILABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_ARROW_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_AUTO_ICONIFY);
  Py_VISIT(traverse_module_state->__pyx_n_s_AUX_BUFFERS);
  Py_VISIT(traverse_module_state->__pyx_n_s_BLUE_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_CENTER_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CLIENT_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_COCOA_CHDIR_RESOURCES);
  Py_VISIT(traverse_module_state->__pyx_n_s_COCOA_FRAME_NAME);
  Py_VISIT(traverse_module_state->__pyx_n_s_COCOA_GRAPHICS_SWITCHING);
  Py_VISIT(traverse_module_state->__pyx_n_s_COCOA_MENUBAR);
  Py_VISIT(traverse_module_state->__pyx_n_s_COCOA_RETINA_FRAMEBUFFER);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONNECTED);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_CREATION_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_NO_ERROR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_REVISION);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_ROBUSTNESS);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_VERSION_MAJOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CONTEXT_VERSION_MINOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CROSSHAIR_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_CURSOR_DISABLED);
  Py_VISIT(traverse_module_state->__pyx_n_s_CURSOR_HIDDEN);
  Py_VISIT(traverse_module_state->__pyx_n_s_CURSOR_NORMAL);
  Py_VISIT(traverse_module_state->__pyx_n_s_DECORATED);
  Py_VISIT(traverse_module_state->__pyx_n_s_DEPTH_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_DISCONNECTED);
  Py_VISIT(traverse_module_state->__pyx_n_s_DONT_CARE);
  Py_VISIT(traverse_module_state->__pyx_n_s_DOUBLEBUFFER);
  Py_VISIT(traverse_module_state->__pyx_n_s_EGL_CONTEXT_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_FALSE);
  Py_VISIT(traverse_module_state->__pyx_n_s_FLOATING);
  Py_VISIT(traverse_module_state->__pyx_n_s_FOCUSED);
  Py_VISIT(traverse_module_state->__pyx_n_s_FOCUS_ON_SHOW);
  Py_VISIT(traverse_module_state->__pyx_n_s_FORMAT_UNAVAILABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_LAST);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_LEFT_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_A);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_B);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_BACK);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_CIRCLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_CROSS);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_GUIDE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_LAST);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_SQUARE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_START);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_GAMEPAD_BUTTON_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_GREEN_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAND_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_CENTERED);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_LEFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_LEFT_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_LEFT_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_RIGHT);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_RIGHT_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_RIGHT_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_HAT_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_HOVERED);
  Py_VISIT(traverse_module_state->__pyx_n_s_HRESIZE_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_IBEAM_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_ICONIFIED);
  Py_VISIT(traverse_module_state->__pyx_n_s_INVALID_ENUM);
  Py_VISIT(traverse_module_state->__pyx_n_s_INVALID_VALUE);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_10);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_11);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_12);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_13);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_14);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_15);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_16);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_5);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_6);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_7);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_9);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_HAT_BUTTONS);
  Py_VISIT(traverse_module_state->__pyx_n_s_JOYSTICK_LAST);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_5);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_6);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_7);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_9);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_A);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_APOSTROPHE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_B);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_BACKSLASH);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_BACKSPACE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_C);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_CAPS_LOCK);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_COMMA);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_D);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_DELETE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_E);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_END);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_ENTER);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_EQUAL);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_ESCAPE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F1);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F10);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F11);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F12);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F13);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F14);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F15);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F16);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F17);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F18);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F19);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F2);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F20);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F21);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F22);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F23);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F24);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F25);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F3);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F4);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F5);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F6);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F7);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F8);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_F9);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_G);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_GRAVE_ACCENT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_H);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_HOME);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_I);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_INSERT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_J);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_K);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_5);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_6);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_7);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_9);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_ADD);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_DECIMAL);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_DIVIDE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_ENTER);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_EQUAL);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_MULTIPLY);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_KP_SUBTRACT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_L);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LAST);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT_ALT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT_BRACKET);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT_CONTROL);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT_SHIFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_LEFT_SUPER);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_M);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_MENU);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_MINUS);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_N);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_NUM_LOCK);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_O);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_P);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_PAGE_DOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_PAGE_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_PAUSE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_PERIOD);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_PRINT_SCREEN);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_Q);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_R);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT_ALT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT_BRACKET);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT_CONTROL);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT_SHIFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_RIGHT_SUPER);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_S);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_SCROLL_LOCK);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_SEMICOLON);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_SLASH);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_SPACE);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_T);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_TAB);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_U);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_UNKNOWN);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_UP);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_V);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_W);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_WORLD_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_WORLD_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s_KEY_Z);
  Py_VISIT(traverse_module_state->__pyx_n_s_LOCK_KEY_MODS);
  Py_VISIT(traverse_module_state->__pyx_n_s_LOSE_CONTEXT_ON_RESET);
  Py_VISIT(traverse_module_state->__pyx_n_s_MAXIMIZED);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_ALT);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_CAPS_LOCK);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_CONTROL);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_NUM_LOCK);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_SHIFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOD_SUPER);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_3);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_4);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_5);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_6);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_7);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_8);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_LAST);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_LEFT);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_MIDDLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_MOUSE_BUTTON_RIGHT);
  Py_VISIT(traverse_module_state->__pyx_n_s_NATIVE_CONTEXT_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_NOT_INITIALIZED);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_CURRENT_CONTEXT);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_ERROR);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_RESET_NOTIFICATION);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_ROBUSTNESS);
  Py_VISIT(traverse_module_state->__pyx_n_s_NO_WINDOW_CONTEXT);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_ANY_PROFILE);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_COMPAT_PROFILE);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_CORE_PROFILE);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_DEBUG_CONTEXT);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_ES_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_FORWARD_COMPAT);
  Py_VISIT(traverse_module_state->__pyx_n_s_OPENGL_PROFILE);
  Py_VISIT(traverse_module_state->__pyx_n_s_OSMESA_CONTEXT_API);
  Py_VISIT(traverse_module_state->__pyx_n_s_OUT_OF_MEMORY);
  Py_VISIT(traverse_module_state->__pyx_n_s_PLATFORM_ERROR);
  Py_VISIT(traverse_module_state->__pyx_n_s_PRESS);
  Py_VISIT(traverse_module_state->__pyx_n_s_RAW_MOUSE_MOTION);
  Py_VISIT(traverse_module_state->__pyx_n_s_RED_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_REFRESH_RATE);
  Py_VISIT(traverse_module_state->__pyx_n_s_RELEASE);
  Py_VISIT(traverse_module_state->__pyx_n_s_RELEASE_BEHAVIOR_FLUSH);
  Py_VISIT(traverse_module_state->__pyx_n_s_RELEASE_BEHAVIOR_NONE);
  Py_VISIT(traverse_module_state->__pyx_n_s_REPEAT);
  Py_VISIT(traverse_module_state->__pyx_n_s_RESIZABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_SAMPLES);
  Py_VISIT(traverse_module_state->__pyx_n_s_SCALE_TO_MONITOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_SRGB_CAPABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_STENCIL_BITS);
  Py_VISIT(traverse_module_state->__pyx_n_s_STEREO);
  Py_VISIT(traverse_module_state->__pyx_n_s_STICKY_KEYS);
  Py_VISIT(traverse_module_state->__pyx_n_s_STICKY_MOUSE_BUTTONS);
  Py_VISIT(traverse_module_state->__pyx_n_s_TRANSPARENT_FRAMEBUFFER);
  Py_VISIT(traverse_module_state->__pyx_n_s_TRUE);
  Py_VISIT(traverse_module_state->__pyx_n_s_VERSION_MAJOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_VERSION_MINOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_VERSION_REVISION);
  Py_VISIT(traverse_module_state->__pyx_n_s_VERSION_UNAVAILABLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_VISIBLE);
  Py_VISIT(traverse_module_state->__pyx_n_s_VRESIZE_CURSOR);
  Py_VISIT(traverse_module_state->__pyx_n_s_X11_CLASS_NAME);
  Py_VISIT(traverse_module_state->__pyx_n_s_X11_INSTANCE_NAME);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#if CYTHON_USE_MODULE_STATE
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#define __pyx_n_s_ __pyx_mstate_global->__pyx_n_s_
#define __pyx_n_s_ACCUM_ALPHA_BITS __pyx_mstate_global->__pyx_n_s_ACCUM_ALPHA_BITS
#define __pyx_n_s_ACCUM_BLUE_BITS __pyx_mstate_global->__pyx_n_s_ACCUM_BLUE_BITS
#define __pyx_n_s_ACCUM_GREEN_BITS __pyx_mstate_global->__pyx_n_s_ACCUM_GREEN_BITS
#define __pyx_n_s_ACCUM_RED_BITS __pyx_mstate_global->__pyx_n_s_ACCUM_RED_BITS
#define __pyx_n_s_ALPHA_BITS __pyx_mstate_global->__pyx_n_s_ALPHA_BITS
#define __pyx_n_s_ANY_RELEASE_BEHAVIOR __pyx_mstate_global->__pyx_n_s_ANY_RELEASE_BEHAVIOR
#define __pyx_n_s_API_UNAVAILABLE __pyx_mstate_global->__pyx_n_s_API_UNAVAILABLE
#define __pyx_n_s_ARROW_CURSOR __pyx_mstate_global->__pyx_n_s_ARROW_CURSOR
#define __pyx_n_s_AUTO_ICONIFY __pyx_mstate_global->__pyx_n_s_AUTO_ICONIFY
#define __pyx_n_s_AUX_BUFFERS __pyx_mstate_global->__pyx_n_s_AUX_BUFFERS
#define __pyx_n_s_BLUE_BITS __pyx_mstate_global->__pyx_n_s_BLUE_BITS
#define __pyx_n_s_CENTER_CURSOR __pyx_mstate_global->__pyx_n_s_CENTER_CURSOR
#define __pyx_n_s_CLIENT_API __pyx_mstate_global->__pyx_n_s_CLIENT_API
#define __pyx_n_s_COCOA_CHDIR_RESOURCES __pyx_mstate_global->__pyx_n_s_COCOA_CHDIR_RESOURCES
#define __pyx_n_s_COCOA_FRAME_NAME __pyx_mstate_global->__pyx_n_s_COCOA_FRAME_NAME
#define __pyx_n_s_COCOA_GRAPHICS_SWITCHING __pyx_mstate_global->__pyx_n_s_COCOA_GRAPHICS_SWITCHING
#define __pyx_n_s_COCOA_MENUBAR __pyx_mstate_global->__pyx_n_s_COCOA_MENUBAR
#define __pyx_n_s_COCOA_RETINA_FRAMEBUFFER __pyx_mstate_global->__pyx_n_s_COCOA_RETINA_FRAMEBUFFER
#define __pyx_n_s_CONNECTED __pyx_mstate_global->__pyx_n_s_CONNECTED
#define __pyx_n_s_CONTEXT_CREATION_API __pyx_mstate_global->__pyx_n_s_CONTEXT_CREATION_API
#define __pyx_n_s_CONTEXT_NO_ERROR __pyx_mstate_global->__pyx_n_s_CONTEXT_NO_ERROR
#define __pyx_n_s_CONTEXT_RELEASE_BEHAVIOR __pyx_mstate_global->__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR
#define __pyx_n_s_CONTEXT_REVISION __pyx_mstate_global->__pyx_n_s_CONTEXT_REVISION
#define __pyx_n_s_CONTEXT_ROBUSTNESS __pyx_mstate_global->__pyx_n_s_CONTEXT_ROBUSTNESS
#define __pyx_n_s_CONTEXT_VERSION_MAJOR __pyx_mstate_global->__pyx_n_s_CONTEXT_VERSION_MAJOR
#define __pyx_n_s_CONTEXT_VERSION_MINOR __pyx_mstate_global->__pyx_n_s_CONTEXT_VERSION_MINOR
#define __pyx_n_s_CROSSHAIR_CURSOR __pyx_mstate_global->__pyx_n_s_CROSSHAIR_CURSOR
#define __pyx_n_s_CURSOR __pyx_mstate_global->__pyx_n_s_CURSOR
#define __pyx_n_s_CURSOR_DISABLED __pyx_mstate_global->__pyx_n_s_CURSOR_DISABLED
#define __pyx_n_s_CURSOR_HIDDEN __pyx_mstate_global->__pyx_n_s_CURSOR_HIDDEN
#define __pyx_n_s_CURSOR_NORMAL __pyx_mstate_global->__pyx_n_s_CURSOR_NORMAL
#define __pyx_n_s_DECORATED __pyx_mstate_global->__pyx_n_s_DECORATED
#define __pyx_n_s_DEPTH_BITS __pyx_mstate_global->__pyx_n_s_DEPTH_BITS
#define __pyx_n_s_DISCONNECTED __pyx_mstate_global->__pyx_n_s_DISCONNECTED
#define __pyx_n_s_DONT_CARE __pyx_mstate_global->__pyx_n_s_DONT_CARE
#define __pyx_n_s_DOUBLEBUFFER __pyx_mstate_global->__pyx_n_s_DOUBLEBUFFER
#define __pyx_n_s_EGL_CONTEXT_API __pyx_mstate_global->__pyx_n_s_EGL_CONTEXT_API
#define __pyx_n_s_FALSE __pyx_mstate_global->__pyx_n_s_FALSE
#define __pyx_n_s_FLOATING __pyx_mstate_global->__pyx_n_s_FLOATING
#define __pyx_n_s_FOCUSED __pyx_mstate_global->__pyx_n_s_FOCUSED
#define __pyx_n_s_FOCUS_ON_SHOW __pyx_mstate_global->__pyx_n_s_FOCUS_ON_SHOW
#define __pyx_n_s_FORMAT_UNAVAILABLE __pyx_mstate_global->__pyx_n_s_FORMAT_UNAVAILABLE
#define __pyx_n_s_GAMEPAD_AXIS_LAST __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_LAST
#define __pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER
#define __pyx_n_s_GAMEPAD_AXIS_LEFT_X __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_LEFT_X
#define __pyx_n_s_GAMEPAD_AXIS_LEFT_Y __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_LEFT_Y
#define __pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER
#define __pyx_n_s_GAMEPAD_AXIS_RIGHT_X __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_RIGHT_X
#define __pyx_n_s_GAMEPAD_AXIS_RIGHT_Y __pyx_mstate_global->__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y
#define __pyx_n_s_GAMEPAD_BUTTON_A __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_A
#define __pyx_n_s_GAMEPAD_BUTTON_B __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_B
#define __pyx_n_s_GAMEPAD_BUTTON_BACK __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_BACK
#define __pyx_n_s_GAMEPAD_BUTTON_CIRCLE __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_CIRCLE
#define __pyx_n_s_GAMEPAD_BUTTON_CROSS __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_CROSS
#define __pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN
#define __pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT
#define __pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT
#define __pyx_n_s_GAMEPAD_BUTTON_DPAD_UP __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP
#define __pyx_n_s_GAMEPAD_BUTTON_GUIDE __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_GUIDE
#define __pyx_n_s_GAMEPAD_BUTTON_LAST __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_LAST
#define __pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER
#define __pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB
#define __pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER
#define __pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB
#define __pyx_n_s_GAMEPAD_BUTTON_SQUARE __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_SQUARE
#define __pyx_n_s_GAMEPAD_BUTTON_START __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_START
#define __pyx_n_s_GAMEPAD_BUTTON_TRIANGLE __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE
#define __pyx_n_s_GAMEPAD_BUTTON_X __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_X
#define __pyx_n_s_GAMEPAD_BUTTON_Y __pyx_mstate_global->__pyx_n_s_GAMEPAD_BUTTON_Y
#define __pyx_n_s_GREEN_BITS __pyx_mstate_global->__pyx_n_s_GREEN_BITS
#define __pyx_n_s_HAND_CURSOR __pyx_mstate_global->__pyx_n_s_HAND_CURSOR
#define __pyx_n_s_HAT_CENTERED __pyx_mstate_global->__pyx_n_s_HAT_CENTERED
#define __pyx_n_s_HAT_DOWN __pyx_mstate_global->__pyx_n_s_HAT_DOWN
#define __pyx_n_s_HAT_LEFT __pyx_mstate_global->__pyx_n_s_HAT_LEFT
#define __pyx_n_s_HAT_LEFT_DOWN __pyx_mstate_global->__pyx_n_s_HAT_LEFT_DOWN
#define __pyx_n_s_HAT_LEFT_UP __pyx_mstate_global->__pyx_n_s_HAT_LEFT_UP
#define __pyx_n_s_HAT_RIGHT __pyx_mstate_global->__pyx_n_s_HAT_RIGHT
#define __pyx_n_s_HAT_RIGHT_DOWN __pyx_mstate_global->__pyx_n_s_HAT_RIGHT_DOWN
#define __pyx_n_s_HAT_RIGHT_UP __pyx_mstate_global->__pyx_n_s_HAT_RIGHT_UP
#define __pyx_n_s_HAT_UP __pyx_mstate_global->__pyx_n_s_HAT_UP
#define __pyx_n_s_HOVERED __pyx_mstate_global->__pyx_n_s_HOVERED
#define __pyx_n_s_HRESIZE_CURSOR __pyx_mstate_global->__pyx_n_s_HRESIZE_CURSOR
#define __pyx_n_s_IBEAM_CURSOR __pyx_mstate_global->__pyx_n_s_IBEAM_CURSOR
#define __pyx_n_s_ICONIFIED __pyx_mstate_global->__pyx_n_s_ICONIFIED
#define __pyx_n_s_INVALID_ENUM __pyx_mstate_global->__pyx_n_s_INVALID_ENUM
#define __pyx_n_s_INVALID_VALUE __pyx_mstate_global->__pyx_n_s_INVALID_VALUE
#define __pyx_n_s_JOYSTICK_1 __pyx_mstate_global->__pyx_n_s_JOYSTICK_1
#define __pyx_n_s_JOYSTICK_10 __pyx_mstate_global->__pyx_n_s_JOYSTICK_10
#define __pyx_n_s_JOYSTICK_11 __pyx_mstate_global->__pyx_n_s_JOYSTICK_11
#define __pyx_n_s_JOYSTICK_12 __pyx_mstate_global->__pyx_n_s_JOYSTICK_12
#define __pyx_n_s_JOYSTICK_13 __pyx_mstate_global->__pyx_n_s_JOYSTICK_13
#define __pyx_n_s_JOYSTICK_14 __pyx_mstate_global->__pyx_n_s_JOYSTICK_14
#define __pyx_n_s_JOYSTICK_15 __pyx_mstate_global->__pyx_n_s_JOYSTICK_15
#define __pyx_n_s_JOYSTICK_16 __pyx_mstate_global->__pyx_n_s_JOYSTICK_16
#define __pyx_n_s_JOYSTICK_2 __pyx_mstate_global->__pyx_n_s_JOYSTICK_2
#define __pyx_n_s_JOYSTICK_3 __pyx_mstate_global->__pyx_n_s_JOYSTICK_3
#define __pyx_n_s_JOYSTICK_4 __pyx_mstate_global->__pyx_n_s_JOYSTICK_4
#define __pyx_n_s_JOYSTICK_5 __pyx_mstate_global->__pyx_n_s_JOYSTICK_5
#define __pyx_n_s_JOYSTICK_6 __pyx_mstate_global->__pyx_n_s_JOYSTICK_6
#define __pyx_n_s_JOYSTICK_7 __pyx_mstate_global->__pyx_n_s_JOYSTICK_7
#define __pyx_n_s_JOYSTICK_8 __pyx_mstate_global->__pyx_n_s_JOYSTICK_8
#define __pyx_n_s_JOYSTICK_9 __pyx_mstate_global->__pyx_n_s_JOYSTICK_9
#define __pyx_n_s_JOYSTICK_HAT_BUTTONS __pyx_mstate_global->__pyx_n_s_JOYSTICK_HAT_BUTTONS
#define __pyx_n_s_JOYSTICK_LAST __pyx_mstate_global->__pyx_n_s_JOYSTICK_LAST
#define __pyx_n_s_KEY_0 __pyx_mstate_global->__pyx_n_s_KEY_0
#define __pyx_n_s_KEY_1 __pyx_mstate_global->__pyx_n_s_KEY_1
#define __pyx_n_s_KEY_2 __pyx_mstate_global->__pyx_n_s_KEY_2
#define __pyx_n_s_KEY_3 __pyx_mstate_global->__pyx_n_s_KEY_3
#define __pyx_n_s_KEY_4 __pyx_mstate_global->__pyx_n_s_KEY_4
#define __pyx_n_s_KEY_5 __pyx_mstate_global->__pyx_n_s_KEY_5
#define __pyx_n_s_KEY_6 __pyx_mstate_global->__pyx_n_s_KEY_6
#define __pyx_n_s_KEY_7 __pyx_mstate_global->__pyx_n_s_KEY_7
#define __pyx_n_s_KEY_8 __pyx_mstate_global->__pyx_n_s_KEY_8
#define __pyx_n_s_KEY_9 __pyx_mstate_global->__pyx_n_s_KEY_9
#define __pyx_n_s_KEY_A __pyx_mstate_global->__pyx_n_s_KEY_A
#define __pyx_n_s_KEY_APOSTROPHE __pyx_mstate_global->__pyx_n_s_KEY_APOSTROPHE
#define __pyx_n_s_KEY_B __pyx_mstate_global->__pyx_n_s_KEY_B
#define __pyx_n_s_KEY_BACKSLASH __pyx_mstate_global->__pyx_n_s_KEY_BACKSLASH
#define __pyx_n_s_KEY_BACKSPACE __pyx_mstate_global->__pyx_n_s_KEY_BACKSPACE
#define __pyx_n_s_KEY_C __pyx_mstate_global->__pyx_n_s_KEY_C
#define __pyx_n_s_KEY_CAPS_LOCK __pyx_mstate_global->__pyx_n_s_KEY_CAPS_LOCK
#define __pyx_n_s_KEY_COMMA __pyx_mstate_global->__pyx_n_s_KEY_COMMA
#define __pyx_n_s_KEY_D __pyx_mstate_global->__pyx_n_s_KEY_D
#define __pyx_n_s_KEY_DELETE __pyx_mstate_global->__pyx_n_s_KEY_DELETE
#define __pyx_n_s_KEY_DOWN __pyx_mstate_global->__pyx_n_s_KEY_DOWN
#define __pyx_n_s_KEY_E __pyx_mstate_global->__pyx_n_s_KEY_E
#define __pyx_n_s_KEY_END __pyx_mstate_global->__pyx_n_s_KEY_END
#define __pyx_n_s_KEY_ENTER __pyx_mstate_global->__pyx_n_s_KEY_ENTER
#define __pyx_n_s_KEY_EQUAL __pyx_mstate_global->__pyx_n_s_KEY_EQUAL
#define __pyx_n_s_KEY_ESCAPE __pyx_mstate_global->__pyx_n_s_KEY_ESCAPE
#define __pyx_n_s_KEY_F __pyx_mstate_global->__pyx_n_s_KEY_F
#define __pyx_n_s_KEY_F1 __pyx_mstate_global->__pyx_n_s_KEY_F1
#define __pyx_n_s_KEY_F10 __pyx_mstate_global->__pyx_n_s_KEY_F10
#define __pyx_n_s_KEY_F11 __pyx_mstate_global->__pyx_n_s_KEY_F11
#define __pyx_n_s_KEY_F12 __pyx_mstate_global->__pyx_n_s_KEY_F12
#define __pyx_n_s_KEY_F13 __pyx_mstate_global->__pyx_n_s_KEY_F13
#define __pyx_n_s_KEY_F14 __pyx_mstate_global->__pyx_n_s_KEY_F14
#define __pyx_n_s_KEY_F15 __pyx_mstate_global->__pyx_n_s_KEY_F15
#define __pyx_n_s_KEY_F16 __pyx_mstate_global->__pyx_n_s_KEY_F16
#define __pyx_n_s_KEY_F17 __pyx_mstate_global->__pyx_n_s_KEY_F17
#define __pyx_n_s_KEY_F18 __pyx_mstate_global->__pyx_n_s_KEY_F18
#define __pyx_n_s_KEY_F19 __pyx_mstate_global->__pyx_n_s_KEY_F19
#define __pyx_n_s_KEY_F2 __pyx_mstate_global->__pyx_n_s_KEY_F2
#define __pyx_n_s_KEY_F20 __pyx_mstate_global->__pyx_n_s_KEY_F20
#define __pyx_n_s_KEY_F21 __pyx_mstate_global->__pyx_n_s_KEY_F21
#define __pyx_n_s_KEY_F22 __pyx_mstate_global->__pyx_n_s_KEY_F22
#define __pyx_n_s_KEY_F23 __pyx_mstate_global->__pyx_n_s_KEY_F23
#define __pyx_n_s_KEY_F24 __pyx_mstate_global->__pyx_n_s_KEY_F24
#define __pyx_n_s_KEY_F25 __pyx_mstate_global->__pyx_n_s_KEY_F25
#define __pyx_n_s_KEY_F3 __pyx_mstate_global->__pyx_n_s_KEY_F3
#define __pyx_n_s_KEY_F4 __pyx_mstate_global->__pyx_n_s_KEY_F4
#define __pyx_n_s_KEY_F5 __pyx_mstate_global->__pyx_n_s_KEY_F5
#define __pyx_n_s_KEY_F6 __pyx_mstate_global->__pyx_n_s_KEY_F6
#define __pyx_n_s_KEY_F7 __pyx_mstate_global->__pyx_n_s_KEY_F7
#define __pyx_n_s_KEY_F8 __pyx_mstate_global->__pyx_n_s_KEY_F8
#define __pyx_n_s_KEY_F9 __pyx_mstate_global->__pyx_n_s_KEY_F9
#define __pyx_n_s_KEY_G __pyx_mstate_global->__pyx_n_s_KEY_G
#define __pyx_n_s_KEY_GRAVE_ACCENT __pyx_mstate_global->__pyx_n_s_KEY_GRAVE_ACCENT
#define __pyx_n_s_KEY_H __pyx_mstate_global->__pyx_n_s_KEY_H
#define __pyx_n_s_KEY_HOME __pyx_mstate_global->__pyx_n_s_KEY_HOME
#define __pyx_n_s_KEY_I __pyx_mstate_global->__pyx_n_s_KEY_I
#define __pyx_n_s_KEY_INSERT __pyx_mstate_global->__pyx_n_s_KEY_INSERT
#define __pyx_n_s_KEY_J __pyx_mstate_global->__pyx_n_s_KEY_J
#define __pyx_n_s_KEY_K __pyx_mstate_global->__pyx_n_s_KEY_K
#define __pyx_n_s_KEY_KP_0 __pyx_mstate_global->__pyx_n_s_KEY_KP_0
#define __pyx_n_s_KEY_KP_1 __pyx_mstate_global->__pyx_n_s_KEY_KP_1
#define __pyx_n_s_KEY_KP_2 __pyx_mstate_global->__pyx_n_s_KEY_KP_2
#define __pyx_n_s_KEY_KP_3 __pyx_mstate_global->__pyx_n_s_KEY_KP_3
#define __pyx_n_s_KEY_KP_4 __pyx_mstate_global->__pyx_n_s_KEY_KP_4
#define __pyx_n_s_KEY_KP_5 __pyx_mstate_global->__pyx_n_s_KEY_KP_5
#define __pyx_n_s_KEY_KP_6 __pyx_mstate_global->__pyx_n_s_KEY_KP_6
#define __pyx_n_s_KEY_KP_7 __pyx_mstate_global->__pyx_n_s_KEY_KP_7
#define __pyx_n_s_KEY_KP_8 __pyx_mstate_global->__pyx_n_s_KEY_KP_8
#define __pyx_n_s_KEY_KP_9 __pyx_mstate_global->__pyx_n_s_KEY_KP_9
#define __pyx_n_s_KEY_KP_ADD __pyx_mstate_global->__pyx_n_s_KEY_KP_ADD
#define __pyx_n_s_KEY_KP_DECIMAL __pyx_mstate_global->__pyx_n_s_KEY_KP_DECIMAL
#define __pyx_n_s_KEY_KP_DIVIDE __pyx_mstate_global->__pyx_n_s_KEY_KP_DIVIDE
#define __pyx_n_s_KEY_KP_ENTER __pyx_mstate_global->__pyx_n_s_KEY_KP_ENTER
#define __pyx_n_s_KEY_KP_EQUAL __pyx_mstate_global->__pyx_n_s_KEY_KP_EQUAL
#define __pyx_n_s_KEY_KP_MULTIPLY __pyx_mstate_global->__pyx_n_s_KEY_KP_MULTIPLY
#define __pyx_n_s_KEY_KP_SUBTRACT __pyx_mstate_global->__pyx_n_s_KEY_KP_SUBTRACT
#define __pyx_n_s_KEY_L __pyx_mstate_global->__pyx_n_s_KEY_L
#define __pyx_n_s_KEY_LAST __pyx_mstate_global->__pyx_n_s_KEY_LAST
#define __pyx_n_s_KEY_LEFT __pyx_mstate_global->__pyx_n_s_KEY_LEFT
#define __pyx_n_s_KEY_LEFT_ALT __pyx_mstate_global->__pyx_n_s_KEY_LEFT_ALT
#define __pyx_n_s_KEY_LEFT_BRACKET __pyx_mstate_global->__pyx_n_s_KEY_LEFT_BRACKET
#define __pyx_n_s_KEY_LEFT_CONTROL __pyx_mstate_global->__pyx_n_s_KEY_LEFT_CONTROL
#define __pyx_n_s_KEY_LEFT_SHIFT __pyx_mstate_global->__pyx_n_s_KEY_LEFT_SHIFT
#define __pyx_n_s_KEY_LEFT_SUPER __pyx_mstate_global->__pyx_n_s_KEY_LEFT_SUPER
#define __pyx_n_s_KEY_M __pyx_mstate_global->__pyx_n_s_KEY_M
#define __pyx_n_s_KEY_MENU __pyx_mstate_global->__pyx_n_s_KEY_MENU
#define __pyx_n_s_KEY_MINUS __pyx_mstate_global->__pyx_n_s_KEY_MINUS
#define __pyx_n_s_KEY_N __pyx_mstate_global->__pyx_n_s_KEY_N
#define __pyx_n_s_KEY_NUM_LOCK __pyx_mstate_global->__pyx_n_s_KEY_NUM_LOCK
#define __pyx_n_s_KEY_O __pyx_mstate_global->__pyx_n_s_KEY_O
#define __pyx_n_s_KEY_P __pyx_mstate_global->__pyx_n_s_KEY_P
#define __pyx_n_s_KEY_PAGE_DOWN __pyx_mstate_global->__pyx_n_s_KEY_PAGE_DOWN
#define __pyx_n_s_KEY_PAGE_UP __pyx_mstate_global->__pyx_n_s_KEY_PAGE_UP
#define __pyx_n_s_KEY_PAUSE __pyx_mstate_global->__pyx_n_s_KEY_PAUSE
#define __pyx_n_s_KEY_PERIOD __pyx_mstate_global->__pyx_n_s_KEY_PERIOD
#define __pyx_n_s_KEY_PRINT_SCREEN __pyx_mstate_global->__pyx_n_s_KEY_PRINT_SCREEN
#define __pyx_n_s_KEY_Q __pyx_mstate_global->__pyx_n_s_KEY_Q
#define __pyx_n_s_KEY_R __pyx_mstate_global->__pyx_n_s_KEY_R
#define __pyx_n_s_KEY_RIGHT __pyx_mstate_global->__pyx_n_s_KEY_RIGHT
#define __pyx_n_s_KEY_RIGHT_ALT __pyx_mstate_global->__pyx_n_s_KEY_RIGHT_ALT
#define __pyx_n_s_KEY_RIGHT_BRACKET __pyx_mstate_global->__pyx_n_s_KEY_RIGHT_BRACKET
#define __pyx_n_s_KEY_RIGHT_CONTROL __pyx_mstate_global->__pyx_n_s_KEY_RIGHT_CONTROL
#define __pyx_n_s_KEY_RIGHT_SHIFT __pyx_mstate_global->__pyx_n_s_KEY_RIGHT_SHIFT
#define __pyx_n_s_KEY_RIGHT_SUPER __pyx_mstate_global->__pyx_n_s_KEY_RIGHT_SUPER
#define __pyx_n_s_KEY_S __pyx_mstate_global->__pyx_n_s_KEY_S
#define __pyx_n_s_KEY_SCROLL_LOCK __pyx_mstate_global->__pyx_n_s_KEY_SCROLL_LOCK
#define __pyx_n_s_KEY_SEMICOLON __pyx_mstate_global->__pyx_n_s_KEY_SEMICOLON
#define __pyx_n_s_KEY_SLASH __pyx_mstate_global->__pyx_n_s_KEY_SLASH
#define __pyx_n_s_KEY_SPACE __pyx_mstate_global->__pyx_n_s_KEY_SPACE
#define __pyx_n_s_KEY_T __pyx_mstate_global->__pyx_n_s_KEY_T
#define __pyx_n_s_KEY_TAB __pyx_mstate_global->__pyx_n_s_KEY_TAB
#define __pyx_n_s_KEY_U __pyx_mstate_global->__pyx_n_s_KEY_U
#define __pyx_n_s_KEY_UNKNOWN __pyx_mstate_global->__pyx_n_s_KEY_UNKNOWN
#define __pyx_n_s_KEY_UP __pyx_mstate_global->__pyx_n_s_KEY_UP
#define __pyx_n_s_KEY_V __pyx_mstate_global->__pyx_n_s_KEY_V
#define __pyx_n_s_KEY_W __pyx_mstate_global->__pyx_n_s_KEY_W
#define __pyx_n_s_KEY_WORLD_1 __pyx_mstate_global->__pyx_n_s_KEY_WORLD_1
#define __pyx_n_s_KEY_WORLD_2 __pyx_mstate_global->__pyx_n_s_KEY_WORLD_2
#define __pyx_n_s_KEY_X __pyx_mstate_global->__pyx_n_s_KEY_X
#define __pyx_n_s_KEY_Y __pyx_mstate_global->__pyx_n_s_KEY_Y
#define __pyx_n_s_KEY_Z __pyx_mstate_global->__pyx_n_s_KEY_Z
#define __pyx_n_s_LOCK_KEY_MODS __pyx_mstate_global->__pyx_n_s_LOCK_KEY_MODS
#define __pyx_n_s_LOSE_CONTEXT_ON_RESET __pyx_mstate_global->__pyx_n_s_LOSE_CONTEXT_ON_RESET
#define __pyx_n_s_MAXIMIZED __pyx_mstate_global->__pyx_n_s_MAXIMIZED
#define __pyx_n_s_MOD_ALT __pyx_mstate_global->__pyx_n_s_MOD_ALT
#define __pyx_n_s_MOD_CAPS_LOCK __pyx_mstate_global->__pyx_n_s_MOD_CAPS_LOCK
#define __pyx_n_s_MOD_CONTROL __pyx_mstate_global->__pyx_n_s_MOD_CONTROL
#define __pyx_n_s_MOD_NUM_LOCK __pyx_mstate_global->__pyx_n_s_MOD_NUM_LOCK
#define __pyx_n_s_MOD_SHIFT __pyx_mstate_global->__pyx_n_s_MOD_SHIFT
#define __pyx_n_s_MOD_SUPER __pyx_mstate_global->__pyx_n_s_MOD_SUPER
#define __pyx_n_s_MOUSE_BUTTON_1 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_1
#define __pyx_n_s_MOUSE_BUTTON_2 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_2
#define __pyx_n_s_MOUSE_BUTTON_3 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_3
#define __pyx_n_s_MOUSE_BUTTON_4 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_4
#define __pyx_n_s_MOUSE_BUTTON_5 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_5
#define __pyx_n_s_MOUSE_BUTTON_6 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_6
#define __pyx_n_s_MOUSE_BUTTON_7 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_7
#define __pyx_n_s_MOUSE_BUTTON_8 __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_8
#define __pyx_n_s_MOUSE_BUTTON_LAST __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_LAST
#define __pyx_n_s_MOUSE_BUTTON_LEFT __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_LEFT
#define __pyx_n_s_MOUSE_BUTTON_MIDDLE __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_MIDDLE
#define __pyx_n_s_MOUSE_BUTTON_RIGHT __pyx_mstate_global->__pyx_n_s_MOUSE_BUTTON_RIGHT
#define __pyx_n_s_NATIVE_CONTEXT_API __pyx_mstate_global->__pyx_n_s_NATIVE_CONTEXT_API
#define __pyx_n_s_NOT_INITIALIZED __pyx_mstate_global->__pyx_n_s_NOT_INITIALIZED
#define __pyx_n_s_NO_API __pyx_mstate_global->__pyx_n_s_NO_API
#define __pyx_n_s_NO_CURRENT_CONTEXT __pyx_mstate_global->__pyx_n_s_NO_CURRENT_CONTEXT
#define __pyx_n_s_NO_ERROR __pyx_mstate_global->__pyx_n_s_NO_ERROR
#define __pyx_n_s_NO_RESET_NOTIFICATION __pyx_mstate_global->__pyx_n_s_NO_RESET_NOTIFICATION
#define __pyx_n_s_NO_ROBUSTNESS __pyx_mstate_global->__pyx_n_s_NO_ROBUSTNESS
#define __pyx_n_s_NO_WINDOW_CONTEXT __pyx_mstate_global->__pyx_n_s_NO_WINDOW_CONTEXT
#define __pyx_n_s_OPENGL_ANY_PROFILE __pyx_mstate_global->__pyx_n_s_OPENGL_ANY_PROFILE
#define __pyx_n_s_OPENGL_API __pyx_mstate_global->__pyx_n_s_OPENGL_API
#define __pyx_n_s_OPENGL_COMPAT_PROFILE __pyx_mstate_global->__pyx_n_s_OPENGL_COMPAT_PROFILE
#define __pyx_n_s_OPENGL_CORE_PROFILE __pyx_mstate_global->__pyx_n_s_OPENGL_CORE_PROFILE
#define __pyx_n_s_OPENGL_DEBUG_CONTEXT __pyx_mstate_global->__pyx_n_s_OPENGL_DEBUG_CONTEXT
#define __pyx_n_s_OPENGL_ES_API __pyx_mstate_global->__pyx_n_s_OPENGL_ES_API
#define __pyx_n_s_OPENGL_FORWARD_COMPAT __pyx_mstate_global->__pyx_n_s_OPENGL_FORWARD_COMPAT
#define __pyx_n_s_OPENGL_PROFILE __pyx_mstate_global->__pyx_n_s_OPENGL_PROFILE
#define __pyx_n_s_OSMESA_CONTEXT_API __pyx_mstate_global->__pyx_n_s_OSMESA_CONTEXT_API
#define __pyx_n_s_OUT_OF_MEMORY __pyx_mstate_global->__pyx_n_s_OUT_OF_MEMORY
#define __pyx_n_s_PLATFORM_ERROR __pyx_mstate_global->__pyx_n_s_PLATFORM_ERROR
#define __pyx_n_s_PRESS __pyx_mstate_global->__pyx_n_s_PRESS
#define __pyx_n_s_RAW_MOUSE_MOTION __pyx_mstate_global->__pyx_n_s_RAW_MOUSE_MOTION
#define __pyx_n_s_RED_BITS __pyx_mstate_global->__pyx_n_s_RED_BITS
#define __pyx_n_s_REFRESH_RATE __pyx_mstate_global->__pyx_n_s_REFRESH_RATE
#define __pyx_n_s_RELEASE __pyx_mstate_global->__pyx_n_s_RELEASE
#define __pyx_n_s_RELEASE_BEHAVIOR_FLUSH __pyx_mstate_global->__pyx_n_s_RELEASE_BEHAVIOR_FLUSH
#define __pyx_n_s_RELEASE_BEHAVIOR_NONE __pyx_mstate_global->__pyx_n_s_RELEASE_BEHAVIOR_NONE
#define __pyx_n_s_REPEAT __pyx_mstate_global->__pyx_n_s_REPEAT
#define __pyx_n_s_RESIZABLE __pyx_mstate_global->__pyx_n_s_RESIZABLE
#define __pyx_n_s_SAMPLES __pyx_mstate_global->__pyx_n_s_SAMPLES
#define __pyx_n_s_SCALE_TO_MONITOR __pyx_mstate_global->__pyx_n_s_SCALE_TO_MONITOR
#define __pyx_n_s_SRGB_CAPABLE __pyx_mstate_global->__pyx_n_s_SRGB_CAPABLE
#define __pyx_n_s_STENCIL_BITS __pyx_mstate_global->__pyx_n_s_STENCIL_BITS
#define __pyx_n_s_STEREO __pyx_mstate_global->__pyx_n_s_STEREO
#define __pyx_n_s_STICKY_KEYS __pyx_mstate_global->__pyx_n_s_STICKY_KEYS
#define __pyx_n_s_STICKY_MOUSE_BUTTONS __pyx_mstate_global->__pyx_n_s_STICKY_MOUSE_BUTTONS
#define __pyx_n_s_TRANSPARENT_FRAMEBUFFER __pyx_mstate_global->__pyx_n_s_TRANSPARENT_FRAMEBUFFER
#define __pyx_n_s_TRUE __pyx_mstate_global->__pyx_n_s_TRUE
#define __pyx_n_s_VERSION_MAJOR __pyx_mstate_global->__pyx_n_s_VERSION_MAJOR
#define __pyx_n_s_VERSION_MINOR __pyx_mstate_global->__pyx_n_s_VERSION_MINOR
#define __pyx_n_s_VERSION_REVISION __pyx_mstate_global->__pyx_n_s_VERSION_REVISION
#define __pyx_n_s_VERSION_UNAVAILABLE __pyx_mstate_global->__pyx_n_s_VERSION_UNAVAILABLE
#define __pyx_n_s_VISIBLE __pyx_mstate_global->__pyx_n_s_VISIBLE
#define __pyx_n_s_VRESIZE_CURSOR __pyx_mstate_global->__pyx_n_s_VRESIZE_CURSOR
#define __pyx_n_s_X11_CLASS_NAME __pyx_mstate_global->__pyx_n_s_X11_CLASS_NAME
#define __pyx_n_s_X11_INSTANCE_NAME __pyx_mstate_global->__pyx_n_s_X11_INSTANCE_NAME
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#endif
/* #### Code section: module_code ### */

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  #if CYTHON_USE_MODULE_STATE
  {0, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 1},
  {0, __pyx_k_ACCUM_ALPHA_BITS, sizeof(__pyx_k_ACCUM_ALPHA_BITS), 0, 0, 1, 1},
  {0, __pyx_k_ACCUM_BLUE_BITS, sizeof(__pyx_k_ACCUM_BLUE_BITS), 0, 0, 1, 1},
  {0, __pyx_k_ACCUM_GREEN_BITS, sizeof(__pyx_k_ACCUM_GREEN_BITS), 0, 0, 1, 1},
  {0, __pyx_k_ACCUM_RED_BITS, sizeof(__pyx_k_ACCUM_RED_BITS), 0, 0, 1, 1},
  {0, __pyx_k_ALPHA_BITS, sizeof(__pyx_k_ALPHA_BITS), 0, 0, 1, 1},
  {0, __pyx_k_ANY_RELEASE_BEHAVIOR, sizeof(__pyx_k_ANY_RELEASE_BEHAVIOR), 0, 0, 1, 1},
  {0, __pyx_k_API_UNAVAILABLE, sizeof(__pyx_k_API_UNAVAILABLE), 0, 0, 1, 1},
  {0, __pyx_k_ARROW_CURSOR, sizeof(__pyx_k_ARROW_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_AUTO_ICONIFY, sizeof(__pyx_k_AUTO_ICONIFY), 0, 0, 1, 1},
  {0, __pyx_k_AUX_BUFFERS, sizeof(__pyx_k_AUX_BUFFERS), 0, 0, 1, 1},
  {0, __pyx_k_BLUE_BITS, sizeof(__pyx_k_BLUE_BITS), 0, 0, 1, 1},
  {0, __pyx_k_CENTER_CURSOR, sizeof(__pyx_k_CENTER_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_CLIENT_API, sizeof(__pyx_k_CLIENT_API), 0, 0, 1, 1},
  {0, __pyx_k_COCOA_CHDIR_RESOURCES, sizeof(__pyx_k_COCOA_CHDIR_RESOURCES), 0, 0, 1, 1},
  {0, __pyx_k_COCOA_FRAME_NAME, sizeof(__pyx_k_COCOA_FRAME_NAME), 0, 0, 1, 1},
  {0, __pyx_k_COCOA_GRAPHICS_SWITCHING, sizeof(__pyx_k_COCOA_GRAPHICS_SWITCHING), 0, 0, 1, 1},
  {0, __pyx_k_COCOA_MENUBAR, sizeof(__pyx_k_COCOA_MENUBAR), 0, 0, 1, 1},
  {0, __pyx_k_COCOA_RETINA_FRAMEBUFFER, sizeof(__pyx_k_COCOA_RETINA_FRAMEBUFFER), 0, 0, 1, 1},
  {0, __pyx_k_CONNECTED, sizeof(__pyx_k_CONNECTED), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_CREATION_API, sizeof(__pyx_k_CONTEXT_CREATION_API), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_NO_ERROR, sizeof(__pyx_k_CONTEXT_NO_ERROR), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_RELEASE_BEHAVIOR, sizeof(__pyx_k_CONTEXT_RELEASE_BEHAVIOR), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_REVISION, sizeof(__pyx_k_CONTEXT_REVISION), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_ROBUSTNESS, sizeof(__pyx_k_CONTEXT_ROBUSTNESS), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_VERSION_MAJOR, sizeof(__pyx_k_CONTEXT_VERSION_MAJOR), 0, 0, 1, 1},
  {0, __pyx_k_CONTEXT_VERSION_MINOR, sizeof(__pyx_k_CONTEXT_VERSION_MINOR), 0, 0, 1, 1},
  {0, __pyx_k_CROSSHAIR_CURSOR, sizeof(__pyx_k_CROSSHAIR_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_CURSOR, sizeof(__pyx_k_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_CURSOR_DISABLED, sizeof(__pyx_k_CURSOR_DISABLED), 0, 0, 1, 1},
  {0, __pyx_k_CURSOR_HIDDEN, sizeof(__pyx_k_CURSOR_HIDDEN), 0, 0, 1, 1},
  {0, __pyx_k_CURSOR_NORMAL, sizeof(__pyx_k_CURSOR_NORMAL), 0, 0, 1, 1},
  {0, __pyx_k_DECORATED, sizeof(__pyx_k_DECORATED), 0, 0, 1, 1},
  {0, __pyx_k_DEPTH_BITS, sizeof(__pyx_k_DEPTH_BITS), 0, 0, 1, 1},
  {0, __pyx_k_DISCONNECTED, sizeof(__pyx_k_DISCONNECTED), 0, 0, 1, 1},
  {0, __pyx_k_DONT_CARE, sizeof(__pyx_k_DONT_CARE), 0, 0, 1, 1},
  {0, __pyx_k_DOUBLEBUFFER, sizeof(__pyx_k_DOUBLEBUFFER), 0, 0, 1, 1},
  {0, __pyx_k_EGL_CONTEXT_API, sizeof(__pyx_k_EGL_CONTEXT_API), 0, 0, 1, 1},
  {0, __pyx_k_FALSE, sizeof(__pyx_k_FALSE), 0, 0, 1, 1},
  {0, __pyx_k_FLOATING, sizeof(__pyx_k_FLOATING), 0, 0, 1, 1},
  {0, __pyx_k_FOCUSED, sizeof(__pyx_k_FOCUSED), 0, 0, 1, 1},
  {0, __pyx_k_FOCUS_ON_SHOW, sizeof(__pyx_k_FOCUS_ON_SHOW), 0, 0, 1, 1},
  {0, __pyx_k_FORMAT_UNAVAILABLE, sizeof(__pyx_k_FORMAT_UNAVAILABLE), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_LAST, sizeof(__pyx_k_GAMEPAD_AXIS_LAST), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_LEFT_TRIGGER, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_TRIGGER), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_LEFT_X, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_X), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_LEFT_Y, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_Y), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_RIGHT_TRIGGER, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_TRIGGER), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_RIGHT_X, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_X), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_AXIS_RIGHT_Y, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_Y), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_A, sizeof(__pyx_k_GAMEPAD_BUTTON_A), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_B, sizeof(__pyx_k_GAMEPAD_BUTTON_B), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_BACK, sizeof(__pyx_k_GAMEPAD_BUTTON_BACK), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_CIRCLE, sizeof(__pyx_k_GAMEPAD_BUTTON_CIRCLE), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_CROSS, sizeof(__pyx_k_GAMEPAD_BUTTON_CROSS), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_DPAD_DOWN, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_DPAD_LEFT, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_LEFT), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_DPAD_RIGHT, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_RIGHT), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_DPAD_UP, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_UP), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_GUIDE, sizeof(__pyx_k_GAMEPAD_BUTTON_GUIDE), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_LAST, sizeof(__pyx_k_GAMEPAD_BUTTON_LAST), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_LEFT_BUMPER, sizeof(__pyx_k_GAMEPAD_BUTTON_LEFT_BUMPER), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_LEFT_THUMB, sizeof(__pyx_k_GAMEPAD_BUTTON_LEFT_THUMB), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_RIGHT_BUMPER, sizeof(__pyx_k_GAMEPAD_BUTTON_RIGHT_BUMPER), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_RIGHT_THUMB, sizeof(__pyx_k_GAMEPAD_BUTTON_RIGHT_THUMB), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_SQUARE, sizeof(__pyx_k_GAMEPAD_BUTTON_SQUARE), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_START, sizeof(__pyx_k_GAMEPAD_BUTTON_START), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_TRIANGLE, sizeof(__pyx_k_GAMEPAD_BUTTON_TRIANGLE), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_X, sizeof(__pyx_k_GAMEPAD_BUTTON_X), 0, 0, 1, 1},
  {0, __pyx_k_GAMEPAD_BUTTON_Y, sizeof(__pyx_k_GAMEPAD_BUTTON_Y), 0, 0, 1, 1},
  {0, __pyx_k_GREEN_BITS, sizeof(__pyx_k_GREEN_BITS), 0, 0, 1, 1},
  {0, __pyx_k_HAND_CURSOR, sizeof(__pyx_k_HAND_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_HAT_CENTERED, sizeof(__pyx_k_HAT_CENTERED), 0, 0, 1, 1},
  {0, __pyx_k_HAT_DOWN, sizeof(__pyx_k_HAT_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_HAT_LEFT, sizeof(__pyx_k_HAT_LEFT), 0, 0, 1, 1},
  {0, __pyx_k_HAT_LEFT_DOWN, sizeof(__pyx_k_HAT_LEFT_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_HAT_LEFT_UP, sizeof(__pyx_k_HAT_LEFT_UP), 0, 0, 1, 1},
  {0, __pyx_k_HAT_RIGHT, sizeof(__pyx_k_HAT_RIGHT), 0, 0, 1, 1},
  {0, __pyx_k_HAT_RIGHT_DOWN, sizeof(__pyx_k_HAT_RIGHT_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_HAT_RIGHT_UP, sizeof(__pyx_k_HAT_RIGHT_UP), 0, 0, 1, 1},
  {0, __pyx_k_HAT_UP, sizeof(__pyx_k_HAT_UP), 0, 0, 1, 1},
  {0, __pyx_k_HOVERED, sizeof(__pyx_k_HOVERED), 0, 0, 1, 1},
  {0, __pyx_k_HRESIZE_CURSOR, sizeof(__pyx_k_HRESIZE_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_IBEAM_CURSOR, sizeof(__pyx_k_IBEAM_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_ICONIFIED, sizeof(__pyx_k_ICONIFIED), 0, 0, 1, 1},
  {0, __pyx_k_INVALID_ENUM, sizeof(__pyx_k_INVALID_ENUM), 0, 0, 1, 1},
  {0, __pyx_k_INVALID_VALUE, sizeof(__pyx_k_INVALID_VALUE), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_1, sizeof(__pyx_k_JOYSTICK_1), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_10, sizeof(__pyx_k_JOYSTICK_10), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_11, sizeof(__pyx_k_JOYSTICK_11), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_12, sizeof(__pyx_k_JOYSTICK_12), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_13, sizeof(__pyx_k_JOYSTICK_13), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_14, sizeof(__pyx_k_JOYSTICK_14), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_15, sizeof(__pyx_k_JOYSTICK_15), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_16, sizeof(__pyx_k_JOYSTICK_16), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_2, sizeof(__pyx_k_JOYSTICK_2), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_3, sizeof(__pyx_k_JOYSTICK_3), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_4, sizeof(__pyx_k_JOYSTICK_4), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_5, sizeof(__pyx_k_JOYSTICK_5), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_6, sizeof(__pyx_k_JOYSTICK_6), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_7, sizeof(__pyx_k_JOYSTICK_7), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_8, sizeof(__pyx_k_JOYSTICK_8), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_9, sizeof(__pyx_k_JOYSTICK_9), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_HAT_BUTTONS, sizeof(__pyx_k_JOYSTICK_HAT_BUTTONS), 0, 0, 1, 1},
  {0, __pyx_k_JOYSTICK_LAST, sizeof(__pyx_k_JOYSTICK_LAST), 0, 0, 1, 1},
  {0, __pyx_k_KEY_0, sizeof(__pyx_k_KEY_0), 0, 0, 1, 1},
  {0, __pyx_k_KEY_1, sizeof(__pyx_k_KEY_1), 0, 0, 1, 1},
  {0, __pyx_k_KEY_2, sizeof(__pyx_k_KEY_2), 0, 0, 1, 1},
  {0, __pyx_k_KEY_3, sizeof(__pyx_k_KEY_3), 0, 0, 1, 1},
  {0, __pyx_k_KEY_4, sizeof(__pyx_k_KEY_4), 0, 0, 1, 1},
  {0, __pyx_k_KEY_5, sizeof(__pyx_k_KEY_5), 0, 0, 1, 1},
  {0, __pyx_k_KEY_6, sizeof(__pyx_k_KEY_6), 0, 0, 1, 1},
  {0, __pyx_k_KEY_7, sizeof(__pyx_k_KEY_7), 0, 0, 1, 1},
  {0, __pyx_k_KEY_8, sizeof(__pyx_k_KEY_8), 0, 0, 1, 1},
  {0, __pyx_k_KEY_9, sizeof(__pyx_k_KEY_9), 0, 0, 1, 1},
  {0, __pyx_k_KEY_A, sizeof(__pyx_k_KEY_A), 0, 0, 1, 1},
  {0, __pyx_k_KEY_APOSTROPHE, sizeof(__pyx_k_KEY_APOSTROPHE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_B, sizeof(__pyx_k_KEY_B), 0, 0, 1, 1},
  {0, __pyx_k_KEY_BACKSLASH, sizeof(__pyx_k_KEY_BACKSLASH), 0, 0, 1, 1},
  {0, __pyx_k_KEY_BACKSPACE, sizeof(__pyx_k_KEY_BACKSPACE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_C, sizeof(__pyx_k_KEY_C), 0, 0, 1, 1},
  {0, __pyx_k_KEY_CAPS_LOCK, sizeof(__pyx_k_KEY_CAPS_LOCK), 0, 0, 1, 1},
  {0, __pyx_k_KEY_COMMA, sizeof(__pyx_k_KEY_COMMA), 0, 0, 1, 1},
  {0, __pyx_k_KEY_D, sizeof(__pyx_k_KEY_D), 0, 0, 1, 1},
  {0, __pyx_k_KEY_DELETE, sizeof(__pyx_k_KEY_DELETE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_DOWN, sizeof(__pyx_k_KEY_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_KEY_E, sizeof(__pyx_k_KEY_E), 0, 0, 1, 1},
  {0, __pyx_k_KEY_END, sizeof(__pyx_k_KEY_END), 0, 0, 1, 1},
  {0, __pyx_k_KEY_ENTER, sizeof(__pyx_k_KEY_ENTER), 0, 0, 1, 1},
  {0, __pyx_k_KEY_EQUAL, sizeof(__pyx_k_KEY_EQUAL), 0, 0, 1, 1},
  {0, __pyx_k_KEY_ESCAPE, sizeof(__pyx_k_KEY_ESCAPE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F, sizeof(__pyx_k_KEY_F), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F1, sizeof(__pyx_k_KEY_F1), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F10, sizeof(__pyx_k_KEY_F10), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F11, sizeof(__pyx_k_KEY_F11), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F12, sizeof(__pyx_k_KEY_F12), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F13, sizeof(__pyx_k_KEY_F13), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F14, sizeof(__pyx_k_KEY_F14), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F15, sizeof(__pyx_k_KEY_F15), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F16, sizeof(__pyx_k_KEY_F16), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F17, sizeof(__pyx_k_KEY_F17), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F18, sizeof(__pyx_k_KEY_F18), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F19, sizeof(__pyx_k_KEY_F19), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F2, sizeof(__pyx_k_KEY_F2), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F20, sizeof(__pyx_k_KEY_F20), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F21, sizeof(__pyx_k_KEY_F21), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F22, sizeof(__pyx_k_KEY_F22), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F23, sizeof(__pyx_k_KEY_F23), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F24, sizeof(__pyx_k_KEY_F24), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F25, sizeof(__pyx_k_KEY_F25), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F3, sizeof(__pyx_k_KEY_F3), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F4, sizeof(__pyx_k_KEY_F4), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F5, sizeof(__pyx_k_KEY_F5), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F6, sizeof(__pyx_k_KEY_F6), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F7, sizeof(__pyx_k_KEY_F7), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F8, sizeof(__pyx_k_KEY_F8), 0, 0, 1, 1},
  {0, __pyx_k_KEY_F9, sizeof(__pyx_k_KEY_F9), 0, 0, 1, 1},
  {0, __pyx_k_KEY_G, sizeof(__pyx_k_KEY_G), 0, 0, 1, 1},
  {0, __pyx_k_KEY_GRAVE_ACCENT, sizeof(__pyx_k_KEY_GRAVE_ACCENT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_H, sizeof(__pyx_k_KEY_H), 0, 0, 1, 1},
  {0, __pyx_k_KEY_HOME, sizeof(__pyx_k_KEY_HOME), 0, 0, 1, 1},
  {0, __pyx_k_KEY_I, sizeof(__pyx_k_KEY_I), 0, 0, 1, 1},
  {0, __pyx_k_KEY_INSERT, sizeof(__pyx_k_KEY_INSERT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_J, sizeof(__pyx_k_KEY_J), 0, 0, 1, 1},
  {0, __pyx_k_KEY_K, sizeof(__pyx_k_KEY_K), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_0, sizeof(__pyx_k_KEY_KP_0), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_1, sizeof(__pyx_k_KEY_KP_1), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_2, sizeof(__pyx_k_KEY_KP_2), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_3, sizeof(__pyx_k_KEY_KP_3), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_4, sizeof(__pyx_k_KEY_KP_4), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_5, sizeof(__pyx_k_KEY_KP_5), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_6, sizeof(__pyx_k_KEY_KP_6), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_7, sizeof(__pyx_k_KEY_KP_7), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_8, sizeof(__pyx_k_KEY_KP_8), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_9, sizeof(__pyx_k_KEY_KP_9), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_ADD, sizeof(__pyx_k_KEY_KP_ADD), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_DECIMAL, sizeof(__pyx_k_KEY_KP_DECIMAL), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_DIVIDE, sizeof(__pyx_k_KEY_KP_DIVIDE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_ENTER, sizeof(__pyx_k_KEY_KP_ENTER), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_EQUAL, sizeof(__pyx_k_KEY_KP_EQUAL), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_MULTIPLY, sizeof(__pyx_k_KEY_KP_MULTIPLY), 0, 0, 1, 1},
  {0, __pyx_k_KEY_KP_SUBTRACT, sizeof(__pyx_k_KEY_KP_SUBTRACT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_L, sizeof(__pyx_k_KEY_L), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LAST, sizeof(__pyx_k_KEY_LAST), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT, sizeof(__pyx_k_KEY_LEFT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT_ALT, sizeof(__pyx_k_KEY_LEFT_ALT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT_BRACKET, sizeof(__pyx_k_KEY_LEFT_BRACKET), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT_CONTROL, sizeof(__pyx_k_KEY_LEFT_CONTROL), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT_SHIFT, sizeof(__pyx_k_KEY_LEFT_SHIFT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_LEFT_SUPER, sizeof(__pyx_k_KEY_LEFT_SUPER), 0, 0, 1, 1},
  {0, __pyx_k_KEY_M, sizeof(__pyx_k_KEY_M), 0, 0, 1, 1},
  {0, __pyx_k_KEY_MENU, sizeof(__pyx_k_KEY_MENU), 0, 0, 1, 1},
  {0, __pyx_k_KEY_MINUS, sizeof(__pyx_k_KEY_MINUS), 0, 0, 1, 1},
  {0, __pyx_k_KEY_N, sizeof(__pyx_k_KEY_N), 0, 0, 1, 1},
  {0, __pyx_k_KEY_NUM_LOCK, sizeof(__pyx_k_KEY_NUM_LOCK), 0, 0, 1, 1},
  {0, __pyx_k_KEY_O, sizeof(__pyx_k_KEY_O), 0, 0, 1, 1},
  {0, __pyx_k_KEY_P, sizeof(__pyx_k_KEY_P), 0, 0, 1, 1},
  {0, __pyx_k_KEY_PAGE_DOWN, sizeof(__pyx_k_KEY_PAGE_DOWN), 0, 0, 1, 1},
  {0, __pyx_k_KEY_PAGE_UP, sizeof(__pyx_k_KEY_PAGE_UP), 0, 0, 1, 1},
  {0, __pyx_k_KEY_PAUSE, sizeof(__pyx_k_KEY_PAUSE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_PERIOD, sizeof(__pyx_k_KEY_PERIOD), 0, 0, 1, 1},
  {0, __pyx_k_KEY_PRINT_SCREEN, sizeof(__pyx_k_KEY_PRINT_SCREEN), 0, 0, 1, 1},
  {0, __pyx_k_KEY_Q, sizeof(__pyx_k_KEY_Q), 0, 0, 1, 1},
  {0, __pyx_k_KEY_R, sizeof(__pyx_k_KEY_R), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT, sizeof(__pyx_k_KEY_RIGHT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT_ALT, sizeof(__pyx_k_KEY_RIGHT_ALT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT_BRACKET, sizeof(__pyx_k_KEY_RIGHT_BRACKET), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT_CONTROL, sizeof(__pyx_k_KEY_RIGHT_CONTROL), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT_SHIFT, sizeof(__pyx_k_KEY_RIGHT_SHIFT), 0, 0, 1, 1},
  {0, __pyx_k_KEY_RIGHT_SUPER, sizeof(__pyx_k_KEY_RIGHT_SUPER), 0, 0, 1, 1},
  {0, __pyx_k_KEY_S, sizeof(__pyx_k_KEY_S), 0, 0, 1, 1},
  {0, __pyx_k_KEY_SCROLL_LOCK, sizeof(__pyx_k_KEY_SCROLL_LOCK), 0, 0, 1, 1},
  {0, __pyx_k_KEY_SEMICOLON, sizeof(__pyx_k_KEY_SEMICOLON), 0, 0, 1, 1},
  {0, __pyx_k_KEY_SLASH, sizeof(__pyx_k_KEY_SLASH), 0, 0, 1, 1},
  {0, __pyx_k_KEY_SPACE, sizeof(__pyx_k_KEY_SPACE), 0, 0, 1, 1},
  {0, __pyx_k_KEY_T, sizeof(__pyx_k_KEY_T), 0, 0, 1, 1},
  {0, __pyx_k_KEY_TAB, sizeof(__pyx_k_KEY_TAB), 0, 0, 1, 1},
  {0, __pyx_k_KEY_U, sizeof(__pyx_k_KEY_U), 0, 0, 1, 1},
  {0, __pyx_k_KEY_UNKNOWN, sizeof(__pyx_k_KEY_UNKNOWN), 0, 0, 1, 1},
  {0, __pyx_k_KEY_UP, sizeof(__pyx_k_KEY_UP), 0, 0, 1, 1},
  {0, __pyx_k_KEY_V, sizeof(__pyx_k_KEY_V), 0, 0, 1, 1},
  {0, __pyx_k_KEY_W, sizeof(__pyx_k_KEY_W), 0, 0, 1, 1},
  {0, __pyx_k_KEY_WORLD_1, sizeof(__pyx_k_KEY_WORLD_1), 0, 0, 1, 1},
  {0, __pyx_k_KEY_WORLD_2, sizeof(__pyx_k_KEY_WORLD_2), 0, 0, 1, 1},
  {0, __pyx_k_KEY_X, sizeof(__pyx_k_KEY_X), 0, 0, 1, 1},
  {0, __pyx_k_KEY_Y, sizeof(__pyx_k_KEY_Y), 0, 0, 1, 1},
  {0, __pyx_k_KEY_Z, sizeof(__pyx_k_KEY_Z), 0, 0, 1, 1},
  {0, __pyx_k_LOCK_KEY_MODS, sizeof(__pyx_k_LOCK_KEY_MODS), 0, 0, 1, 1},
  {0, __pyx_k_LOSE_CONTEXT_ON_RESET, sizeof(__pyx_k_LOSE_CONTEXT_ON_RESET), 0, 0, 1, 1},
  {0, __pyx_k_MAXIMIZED, sizeof(__pyx_k_MAXIMIZED), 0, 0, 1, 1},
  {0, __pyx_k_MOD_ALT, sizeof(__pyx_k_MOD_ALT), 0, 0, 1, 1},
  {0, __pyx_k_MOD_CAPS_LOCK, sizeof(__pyx_k_MOD_CAPS_LOCK), 0, 0, 1, 1},
  {0, __pyx_k_MOD_CONTROL, sizeof(__pyx_k_MOD_CONTROL), 0, 0, 1, 1},
  {0, __pyx_k_MOD_NUM_LOCK, sizeof(__pyx_k_MOD_NUM_LOCK), 0, 0, 1, 1},
  {0, __pyx_k_MOD_SHIFT, sizeof(__pyx_k_MOD_SHIFT), 0, 0, 1, 1},
  {0, __pyx_k_MOD_SUPER, sizeof(__pyx_k_MOD_SUPER), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_1, sizeof(__pyx_k_MOUSE_BUTTON_1), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_2, sizeof(__pyx_k_MOUSE_BUTTON_2), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_3, sizeof(__pyx_k_MOUSE_BUTTON_3), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_4, sizeof(__pyx_k_MOUSE_BUTTON_4), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_5, sizeof(__pyx_k_MOUSE_BUTTON_5), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_6, sizeof(__pyx_k_MOUSE_BUTTON_6), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_7, sizeof(__pyx_k_MOUSE_BUTTON_7), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_8, sizeof(__pyx_k_MOUSE_BUTTON_8), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_LAST, sizeof(__pyx_k_MOUSE_BUTTON_LAST), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_LEFT, sizeof(__pyx_k_MOUSE_BUTTON_LEFT), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_MIDDLE, sizeof(__pyx_k_MOUSE_BUTTON_MIDDLE), 0, 0, 1, 1},
  {0, __pyx_k_MOUSE_BUTTON_RIGHT, sizeof(__pyx_k_MOUSE_BUTTON_RIGHT), 0, 0, 1, 1},
  {0, __pyx_k_NATIVE_CONTEXT_API, sizeof(__pyx_k_NATIVE_CONTEXT_API), 0, 0, 1, 1},
  {0, __pyx_k_NOT_INITIALIZED, sizeof(__pyx_k_NOT_INITIALIZED), 0, 0, 1, 1},
  {0, __pyx_k_NO_API, sizeof(__pyx_k_NO_API), 0, 0, 1, 1},
  {0, __pyx_k_NO_CURRENT_CONTEXT, sizeof(__pyx_k_NO_CURRENT_CONTEXT), 0, 0, 1, 1},
  {0, __pyx_k_NO_ERROR, sizeof(__pyx_k_NO_ERROR), 0, 0, 1, 1},
  {0, __pyx_k_NO_RESET_NOTIFICATION, sizeof(__pyx_k_NO_RESET_NOTIFICATION), 0, 0, 1, 1},
  {0, __pyx_k_NO_ROBUSTNESS, sizeof(__pyx_k_NO_ROBUSTNESS), 0, 0, 1, 1},
  {0, __pyx_k_NO_WINDOW_CONTEXT, sizeof(__pyx_k_NO_WINDOW_CONTEXT), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_ANY_PROFILE, sizeof(__pyx_k_OPENGL_ANY_PROFILE), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_API, sizeof(__pyx_k_OPENGL_API), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_COMPAT_PROFILE, sizeof(__pyx_k_OPENGL_COMPAT_PROFILE), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_CORE_PROFILE, sizeof(__pyx_k_OPENGL_CORE_PROFILE), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_DEBUG_CONTEXT, sizeof(__pyx_k_OPENGL_DEBUG_CONTEXT), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_ES_API, sizeof(__pyx_k_OPENGL_ES_API), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_FORWARD_COMPAT, sizeof(__pyx_k_OPENGL_FORWARD_COMPAT), 0, 0, 1, 1},
  {0, __pyx_k_OPENGL_PROFILE, sizeof(__pyx_k_OPENGL_PROFILE), 0, 0, 1, 1},
  {0, __pyx_k_OSMESA_CONTEXT_API, sizeof(__pyx_k_OSMESA_CONTEXT_API), 0, 0, 1, 1},
  {0, __pyx_k_OUT_OF_MEMORY, sizeof(__pyx_k_OUT_OF_MEMORY), 0, 0, 1, 1},
  {0, __pyx_k_PLATFORM_ERROR, sizeof(__pyx_k_PLATFORM_ERROR), 0, 0, 1, 1},
  {0, __pyx_k_PRESS, sizeof(__pyx_k_PRESS), 0, 0, 1, 1},
  {0, __pyx_k_RAW_MOUSE_MOTION, sizeof(__pyx_k_RAW_MOUSE_MOTION), 0, 0, 1, 1},
  {0, __pyx_k_RED_BITS, sizeof(__pyx_k_RED_BITS), 0, 0, 1, 1},
  {0, __pyx_k_REFRESH_RATE, sizeof(__pyx_k_REFRESH_RATE), 0, 0, 1, 1},
  {0, __pyx_k_RELEASE, sizeof(__pyx_k_RELEASE), 0, 0, 1, 1},
  {0, __pyx_k_RELEASE_BEHAVIOR_FLUSH, sizeof(__pyx_k_RELEASE_BEHAVIOR_FLUSH), 0, 0, 1, 1},
  {0, __pyx_k_RELEASE_BEHAVIOR_NONE, sizeof(__pyx_k_RELEASE_BEHAVIOR_NONE), 0, 0, 1, 1},
  {0, __pyx_k_REPEAT, sizeof(__pyx_k_REPEAT), 0, 0, 1, 1},
  {0, __pyx_k_RESIZABLE, sizeof(__pyx_k_RESIZABLE), 0, 0, 1, 1},
  {0, __pyx_k_SAMPLES, sizeof(__pyx_k_SAMPLES), 0, 0, 1, 1},
  {0, __pyx_k_SCALE_TO_MONITOR, sizeof(__pyx_k_SCALE_TO_MONITOR), 0, 0, 1, 1},
  {0, __pyx_k_SRGB_CAPABLE, sizeof(__pyx_k_SRGB_CAPABLE), 0, 0, 1, 1},
  {0, __pyx_k_STENCIL_BITS, sizeof(__pyx_k_STENCIL_BITS), 0, 0, 1, 1},
  {0, __pyx_k_STEREO, sizeof(__pyx_k_STEREO), 0, 0, 1, 1},
  {0, __pyx_k_STICKY_KEYS, sizeof(__pyx_k_STICKY_KEYS), 0, 0, 1, 1},
  {0, __pyx_k_STICKY_MOUSE_BUTTONS, sizeof(__pyx_k_STICKY_MOUSE_BUTTONS), 0, 0, 1, 1},
  {0, __pyx_k_TRANSPARENT_FRAMEBUFFER, sizeof(__pyx_k_TRANSPARENT_FRAMEBUFFER), 0, 0, 1, 1},
  {0, __pyx_k_TRUE, sizeof(__pyx_k_TRUE), 0, 0, 1, 1},
  {0, __pyx_k_VERSION_MAJOR, sizeof(__pyx_k_VERSION_MAJOR), 0, 0, 1, 1},
  {0, __pyx_k_VERSION_MINOR, sizeof(__pyx_k_VERSION_MINOR), 0, 0, 1, 1},
  {0, __pyx_k_VERSION_REVISION, sizeof(__pyx_k_VERSION_REVISION), 0, 0, 1, 1},
  {0, __pyx_k_VERSION_UNAVAILABLE, sizeof(__pyx_k_VERSION_UNAVAILABLE), 0, 0, 1, 1},
  {0, __pyx_k_VISIBLE, sizeof(__pyx_k_VISIBLE), 0, 0, 1, 1},
  {0, __pyx_k_VRESIZE_CURSOR, sizeof(__pyx_k_VRESIZE_CURSOR), 0, 0, 1, 1},
  {0, __pyx_k_X11_CLASS_NAME, sizeof(__pyx_k_X11_CLASS_NAME), 0, 0, 1, 1},
  {0, __pyx_k_X11_INSTANCE_NAME, sizeof(__pyx_k_X11_INSTANCE_NAME), 0, 0, 1, 1},
  {0, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {0, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {0, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {0, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  #else
  {&__pyx_n_s_, __pyx_k_, sizeof(__pyx_k_), 0, 0, 1, 1},
  {&__pyx_n_s_ACCUM_ALPHA_BITS, __pyx_k_ACCUM_ALPHA_BITS, sizeof(__pyx_k_ACCUM_ALPHA_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_ACCUM_BLUE_BITS, __pyx_k_ACCUM_BLUE_BITS, sizeof(__pyx_k_ACCUM_BLUE_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_ACCUM_GREEN_BITS, __pyx_k_ACCUM_GREEN_BITS, sizeof(__pyx_k_ACCUM_GREEN_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_ACCUM_RED_BITS, __pyx_k_ACCUM_RED_BITS, sizeof(__pyx_k_ACCUM_RED_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_ALPHA_BITS, __pyx_k_ALPHA_BITS, sizeof(__pyx_k_ALPHA_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_ANY_RELEASE_BEHAVIOR, __pyx_k_ANY_RELEASE_BEHAVIOR, sizeof(__pyx_k_ANY_RELEASE_BEHAVIOR), 0, 0, 1, 1},
  {&__pyx_n_s_API_UNAVAILABLE, __pyx_k_API_UNAVAILABLE, sizeof(__pyx_k_API_UNAVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s_ARROW_CURSOR, __pyx_k_ARROW_CURSOR, sizeof(__pyx_k_ARROW_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_AUTO_ICONIFY, __pyx_k_AUTO_ICONIFY, sizeof(__pyx_k_AUTO_ICONIFY), 0, 0, 1, 1},
  {&__pyx_n_s_AUX_BUFFERS, __pyx_k_AUX_BUFFERS, sizeof(__pyx_k_AUX_BUFFERS), 0, 0, 1, 1},
  {&__pyx_n_s_BLUE_BITS, __pyx_k_BLUE_BITS, sizeof(__pyx_k_BLUE_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_CENTER_CURSOR, __pyx_k_CENTER_CURSOR, sizeof(__pyx_k_CENTER_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_CLIENT_API, __pyx_k_CLIENT_API, sizeof(__pyx_k_CLIENT_API), 0, 0, 1, 1},
  {&__pyx_n_s_COCOA_CHDIR_RESOURCES, __pyx_k_COCOA_CHDIR_RESOURCES, sizeof(__pyx_k_COCOA_CHDIR_RESOURCES), 0, 0, 1, 1},
  {&__pyx_n_s_COCOA_FRAME_NAME, __pyx_k_COCOA_FRAME_NAME, sizeof(__pyx_k_COCOA_FRAME_NAME), 0, 0, 1, 1},
  {&__pyx_n_s_COCOA_GRAPHICS_SWITCHING, __pyx_k_COCOA_GRAPHICS_SWITCHING, sizeof(__pyx_k_COCOA_GRAPHICS_SWITCHING), 0, 0, 1, 1},
  {&__pyx_n_s_COCOA_MENUBAR, __pyx_k_COCOA_MENUBAR, sizeof(__pyx_k_COCOA_MENUBAR), 0, 0, 1, 1},
  {&__pyx_n_s_COCOA_RETINA_FRAMEBUFFER, __pyx_k_COCOA_RETINA_FRAMEBUFFER, sizeof(__pyx_k_COCOA_RETINA_FRAMEBUFFER), 0, 0, 1, 1},
  {&__pyx_n_s_CONNECTED, __pyx_k_CONNECTED, sizeof(__pyx_k_CONNECTED), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_CREATION_API, __pyx_k_CONTEXT_CREATION_API, sizeof(__pyx_k_CONTEXT_CREATION_API), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_NO_ERROR, __pyx_k_CONTEXT_NO_ERROR, sizeof(__pyx_k_CONTEXT_NO_ERROR), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR, __pyx_k_CONTEXT_RELEASE_BEHAVIOR, sizeof(__pyx_k_CONTEXT_RELEASE_BEHAVIOR), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_REVISION, __pyx_k_CONTEXT_REVISION, sizeof(__pyx_k_CONTEXT_REVISION), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_ROBUSTNESS, __pyx_k_CONTEXT_ROBUSTNESS, sizeof(__pyx_k_CONTEXT_ROBUSTNESS), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_VERSION_MAJOR, __pyx_k_CONTEXT_VERSION_MAJOR, sizeof(__pyx_k_CONTEXT_VERSION_MAJOR), 0, 0, 1, 1},
  {&__pyx_n_s_CONTEXT_VERSION_MINOR, __pyx_k_CONTEXT_VERSION_MINOR, sizeof(__pyx_k_CONTEXT_VERSION_MINOR), 0, 0, 1, 1},
  {&__pyx_n_s_CROSSHAIR_CURSOR, __pyx_k_CROSSHAIR_CURSOR, sizeof(__pyx_k_CROSSHAIR_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_CURSOR, __pyx_k_CURSOR, sizeof(__pyx_k_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_CURSOR_DISABLED, __pyx_k_CURSOR_DISABLED, sizeof(__pyx_k_CURSOR_DISABLED), 0, 0, 1, 1},
  {&__pyx_n_s_CURSOR_HIDDEN, __pyx_k_CURSOR_HIDDEN, sizeof(__pyx_k_CURSOR_HIDDEN), 0, 0, 1, 1},
  {&__pyx_n_s_CURSOR_NORMAL, __pyx_k_CURSOR_NORMAL, sizeof(__pyx_k_CURSOR_NORMAL), 0, 0, 1, 1},
  {&__pyx_n_s_DECORATED, __pyx_k_DECORATED, sizeof(__pyx_k_DECORATED), 0, 0, 1, 1},
  {&__pyx_n_s_DEPTH_BITS, __pyx_k_DEPTH_BITS, sizeof(__pyx_k_DEPTH_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_DISCONNECTED, __pyx_k_DISCONNECTED, sizeof(__pyx_k_DISCONNECTED), 0, 0, 1, 1},
  {&__pyx_n_s_DONT_CARE, __pyx_k_DONT_CARE, sizeof(__pyx_k_DONT_CARE), 0, 0, 1, 1},
  {&__pyx_n_s_DOUBLEBUFFER, __pyx_k_DOUBLEBUFFER, sizeof(__pyx_k_DOUBLEBUFFER), 0, 0, 1, 1},
  {&__pyx_n_s_EGL_CONTEXT_API, __pyx_k_EGL_CONTEXT_API, sizeof(__pyx_k_EGL_CONTEXT_API), 0, 0, 1, 1},
  {&__pyx_n_s_FALSE, __pyx_k_FALSE, sizeof(__pyx_k_FALSE), 0, 0, 1, 1},
  {&__pyx_n_s_FLOATING, __pyx_k_FLOATING, sizeof(__pyx_k_FLOATING), 0, 0, 1, 1},
  {&__pyx_n_s_FOCUSED, __pyx_k_FOCUSED, sizeof(__pyx_k_FOCUSED), 0, 0, 1, 1},
  {&__pyx_n_s_FOCUS_ON_SHOW, __pyx_k_FOCUS_ON_SHOW, sizeof(__pyx_k_FOCUS_ON_SHOW), 0, 0, 1, 1},
  {&__pyx_n_s_FORMAT_UNAVAILABLE, __pyx_k_FORMAT_UNAVAILABLE, sizeof(__pyx_k_FORMAT_UNAVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_LAST, __pyx_k_GAMEPAD_AXIS_LAST, sizeof(__pyx_k_GAMEPAD_AXIS_LAST), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER, __pyx_k_GAMEPAD_AXIS_LEFT_TRIGGER, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_TRIGGER), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_LEFT_X, __pyx_k_GAMEPAD_AXIS_LEFT_X, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_X), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_LEFT_Y, __pyx_k_GAMEPAD_AXIS_LEFT_Y, sizeof(__pyx_k_GAMEPAD_AXIS_LEFT_Y), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER, __pyx_k_GAMEPAD_AXIS_RIGHT_TRIGGER, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_TRIGGER), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_RIGHT_X, __pyx_k_GAMEPAD_AXIS_RIGHT_X, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_X), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y, __pyx_k_GAMEPAD_AXIS_RIGHT_Y, sizeof(__pyx_k_GAMEPAD_AXIS_RIGHT_Y), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_A, __pyx_k_GAMEPAD_BUTTON_A, sizeof(__pyx_k_GAMEPAD_BUTTON_A), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_B, __pyx_k_GAMEPAD_BUTTON_B, sizeof(__pyx_k_GAMEPAD_BUTTON_B), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_BACK, __pyx_k_GAMEPAD_BUTTON_BACK, sizeof(__pyx_k_GAMEPAD_BUTTON_BACK), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_CIRCLE, __pyx_k_GAMEPAD_BUTTON_CIRCLE, sizeof(__pyx_k_GAMEPAD_BUTTON_CIRCLE), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_CROSS, __pyx_k_GAMEPAD_BUTTON_CROSS, sizeof(__pyx_k_GAMEPAD_BUTTON_CROSS), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN, __pyx_k_GAMEPAD_BUTTON_DPAD_DOWN, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT, __pyx_k_GAMEPAD_BUTTON_DPAD_LEFT, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_LEFT), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT, __pyx_k_GAMEPAD_BUTTON_DPAD_RIGHT, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_RIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP, __pyx_k_GAMEPAD_BUTTON_DPAD_UP, sizeof(__pyx_k_GAMEPAD_BUTTON_DPAD_UP), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_GUIDE, __pyx_k_GAMEPAD_BUTTON_GUIDE, sizeof(__pyx_k_GAMEPAD_BUTTON_GUIDE), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_LAST, __pyx_k_GAMEPAD_BUTTON_LAST, sizeof(__pyx_k_GAMEPAD_BUTTON_LAST), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER, __pyx_k_GAMEPAD_BUTTON_LEFT_BUMPER, sizeof(__pyx_k_GAMEPAD_BUTTON_LEFT_BUMPER), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB, __pyx_k_GAMEPAD_BUTTON_LEFT_THUMB, sizeof(__pyx_k_GAMEPAD_BUTTON_LEFT_THUMB), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER, __pyx_k_GAMEPAD_BUTTON_RIGHT_BUMPER, sizeof(__pyx_k_GAMEPAD_BUTTON_RIGHT_BUMPER), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB, __pyx_k_GAMEPAD_BUTTON_RIGHT_THUMB, sizeof(__pyx_k_GAMEPAD_BUTTON_RIGHT_THUMB), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_SQUARE, __pyx_k_GAMEPAD_BUTTON_SQUARE, sizeof(__pyx_k_GAMEPAD_BUTTON_SQUARE), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_START, __pyx_k_GAMEPAD_BUTTON_START, sizeof(__pyx_k_GAMEPAD_BUTTON_START), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE, __pyx_k_GAMEPAD_BUTTON_TRIANGLE, sizeof(__pyx_k_GAMEPAD_BUTTON_TRIANGLE), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_X, __pyx_k_GAMEPAD_BUTTON_X, sizeof(__pyx_k_GAMEPAD_BUTTON_X), 0, 0, 1, 1},
  {&__pyx_n_s_GAMEPAD_BUTTON_Y, __pyx_k_GAMEPAD_BUTTON_Y, sizeof(__pyx_k_GAMEPAD_BUTTON_Y), 0, 0, 1, 1},
  {&__pyx_n_s_GREEN_BITS, __pyx_k_GREEN_BITS, sizeof(__pyx_k_GREEN_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_HAND_CURSOR, __pyx_k_HAND_CURSOR, sizeof(__pyx_k_HAND_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_CENTERED, __pyx_k_HAT_CENTERED, sizeof(__pyx_k_HAT_CENTERED), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_DOWN, __pyx_k_HAT_DOWN, sizeof(__pyx_k_HAT_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_LEFT, __pyx_k_HAT_LEFT, sizeof(__pyx_k_HAT_LEFT), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_LEFT_DOWN, __pyx_k_HAT_LEFT_DOWN, sizeof(__pyx_k_HAT_LEFT_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_LEFT_UP, __pyx_k_HAT_LEFT_UP, sizeof(__pyx_k_HAT_LEFT_UP), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_RIGHT, __pyx_k_HAT_RIGHT, sizeof(__pyx_k_HAT_RIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_RIGHT_DOWN, __pyx_k_HAT_RIGHT_DOWN, sizeof(__pyx_k_HAT_RIGHT_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_RIGHT_UP, __pyx_k_HAT_RIGHT_UP, sizeof(__pyx_k_HAT_RIGHT_UP), 0, 0, 1, 1},
  {&__pyx_n_s_HAT_UP, __pyx_k_HAT_UP, sizeof(__pyx_k_HAT_UP), 0, 0, 1, 1},
  {&__pyx_n_s_HOVERED, __pyx_k_HOVERED, sizeof(__pyx_k_HOVERED), 0, 0, 1, 1},
  {&__pyx_n_s_HRESIZE_CURSOR, __pyx_k_HRESIZE_CURSOR, sizeof(__pyx_k_HRESIZE_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_IBEAM_CURSOR, __pyx_k_IBEAM_CURSOR, sizeof(__pyx_k_IBEAM_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_ICONIFIED, __pyx_k_ICONIFIED, sizeof(__pyx_k_ICONIFIED), 0, 0, 1, 1},
  {&__pyx_n_s_INVALID_ENUM, __pyx_k_INVALID_ENUM, sizeof(__pyx_k_INVALID_ENUM), 0, 0, 1, 1},
  {&__pyx_n_s_INVALID_VALUE, __pyx_k_INVALID_VALUE, sizeof(__pyx_k_INVALID_VALUE), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_1, __pyx_k_JOYSTICK_1, sizeof(__pyx_k_JOYSTICK_1), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_10, __pyx_k_JOYSTICK_10, sizeof(__pyx_k_JOYSTICK_10), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_11, __pyx_k_JOYSTICK_11, sizeof(__pyx_k_JOYSTICK_11), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_12, __pyx_k_JOYSTICK_12, sizeof(__pyx_k_JOYSTICK_12), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_13, __pyx_k_JOYSTICK_13, sizeof(__pyx_k_JOYSTICK_13), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_14, __pyx_k_JOYSTICK_14, sizeof(__pyx_k_JOYSTICK_14), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_15, __pyx_k_JOYSTICK_15, sizeof(__pyx_k_JOYSTICK_15), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_16, __pyx_k_JOYSTICK_16, sizeof(__pyx_k_JOYSTICK_16), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_2, __pyx_k_JOYSTICK_2, sizeof(__pyx_k_JOYSTICK_2), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_3, __pyx_k_JOYSTICK_3, sizeof(__pyx_k_JOYSTICK_3), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_4, __pyx_k_JOYSTICK_4, sizeof(__pyx_k_JOYSTICK_4), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_5, __pyx_k_JOYSTICK_5, sizeof(__pyx_k_JOYSTICK_5), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_6, __pyx_k_JOYSTICK_6, sizeof(__pyx_k_JOYSTICK_6), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_7, __pyx_k_JOYSTICK_7, sizeof(__pyx_k_JOYSTICK_7), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_8, __pyx_k_JOYSTICK_8, sizeof(__pyx_k_JOYSTICK_8), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_9, __pyx_k_JOYSTICK_9, sizeof(__pyx_k_JOYSTICK_9), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_HAT_BUTTONS, __pyx_k_JOYSTICK_HAT_BUTTONS, sizeof(__pyx_k_JOYSTICK_HAT_BUTTONS), 0, 0, 1, 1},
  {&__pyx_n_s_JOYSTICK_LAST, __pyx_k_JOYSTICK_LAST, sizeof(__pyx_k_JOYSTICK_LAST), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_0, __pyx_k_KEY_0, sizeof(__pyx_k_KEY_0), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_1, __pyx_k_KEY_1, sizeof(__pyx_k_KEY_1), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_2, __pyx_k_KEY_2, sizeof(__pyx_k_KEY_2), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_3, __pyx_k_KEY_3, sizeof(__pyx_k_KEY_3), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_4, __pyx_k_KEY_4, sizeof(__pyx_k_KEY_4), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_5, __pyx_k_KEY_5, sizeof(__pyx_k_KEY_5), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_6, __pyx_k_KEY_6, sizeof(__pyx_k_KEY_6), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_7, __pyx_k_KEY_7, sizeof(__pyx_k_KEY_7), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_8, __pyx_k_KEY_8, sizeof(__pyx_k_KEY_8), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_9, __pyx_k_KEY_9, sizeof(__pyx_k_KEY_9), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_A, __pyx_k_KEY_A, sizeof(__pyx_k_KEY_A), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_APOSTROPHE, __pyx_k_KEY_APOSTROPHE, sizeof(__pyx_k_KEY_APOSTROPHE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_B, __pyx_k_KEY_B, sizeof(__pyx_k_KEY_B), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_BACKSLASH, __pyx_k_KEY_BACKSLASH, sizeof(__pyx_k_KEY_BACKSLASH), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_BACKSPACE, __pyx_k_KEY_BACKSPACE, sizeof(__pyx_k_KEY_BACKSPACE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_C, __pyx_k_KEY_C, sizeof(__pyx_k_KEY_C), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_CAPS_LOCK, __pyx_k_KEY_CAPS_LOCK, sizeof(__pyx_k_KEY_CAPS_LOCK), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_COMMA, __pyx_k_KEY_COMMA, sizeof(__pyx_k_KEY_COMMA), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_D, __pyx_k_KEY_D, sizeof(__pyx_k_KEY_D), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_DELETE, __pyx_k_KEY_DELETE, sizeof(__pyx_k_KEY_DELETE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_DOWN, __pyx_k_KEY_DOWN, sizeof(__pyx_k_KEY_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_E, __pyx_k_KEY_E, sizeof(__pyx_k_KEY_E), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_END, __pyx_k_KEY_END, sizeof(__pyx_k_KEY_END), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_ENTER, __pyx_k_KEY_ENTER, sizeof(__pyx_k_KEY_ENTER), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_EQUAL, __pyx_k_KEY_EQUAL, sizeof(__pyx_k_KEY_EQUAL), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_ESCAPE, __pyx_k_KEY_ESCAPE, sizeof(__pyx_k_KEY_ESCAPE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F, __pyx_k_KEY_F, sizeof(__pyx_k_KEY_F), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F1, __pyx_k_KEY_F1, sizeof(__pyx_k_KEY_F1), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F10, __pyx_k_KEY_F10, sizeof(__pyx_k_KEY_F10), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F11, __pyx_k_KEY_F11, sizeof(__pyx_k_KEY_F11), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F12, __pyx_k_KEY_F12, sizeof(__pyx_k_KEY_F12), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F13, __pyx_k_KEY_F13, sizeof(__pyx_k_KEY_F13), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F14, __pyx_k_KEY_F14, sizeof(__pyx_k_KEY_F14), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F15, __pyx_k_KEY_F15, sizeof(__pyx_k_KEY_F15), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F16, __pyx_k_KEY_F16, sizeof(__pyx_k_KEY_F16), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F17, __pyx_k_KEY_F17, sizeof(__pyx_k_KEY_F17), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F18, __pyx_k_KEY_F18, sizeof(__pyx_k_KEY_F18), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F19, __pyx_k_KEY_F19, sizeof(__pyx_k_KEY_F19), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F2, __pyx_k_KEY_F2, sizeof(__pyx_k_KEY_F2), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F20, __pyx_k_KEY_F20, sizeof(__pyx_k_KEY_F20), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F21, __pyx_k_KEY_F21, sizeof(__pyx_k_KEY_F21), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F22, __pyx_k_KEY_F22, sizeof(__pyx_k_KEY_F22), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F23, __pyx_k_KEY_F23, sizeof(__pyx_k_KEY_F23), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F24, __pyx_k_KEY_F24, sizeof(__pyx_k_KEY_F24), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F25, __pyx_k_KEY_F25, sizeof(__pyx_k_KEY_F25), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F3, __pyx_k_KEY_F3, sizeof(__pyx_k_KEY_F3), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F4, __pyx_k_KEY_F4, sizeof(__pyx_k_KEY_F4), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F5, __pyx_k_KEY_F5, sizeof(__pyx_k_KEY_F5), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F6, __pyx_k_KEY_F6, sizeof(__pyx_k_KEY_F6), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F7, __pyx_k_KEY_F7, sizeof(__pyx_k_KEY_F7), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F8, __pyx_k_KEY_F8, sizeof(__pyx_k_KEY_F8), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_F9, __pyx_k_KEY_F9, sizeof(__pyx_k_KEY_F9), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_G, __pyx_k_KEY_G, sizeof(__pyx_k_KEY_G), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_GRAVE_ACCENT, __pyx_k_KEY_GRAVE_ACCENT, sizeof(__pyx_k_KEY_GRAVE_ACCENT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_H, __pyx_k_KEY_H, sizeof(__pyx_k_KEY_H), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_HOME, __pyx_k_KEY_HOME, sizeof(__pyx_k_KEY_HOME), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_I, __pyx_k_KEY_I, sizeof(__pyx_k_KEY_I), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_INSERT, __pyx_k_KEY_INSERT, sizeof(__pyx_k_KEY_INSERT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_J, __pyx_k_KEY_J, sizeof(__pyx_k_KEY_J), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_K, __pyx_k_KEY_K, sizeof(__pyx_k_KEY_K), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_0, __pyx_k_KEY_KP_0, sizeof(__pyx_k_KEY_KP_0), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_1, __pyx_k_KEY_KP_1, sizeof(__pyx_k_KEY_KP_1), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_2, __pyx_k_KEY_KP_2, sizeof(__pyx_k_KEY_KP_2), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_3, __pyx_k_KEY_KP_3, sizeof(__pyx_k_KEY_KP_3), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_4, __pyx_k_KEY_KP_4, sizeof(__pyx_k_KEY_KP_4), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_5, __pyx_k_KEY_KP_5, sizeof(__pyx_k_KEY_KP_5), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_6, __pyx_k_KEY_KP_6, sizeof(__pyx_k_KEY_KP_6), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_7, __pyx_k_KEY_KP_7, sizeof(__pyx_k_KEY_KP_7), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_8, __pyx_k_KEY_KP_8, sizeof(__pyx_k_KEY_KP_8), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_9, __pyx_k_KEY_KP_9, sizeof(__pyx_k_KEY_KP_9), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_ADD, __pyx_k_KEY_KP_ADD, sizeof(__pyx_k_KEY_KP_ADD), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_DECIMAL, __pyx_k_KEY_KP_DECIMAL, sizeof(__pyx_k_KEY_KP_DECIMAL), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_DIVIDE, __pyx_k_KEY_KP_DIVIDE, sizeof(__pyx_k_KEY_KP_DIVIDE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_ENTER, __pyx_k_KEY_KP_ENTER, sizeof(__pyx_k_KEY_KP_ENTER), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_EQUAL, __pyx_k_KEY_KP_EQUAL, sizeof(__pyx_k_KEY_KP_EQUAL), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_MULTIPLY, __pyx_k_KEY_KP_MULTIPLY, sizeof(__pyx_k_KEY_KP_MULTIPLY), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_KP_SUBTRACT, __pyx_k_KEY_KP_SUBTRACT, sizeof(__pyx_k_KEY_KP_SUBTRACT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_L, __pyx_k_KEY_L, sizeof(__pyx_k_KEY_L), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LAST, __pyx_k_KEY_LAST, sizeof(__pyx_k_KEY_LAST), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT, __pyx_k_KEY_LEFT, sizeof(__pyx_k_KEY_LEFT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT_ALT, __pyx_k_KEY_LEFT_ALT, sizeof(__pyx_k_KEY_LEFT_ALT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT_BRACKET, __pyx_k_KEY_LEFT_BRACKET, sizeof(__pyx_k_KEY_LEFT_BRACKET), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT_CONTROL, __pyx_k_KEY_LEFT_CONTROL, sizeof(__pyx_k_KEY_LEFT_CONTROL), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT_SHIFT, __pyx_k_KEY_LEFT_SHIFT, sizeof(__pyx_k_KEY_LEFT_SHIFT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_LEFT_SUPER, __pyx_k_KEY_LEFT_SUPER, sizeof(__pyx_k_KEY_LEFT_SUPER), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_M, __pyx_k_KEY_M, sizeof(__pyx_k_KEY_M), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_MENU, __pyx_k_KEY_MENU, sizeof(__pyx_k_KEY_MENU), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_MINUS, __pyx_k_KEY_MINUS, sizeof(__pyx_k_KEY_MINUS), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_N, __pyx_k_KEY_N, sizeof(__pyx_k_KEY_N), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_NUM_LOCK, __pyx_k_KEY_NUM_LOCK, sizeof(__pyx_k_KEY_NUM_LOCK), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_O, __pyx_k_KEY_O, sizeof(__pyx_k_KEY_O), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_P, __pyx_k_KEY_P, sizeof(__pyx_k_KEY_P), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_PAGE_DOWN, __pyx_k_KEY_PAGE_DOWN, sizeof(__pyx_k_KEY_PAGE_DOWN), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_PAGE_UP, __pyx_k_KEY_PAGE_UP, sizeof(__pyx_k_KEY_PAGE_UP), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_PAUSE, __pyx_k_KEY_PAUSE, sizeof(__pyx_k_KEY_PAUSE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_PERIOD, __pyx_k_KEY_PERIOD, sizeof(__pyx_k_KEY_PERIOD), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_PRINT_SCREEN, __pyx_k_KEY_PRINT_SCREEN, sizeof(__pyx_k_KEY_PRINT_SCREEN), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_Q, __pyx_k_KEY_Q, sizeof(__pyx_k_KEY_Q), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_R, __pyx_k_KEY_R, sizeof(__pyx_k_KEY_R), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT, __pyx_k_KEY_RIGHT, sizeof(__pyx_k_KEY_RIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT_ALT, __pyx_k_KEY_RIGHT_ALT, sizeof(__pyx_k_KEY_RIGHT_ALT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT_BRACKET, __pyx_k_KEY_RIGHT_BRACKET, sizeof(__pyx_k_KEY_RIGHT_BRACKET), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT_CONTROL, __pyx_k_KEY_RIGHT_CONTROL, sizeof(__pyx_k_KEY_RIGHT_CONTROL), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT_SHIFT, __pyx_k_KEY_RIGHT_SHIFT, sizeof(__pyx_k_KEY_RIGHT_SHIFT), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_RIGHT_SUPER, __pyx_k_KEY_RIGHT_SUPER, sizeof(__pyx_k_KEY_RIGHT_SUPER), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_S, __pyx_k_KEY_S, sizeof(__pyx_k_KEY_S), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_SCROLL_LOCK, __pyx_k_KEY_SCROLL_LOCK, sizeof(__pyx_k_KEY_SCROLL_LOCK), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_SEMICOLON, __pyx_k_KEY_SEMICOLON, sizeof(__pyx_k_KEY_SEMICOLON), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_SLASH, __pyx_k_KEY_SLASH, sizeof(__pyx_k_KEY_SLASH), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_SPACE, __pyx_k_KEY_SPACE, sizeof(__pyx_k_KEY_SPACE), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_T, __pyx_k_KEY_T, sizeof(__pyx_k_KEY_T), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_TAB, __pyx_k_KEY_TAB, sizeof(__pyx_k_KEY_TAB), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_U, __pyx_k_KEY_U, sizeof(__pyx_k_KEY_U), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_UNKNOWN, __pyx_k_KEY_UNKNOWN, sizeof(__pyx_k_KEY_UNKNOWN), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_UP, __pyx_k_KEY_UP, sizeof(__pyx_k_KEY_UP), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_V, __pyx_k_KEY_V, sizeof(__pyx_k_KEY_V), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_W, __pyx_k_KEY_W, sizeof(__pyx_k_KEY_W), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_WORLD_1, __pyx_k_KEY_WORLD_1, sizeof(__pyx_k_KEY_WORLD_1), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_WORLD_2, __pyx_k_KEY_WORLD_2, sizeof(__pyx_k_KEY_WORLD_2), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_X, __pyx_k_KEY_X, sizeof(__pyx_k_KEY_X), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_Y, __pyx_k_KEY_Y, sizeof(__pyx_k_KEY_Y), 0, 0, 1, 1},
  {&__pyx_n_s_KEY_Z, __pyx_k_KEY_Z, sizeof(__pyx_k_KEY_Z), 0, 0, 1, 1},
  {&__pyx_n_s_LOCK_KEY_MODS, __pyx_k_LOCK_KEY_MODS, sizeof(__pyx_k_LOCK_KEY_MODS), 0, 0, 1, 1},
  {&__pyx_n_s_LOSE_CONTEXT_ON_RESET, __pyx_k_LOSE_CONTEXT_ON_RESET, sizeof(__pyx_k_LOSE_CONTEXT_ON_RESET), 0, 0, 1, 1},
  {&__pyx_n_s_MAXIMIZED, __pyx_k_MAXIMIZED, sizeof(__pyx_k_MAXIMIZED), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_ALT, __pyx_k_MOD_ALT, sizeof(__pyx_k_MOD_ALT), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_CAPS_LOCK, __pyx_k_MOD_CAPS_LOCK, sizeof(__pyx_k_MOD_CAPS_LOCK), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_CONTROL, __pyx_k_MOD_CONTROL, sizeof(__pyx_k_MOD_CONTROL), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_NUM_LOCK, __pyx_k_MOD_NUM_LOCK, sizeof(__pyx_k_MOD_NUM_LOCK), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_SHIFT, __pyx_k_MOD_SHIFT, sizeof(__pyx_k_MOD_SHIFT), 0, 0, 1, 1},
  {&__pyx_n_s_MOD_SUPER, __pyx_k_MOD_SUPER, sizeof(__pyx_k_MOD_SUPER), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_1, __pyx_k_MOUSE_BUTTON_1, sizeof(__pyx_k_MOUSE_BUTTON_1), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_2, __pyx_k_MOUSE_BUTTON_2, sizeof(__pyx_k_MOUSE_BUTTON_2), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_3, __pyx_k_MOUSE_BUTTON_3, sizeof(__pyx_k_MOUSE_BUTTON_3), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_4, __pyx_k_MOUSE_BUTTON_4, sizeof(__pyx_k_MOUSE_BUTTON_4), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_5, __pyx_k_MOUSE_BUTTON_5, sizeof(__pyx_k_MOUSE_BUTTON_5), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_6, __pyx_k_MOUSE_BUTTON_6, sizeof(__pyx_k_MOUSE_BUTTON_6), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_7, __pyx_k_MOUSE_BUTTON_7, sizeof(__pyx_k_MOUSE_BUTTON_7), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_8, __pyx_k_MOUSE_BUTTON_8, sizeof(__pyx_k_MOUSE_BUTTON_8), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_LAST, __pyx_k_MOUSE_BUTTON_LAST, sizeof(__pyx_k_MOUSE_BUTTON_LAST), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_LEFT, __pyx_k_MOUSE_BUTTON_LEFT, sizeof(__pyx_k_MOUSE_BUTTON_LEFT), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_MIDDLE, __pyx_k_MOUSE_BUTTON_MIDDLE, sizeof(__pyx_k_MOUSE_BUTTON_MIDDLE), 0, 0, 1, 1},
  {&__pyx_n_s_MOUSE_BUTTON_RIGHT, __pyx_k_MOUSE_BUTTON_RIGHT, sizeof(__pyx_k_MOUSE_BUTTON_RIGHT), 0, 0, 1, 1},
  {&__pyx_n_s_NATIVE_CONTEXT_API, __pyx_k_NATIVE_CONTEXT_API, sizeof(__pyx_k_NATIVE_CONTEXT_API), 0, 0, 1, 1},
  {&__pyx_n_s_NOT_INITIALIZED, __pyx_k_NOT_INITIALIZED, sizeof(__pyx_k_NOT_INITIALIZED), 0, 0, 1, 1},
  {&__pyx_n_s_NO_API, __pyx_k_NO_API, sizeof(__pyx_k_NO_API), 0, 0, 1, 1},
  {&__pyx_n_s_NO_CURRENT_CONTEXT, __pyx_k_NO_CURRENT_CONTEXT, sizeof(__pyx_k_NO_CURRENT_CONTEXT), 0, 0, 1, 1},
  {&__pyx_n_s_NO_ERROR, __pyx_k_NO_ERROR, sizeof(__pyx_k_NO_ERROR), 0, 0, 1, 1},
  {&__pyx_n_s_NO_RESET_NOTIFICATION, __pyx_k_NO_RESET_NOTIFICATION, sizeof(__pyx_k_NO_RESET_NOTIFICATION), 0, 0, 1, 1},
  {&__pyx_n_s_NO_ROBUSTNESS, __pyx_k_NO_ROBUSTNESS, sizeof(__pyx_k_NO_ROBUSTNESS), 0, 0, 1, 1},
  {&__pyx_n_s_NO_WINDOW_CONTEXT, __pyx_k_NO_WINDOW_CONTEXT, sizeof(__pyx_k_NO_WINDOW_CONTEXT), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_ANY_PROFILE, __pyx_k_OPENGL_ANY_PROFILE, sizeof(__pyx_k_OPENGL_ANY_PROFILE), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_API, __pyx_k_OPENGL_API, sizeof(__pyx_k_OPENGL_API), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_COMPAT_PROFILE, __pyx_k_OPENGL_COMPAT_PROFILE, sizeof(__pyx_k_OPENGL_COMPAT_PROFILE), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_CORE_PROFILE, __pyx_k_OPENGL_CORE_PROFILE, sizeof(__pyx_k_OPENGL_CORE_PROFILE), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_DEBUG_CONTEXT, __pyx_k_OPENGL_DEBUG_CONTEXT, sizeof(__pyx_k_OPENGL_DEBUG_CONTEXT), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_ES_API, __pyx_k_OPENGL_ES_API, sizeof(__pyx_k_OPENGL_ES_API), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_FORWARD_COMPAT, __pyx_k_OPENGL_FORWARD_COMPAT, sizeof(__pyx_k_OPENGL_FORWARD_COMPAT), 0, 0, 1, 1},
  {&__pyx_n_s_OPENGL_PROFILE, __pyx_k_OPENGL_PROFILE, sizeof(__pyx_k_OPENGL_PROFILE), 0, 0, 1, 1},
  {&__pyx_n_s_OSMESA_CONTEXT_API, __pyx_k_OSMESA_CONTEXT_API, sizeof(__pyx_k_OSMESA_CONTEXT_API), 0, 0, 1, 1},
  {&__pyx_n_s_OUT_OF_MEMORY, __pyx_k_OUT_OF_MEMORY, sizeof(__pyx_k_OUT_OF_MEMORY), 0, 0, 1, 1},
  {&__pyx_n_s_PLATFORM_ERROR, __pyx_k_PLATFORM_ERROR, sizeof(__pyx_k_PLATFORM_ERROR), 0, 0, 1, 1},
  {&__pyx_n_s_PRESS, __pyx_k_PRESS, sizeof(__pyx_k_PRESS), 0, 0, 1, 1},
  {&__pyx_n_s_RAW_MOUSE_MOTION, __pyx_k_RAW_MOUSE_MOTION, sizeof(__pyx_k_RAW_MOUSE_MOTION), 0, 0, 1, 1},
  {&__pyx_n_s_RED_BITS, __pyx_k_RED_BITS, sizeof(__pyx_k_RED_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_REFRESH_RATE, __pyx_k_REFRESH_RATE, sizeof(__pyx_k_REFRESH_RATE), 0, 0, 1, 1},
  {&__pyx_n_s_RELEASE, __pyx_k_RELEASE, sizeof(__pyx_k_RELEASE), 0, 0, 1, 1},
  {&__pyx_n_s_RELEASE_BEHAVIOR_FLUSH, __pyx_k_RELEASE_BEHAVIOR_FLUSH, sizeof(__pyx_k_RELEASE_BEHAVIOR_FLUSH), 0, 0, 1, 1},
  {&__pyx_n_s_RELEASE_BEHAVIOR_NONE, __pyx_k_RELEASE_BEHAVIOR_NONE, sizeof(__pyx_k_RELEASE_BEHAVIOR_NONE), 0, 0, 1, 1},
  {&__pyx_n_s_REPEAT, __pyx_k_REPEAT, sizeof(__pyx_k_REPEAT), 0, 0, 1, 1},
  {&__pyx_n_s_RESIZABLE, __pyx_k_RESIZABLE, sizeof(__pyx_k_RESIZABLE), 0, 0, 1, 1},
  {&__pyx_n_s_SAMPLES, __pyx_k_SAMPLES, sizeof(__pyx_k_SAMPLES), 0, 0, 1, 1},
  {&__pyx_n_s_SCALE_TO_MONITOR, __pyx_k_SCALE_TO_MONITOR, sizeof(__pyx_k_SCALE_TO_MONITOR), 0, 0, 1, 1},
  {&__pyx_n_s_SRGB_CAPABLE, __pyx_k_SRGB_CAPABLE, sizeof(__pyx_k_SRGB_CAPABLE), 0, 0, 1, 1},
  {&__pyx_n_s_STENCIL_BITS, __pyx_k_STENCIL_BITS, sizeof(__pyx_k_STENCIL_BITS), 0, 0, 1, 1},
  {&__pyx_n_s_STEREO, __pyx_k_STEREO, sizeof(__pyx_k_STEREO), 0, 0, 1, 1},
  {&__pyx_n_s_STICKY_KEYS, __pyx_k_STICKY_KEYS, sizeof(__pyx_k_STICKY_KEYS), 0, 0, 1, 1},
  {&__pyx_n_s_STICKY_MOUSE_BUTTONS, __pyx_k_STICKY_MOUSE_BUTTONS, sizeof(__pyx_k_STICKY_MOUSE_BUTTONS), 0, 0, 1, 1},
  {&__pyx_n_s_TRANSPARENT_FRAMEBUFFER, __pyx_k_TRANSPARENT_FRAMEBUFFER, sizeof(__pyx_k_TRANSPARENT_FRAMEBUFFER), 0, 0, 1, 1},
  {&__pyx_n_s_TRUE, __pyx_k_TRUE, sizeof(__pyx_k_TRUE), 0, 0, 1, 1},
  {&__pyx_n_s_VERSION_MAJOR, __pyx_k_VERSION_MAJOR, sizeof(__pyx_k_VERSION_MAJOR), 0, 0, 1, 1},
  {&__pyx_n_s_VERSION_MINOR, __pyx_k_VERSION_MINOR, sizeof(__pyx_k_VERSION_MINOR), 0, 0, 1, 1},
  {&__pyx_n_s_VERSION_REVISION, __pyx_k_VERSION_REVISION, sizeof(__pyx_k_VERSION_REVISION), 0, 0, 1, 1},
  {&__pyx_n_s_VERSION_UNAVAILABLE, __pyx_k_VERSION_UNAVAILABLE, sizeof(__pyx_k_VERSION_UNAVAILABLE), 0, 0, 1, 1},
  {&__pyx_n_s_VISIBLE, __pyx_k_VISIBLE, sizeof(__pyx_k_VISIBLE), 0, 0, 1, 1},
  {&__pyx_n_s_VRESIZE_CURSOR, __pyx_k_VRESIZE_CURSOR, sizeof(__pyx_k_VRESIZE_CURSOR), 0, 0, 1, 1},
  {&__pyx_n_s_X11_CLASS_NAME, __pyx_k_X11_CLASS_NAME, sizeof(__pyx_k_X11_CLASS_NAME), 0, 0, 1, 1},
  {&__pyx_n_s_X11_INSTANCE_NAME, __pyx_k_X11_INSTANCE_NAME, sizeof(__pyx_k_X11_INSTANCE_NAME), 0, 0, 1, 1},
  {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
  {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
  {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
  {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
  #endif
  {0, 0, 0, 0, 0, 0, 0}
};
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  return 0;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);
  __Pyx_RefNannyFinishContext();
  return 0;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  #if CYTHON_USE_MODULE_STATE
  if (__Pyx_InitString(__pyx_string_tab[0], &__pyx_n_s_) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[1], &__pyx_n_s_ACCUM_ALPHA_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[2], &__pyx_n_s_ACCUM_BLUE_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[3], &__pyx_n_s_ACCUM_GREEN_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[4], &__pyx_n_s_ACCUM_RED_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[5], &__pyx_n_s_ALPHA_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[6], &__pyx_n_s_ANY_RELEASE_BEHAVIOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[7], &__pyx_n_s_API_UNAVAILABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[8], &__pyx_n_s_ARROW_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[9], &__pyx_n_s_AUTO_ICONIFY) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[10], &__pyx_n_s_AUX_BUFFERS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[11], &__pyx_n_s_BLUE_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[12], &__pyx_n_s_CENTER_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[13], &__pyx_n_s_CLIENT_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[14], &__pyx_n_s_COCOA_CHDIR_RESOURCES) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[15], &__pyx_n_s_COCOA_FRAME_NAME) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[16], &__pyx_n_s_COCOA_GRAPHICS_SWITCHING) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[17], &__pyx_n_s_COCOA_MENUBAR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[18], &__pyx_n_s_COCOA_RETINA_FRAMEBUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[19], &__pyx_n_s_CONNECTED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[20], &__pyx_n_s_CONTEXT_CREATION_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[21], &__pyx_n_s_CONTEXT_NO_ERROR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[22], &__pyx_n_s_CONTEXT_RELEASE_BEHAVIOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[23], &__pyx_n_s_CONTEXT_REVISION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[24], &__pyx_n_s_CONTEXT_ROBUSTNESS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[25], &__pyx_n_s_CONTEXT_VERSION_MAJOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[26], &__pyx_n_s_CONTEXT_VERSION_MINOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[27], &__pyx_n_s_CROSSHAIR_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[28], &__pyx_n_s_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[29], &__pyx_n_s_CURSOR_DISABLED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[30], &__pyx_n_s_CURSOR_HIDDEN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[31], &__pyx_n_s_CURSOR_NORMAL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[32], &__pyx_n_s_DECORATED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[33], &__pyx_n_s_DEPTH_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[34], &__pyx_n_s_DISCONNECTED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[35], &__pyx_n_s_DONT_CARE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[36], &__pyx_n_s_DOUBLEBUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[37], &__pyx_n_s_EGL_CONTEXT_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[38], &__pyx_n_s_FALSE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[39], &__pyx_n_s_FLOATING) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[40], &__pyx_n_s_FOCUSED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[41], &__pyx_n_s_FOCUS_ON_SHOW) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[42], &__pyx_n_s_FORMAT_UNAVAILABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[43], &__pyx_n_s_GAMEPAD_AXIS_LAST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[44], &__pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[45], &__pyx_n_s_GAMEPAD_AXIS_LEFT_X) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[46], &__pyx_n_s_GAMEPAD_AXIS_LEFT_Y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[47], &__pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[48], &__pyx_n_s_GAMEPAD_AXIS_RIGHT_X) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[49], &__pyx_n_s_GAMEPAD_AXIS_RIGHT_Y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[50], &__pyx_n_s_GAMEPAD_BUTTON_A) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[51], &__pyx_n_s_GAMEPAD_BUTTON_B) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[52], &__pyx_n_s_GAMEPAD_BUTTON_BACK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[53], &__pyx_n_s_GAMEPAD_BUTTON_CIRCLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[54], &__pyx_n_s_GAMEPAD_BUTTON_CROSS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[55], &__pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[56], &__pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[57], &__pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[58], &__pyx_n_s_GAMEPAD_BUTTON_DPAD_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[59], &__pyx_n_s_GAMEPAD_BUTTON_GUIDE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[60], &__pyx_n_s_GAMEPAD_BUTTON_LAST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[61], &__pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[62], &__pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[63], &__pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[64], &__pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[65], &__pyx_n_s_GAMEPAD_BUTTON_SQUARE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[66], &__pyx_n_s_GAMEPAD_BUTTON_START) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[67], &__pyx_n_s_GAMEPAD_BUTTON_TRIANGLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[68], &__pyx_n_s_GAMEPAD_BUTTON_X) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[69], &__pyx_n_s_GAMEPAD_BUTTON_Y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[70], &__pyx_n_s_GREEN_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[71], &__pyx_n_s_HAND_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[72], &__pyx_n_s_HAT_CENTERED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[73], &__pyx_n_s_HAT_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[74], &__pyx_n_s_HAT_LEFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[75], &__pyx_n_s_HAT_LEFT_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[76], &__pyx_n_s_HAT_LEFT_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[77], &__pyx_n_s_HAT_RIGHT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[78], &__pyx_n_s_HAT_RIGHT_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[79], &__pyx_n_s_HAT_RIGHT_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[80], &__pyx_n_s_HAT_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[81], &__pyx_n_s_HOVERED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[82], &__pyx_n_s_HRESIZE_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[83], &__pyx_n_s_IBEAM_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[84], &__pyx_n_s_ICONIFIED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[85], &__pyx_n_s_INVALID_ENUM) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[86], &__pyx_n_s_INVALID_VALUE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[87], &__pyx_n_s_JOYSTICK_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[88], &__pyx_n_s_JOYSTICK_10) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[89], &__pyx_n_s_JOYSTICK_11) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[90], &__pyx_n_s_JOYSTICK_12) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[91], &__pyx_n_s_JOYSTICK_13) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[92], &__pyx_n_s_JOYSTICK_14) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[93], &__pyx_n_s_JOYSTICK_15) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[94], &__pyx_n_s_JOYSTICK_16) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[95], &__pyx_n_s_JOYSTICK_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[96], &__pyx_n_s_JOYSTICK_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[97], &__pyx_n_s_JOYSTICK_4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[98], &__pyx_n_s_JOYSTICK_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[99], &__pyx_n_s_JOYSTICK_6) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[100], &__pyx_n_s_JOYSTICK_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[101], &__pyx_n_s_JOYSTICK_8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[102], &__pyx_n_s_JOYSTICK_9) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[103], &__pyx_n_s_JOYSTICK_HAT_BUTTONS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[104], &__pyx_n_s_JOYSTICK_LAST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[105], &__pyx_n_s_KEY_0) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[106], &__pyx_n_s_KEY_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[107], &__pyx_n_s_KEY_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[108], &__pyx_n_s_KEY_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[109], &__pyx_n_s_KEY_4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[110], &__pyx_n_s_KEY_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[111], &__pyx_n_s_KEY_6) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[112], &__pyx_n_s_KEY_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[113], &__pyx_n_s_KEY_8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[114], &__pyx_n_s_KEY_9) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[115], &__pyx_n_s_KEY_A) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[116], &__pyx_n_s_KEY_APOSTROPHE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[117], &__pyx_n_s_KEY_B) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[118], &__pyx_n_s_KEY_BACKSLASH) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[119], &__pyx_n_s_KEY_BACKSPACE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[120], &__pyx_n_s_KEY_C) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[121], &__pyx_n_s_KEY_CAPS_LOCK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[122], &__pyx_n_s_KEY_COMMA) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[123], &__pyx_n_s_KEY_D) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[124], &__pyx_n_s_KEY_DELETE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[125], &__pyx_n_s_KEY_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[126], &__pyx_n_s_KEY_E) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[127], &__pyx_n_s_KEY_END) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[128], &__pyx_n_s_KEY_ENTER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[129], &__pyx_n_s_KEY_EQUAL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[130], &__pyx_n_s_KEY_ESCAPE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[131], &__pyx_n_s_KEY_F) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[132], &__pyx_n_s_KEY_F1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[133], &__pyx_n_s_KEY_F10) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[134], &__pyx_n_s_KEY_F11) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[135], &__pyx_n_s_KEY_F12) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[136], &__pyx_n_s_KEY_F13) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[137], &__pyx_n_s_KEY_F14) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[138], &__pyx_n_s_KEY_F15) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[139], &__pyx_n_s_KEY_F16) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[140], &__pyx_n_s_KEY_F17) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[141], &__pyx_n_s_KEY_F18) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[142], &__pyx_n_s_KEY_F19) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[143], &__pyx_n_s_KEY_F2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[144], &__pyx_n_s_KEY_F20) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[145], &__pyx_n_s_KEY_F21) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[146], &__pyx_n_s_KEY_F22) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[147], &__pyx_n_s_KEY_F23) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[148], &__pyx_n_s_KEY_F24) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[149], &__pyx_n_s_KEY_F25) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[150], &__pyx_n_s_KEY_F3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[151], &__pyx_n_s_KEY_F4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[152], &__pyx_n_s_KEY_F5) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[153], &__pyx_n_s_KEY_F6) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[154], &__pyx_n_s_KEY_F7) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[155], &__pyx_n_s_KEY_F8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[156], &__pyx_n_s_KEY_F9) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[157], &__pyx_n_s_KEY_G) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[158], &__pyx_n_s_KEY_GRAVE_ACCENT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[159], &__pyx_n_s_KEY_H) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[160], &__pyx_n_s_KEY_HOME) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[161], &__pyx_n_s_KEY_I) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[162], &__pyx_n_s_KEY_INSERT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[163], &__pyx_n_s_KEY_J) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[164], &__pyx_n_s_KEY_K) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[165], &__pyx_n_s_KEY_KP_0) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[166], &__pyx_n_s_KEY_KP_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[167], &__pyx_n_s_KEY_KP_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[168], &__pyx_n_s_KEY_KP_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[169], &__pyx_n_s_KEY_KP_4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[170], &__pyx_n_s_KEY_KP_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[171], &__pyx_n_s_KEY_KP_6) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[172], &__pyx_n_s_KEY_KP_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[173], &__pyx_n_s_KEY_KP_8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[174], &__pyx_n_s_KEY_KP_9) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[175], &__pyx_n_s_KEY_KP_ADD) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[176], &__pyx_n_s_KEY_KP_DECIMAL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[177], &__pyx_n_s_KEY_KP_DIVIDE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[178], &__pyx_n_s_KEY_KP_ENTER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[179], &__pyx_n_s_KEY_KP_EQUAL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[180], &__pyx_n_s_KEY_KP_MULTIPLY) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[181], &__pyx_n_s_KEY_KP_SUBTRACT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[182], &__pyx_n_s_KEY_L) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[183], &__pyx_n_s_KEY_LAST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[184], &__pyx_n_s_KEY_LEFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[185], &__pyx_n_s_KEY_LEFT_ALT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[186], &__pyx_n_s_KEY_LEFT_BRACKET) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[187], &__pyx_n_s_KEY_LEFT_CONTROL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[188], &__pyx_n_s_KEY_LEFT_SHIFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[189], &__pyx_n_s_KEY_LEFT_SUPER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[190], &__pyx_n_s_KEY_M) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[191], &__pyx_n_s_KEY_MENU) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[192], &__pyx_n_s_KEY_MINUS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[193], &__pyx_n_s_KEY_N) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[194], &__pyx_n_s_KEY_NUM_LOCK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[195], &__pyx_n_s_KEY_O) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[196], &__pyx_n_s_KEY_P) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[197], &__pyx_n_s_KEY_PAGE_DOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[198], &__pyx_n_s_KEY_PAGE_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[199], &__pyx_n_s_KEY_PAUSE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[200], &__pyx_n_s_KEY_PERIOD) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[201], &__pyx_n_s_KEY_PRINT_SCREEN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[202], &__pyx_n_s_KEY_Q) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[203], &__pyx_n_s_KEY_R) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[204], &__pyx_n_s_KEY_RIGHT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[205], &__pyx_n_s_KEY_RIGHT_ALT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[206], &__pyx_n_s_KEY_RIGHT_BRACKET) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[207], &__pyx_n_s_KEY_RIGHT_CONTROL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[208], &__pyx_n_s_KEY_RIGHT_SHIFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[209], &__pyx_n_s_KEY_RIGHT_SUPER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[210], &__pyx_n_s_KEY_S) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[211], &__pyx_n_s_KEY_SCROLL_LOCK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[212], &__pyx_n_s_KEY_SEMICOLON) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[213], &__pyx_n_s_KEY_SLASH) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[214], &__pyx_n_s_KEY_SPACE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[215], &__pyx_n_s_KEY_T) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[216], &__pyx_n_s_KEY_TAB) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[217], &__pyx_n_s_KEY_U) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[218], &__pyx_n_s_KEY_UNKNOWN) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[219], &__pyx_n_s_KEY_UP) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[220], &__pyx_n_s_KEY_V) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[221], &__pyx_n_s_KEY_W) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[222], &__pyx_n_s_KEY_WORLD_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[223], &__pyx_n_s_KEY_WORLD_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[224], &__pyx_n_s_KEY_X) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[225], &__pyx_n_s_KEY_Y) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[226], &__pyx_n_s_KEY_Z) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[227], &__pyx_n_s_LOCK_KEY_MODS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[228], &__pyx_n_s_LOSE_CONTEXT_ON_RESET) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[229], &__pyx_n_s_MAXIMIZED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[230], &__pyx_n_s_MOD_ALT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[231], &__pyx_n_s_MOD_CAPS_LOCK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[232], &__pyx_n_s_MOD_CONTROL) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[233], &__pyx_n_s_MOD_NUM_LOCK) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[234], &__pyx_n_s_MOD_SHIFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[235], &__pyx_n_s_MOD_SUPER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[236], &__pyx_n_s_MOUSE_BUTTON_1) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[237], &__pyx_n_s_MOUSE_BUTTON_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[238], &__pyx_n_s_MOUSE_BUTTON_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[239], &__pyx_n_s_MOUSE_BUTTON_4) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[240], &__pyx_n_s_MOUSE_BUTTON_5) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[241], &__pyx_n_s_MOUSE_BUTTON_6) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[242], &__pyx_n_s_MOUSE_BUTTON_7) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[243], &__pyx_n_s_MOUSE_BUTTON_8) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[244], &__pyx_n_s_MOUSE_BUTTON_LAST) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[245], &__pyx_n_s_MOUSE_BUTTON_LEFT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[246], &__pyx_n_s_MOUSE_BUTTON_MIDDLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[247], &__pyx_n_s_MOUSE_BUTTON_RIGHT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[248], &__pyx_n_s_NATIVE_CONTEXT_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[249], &__pyx_n_s_NOT_INITIALIZED) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[250], &__pyx_n_s_NO_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[251], &__pyx_n_s_NO_CURRENT_CONTEXT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[252], &__pyx_n_s_NO_ERROR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[253], &__pyx_n_s_NO_RESET_NOTIFICATION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[254], &__pyx_n_s_NO_ROBUSTNESS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[255], &__pyx_n_s_NO_WINDOW_CONTEXT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[256], &__pyx_n_s_OPENGL_ANY_PROFILE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[257], &__pyx_n_s_OPENGL_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[258], &__pyx_n_s_OPENGL_COMPAT_PROFILE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[259], &__pyx_n_s_OPENGL_CORE_PROFILE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[260], &__pyx_n_s_OPENGL_DEBUG_CONTEXT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[261], &__pyx_n_s_OPENGL_ES_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[262], &__pyx_n_s_OPENGL_FORWARD_COMPAT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[263], &__pyx_n_s_OPENGL_PROFILE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[264], &__pyx_n_s_OSMESA_CONTEXT_API) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[265], &__pyx_n_s_OUT_OF_MEMORY) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[266], &__pyx_n_s_PLATFORM_ERROR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[267], &__pyx_n_s_PRESS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[268], &__pyx_n_s_RAW_MOUSE_MOTION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[269], &__pyx_n_s_RED_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[270], &__pyx_n_s_REFRESH_RATE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[271], &__pyx_n_s_RELEASE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[272], &__pyx_n_s_RELEASE_BEHAVIOR_FLUSH) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[273], &__pyx_n_s_RELEASE_BEHAVIOR_NONE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[274], &__pyx_n_s_REPEAT) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[275], &__pyx_n_s_RESIZABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[276], &__pyx_n_s_SAMPLES) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[277], &__pyx_n_s_SCALE_TO_MONITOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[278], &__pyx_n_s_SRGB_CAPABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[279], &__pyx_n_s_STENCIL_BITS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[280], &__pyx_n_s_STEREO) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[281], &__pyx_n_s_STICKY_KEYS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[282], &__pyx_n_s_STICKY_MOUSE_BUTTONS) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[283], &__pyx_n_s_TRANSPARENT_FRAMEBUFFER) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[284], &__pyx_n_s_TRUE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[285], &__pyx_n_s_VERSION_MAJOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[286], &__pyx_n_s_VERSION_MINOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[287], &__pyx_n_s_VERSION_REVISION) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[288], &__pyx_n_s_VERSION_UNAVAILABLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[289], &__pyx_n_s_VISIBLE) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[290], &__pyx_n_s_VRESIZE_CURSOR) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[291], &__pyx_n_s_X11_CLASS_NAME) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[292], &__pyx_n_s_X11_INSTANCE_NAME) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[293], &__pyx_n_s_cline_in_traceback) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[294], &__pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[295], &__pyx_n_s_name) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  if (__Pyx_InitString(__pyx_string_tab[296], &__pyx_n_s_test) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  #endif
  #if !CYTHON_USE_MODULE_STATE
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  #endif
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  return 0;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_constants(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_constants},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "constants",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initconstants(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initconstants(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_constants(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_constants(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_constants(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'constants' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("constants", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_COMPILING_IN_LIMITED_API
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    Py_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_constants(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_engine__constants) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "engine.constants")) {
      if (unlikely((PyDict_SetItemString(modules, "engine.constants", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  (void)__Pyx_modinit_type_init_code();
  (void)__Pyx_modinit_type_import_code();
  (void)__Pyx_modinit_variable_import_code();
  (void)__Pyx_modinit_function_import_code();
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "engine/constants.py":3
 * from cython.cimports.engine.libs.glfw import *
 * 
 * VERSION_MAJOR = GLFW_VERSION_MAJOR             # <<<<<<<<<<<<<<
 * VERSION_MINOR = GLFW_VERSION_MINOR
 * VERSION_REVISION = GLFW_VERSION_REVISION
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VERSION_MAJOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERSION_MAJOR, __pyx_t_2) < 0) __PYX_ERR(0, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":4
 * 
 * VERSION_MAJOR = GLFW_VERSION_MAJOR
 * VERSION_MINOR = GLFW_VERSION_MINOR             # <<<<<<<<<<<<<<
 * VERSION_REVISION = GLFW_VERSION_REVISION
 * TRUE = GLFW_TRUE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VERSION_MINOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERSION_MINOR, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":5
 * VERSION_MAJOR = GLFW_VERSION_MAJOR
 * VERSION_MINOR = GLFW_VERSION_MINOR
 * VERSION_REVISION = GLFW_VERSION_REVISION             # <<<<<<<<<<<<<<
 * TRUE = GLFW_TRUE
 * FALSE = GLFW_FALSE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VERSION_REVISION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERSION_REVISION, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":6
 * VERSION_MINOR = GLFW_VERSION_MINOR
 * VERSION_REVISION = GLFW_VERSION_REVISION
 * TRUE = GLFW_TRUE             # <<<<<<<<<<<<<<
 * FALSE = GLFW_FALSE
 * RELEASE = GLFW_RELEASE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_TRUE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TRUE, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":7
 * VERSION_REVISION = GLFW_VERSION_REVISION
 * TRUE = GLFW_TRUE
 * FALSE = GLFW_FALSE             # <<<<<<<<<<<<<<
 * RELEASE = GLFW_RELEASE
 * PRESS = GLFW_PRESS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_FALSE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FALSE, __pyx_t_2) < 0) __PYX_ERR(0, 7, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":8
 * TRUE = GLFW_TRUE
 * FALSE = GLFW_FALSE
 * RELEASE = GLFW_RELEASE             # <<<<<<<<<<<<<<
 * PRESS = GLFW_PRESS
 * REPEAT = GLFW_REPEAT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RELEASE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RELEASE, __pyx_t_2) < 0) __PYX_ERR(0, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":9
 * FALSE = GLFW_FALSE
 * RELEASE = GLFW_RELEASE
 * PRESS = GLFW_PRESS             # <<<<<<<<<<<<<<
 * REPEAT = GLFW_REPEAT
 * HAT_CENTERED = GLFW_HAT_CENTERED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_PRESS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PRESS, __pyx_t_2) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":10
 * RELEASE = GLFW_RELEASE
 * PRESS = GLFW_PRESS
 * REPEAT = GLFW_REPEAT             # <<<<<<<<<<<<<<
 * HAT_CENTERED = GLFW_HAT_CENTERED
 * HAT_UP = GLFW_HAT_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_REPEAT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REPEAT, __pyx_t_2) < 0) __PYX_ERR(0, 10, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":11
 * PRESS = GLFW_PRESS
 * REPEAT = GLFW_REPEAT
 * HAT_CENTERED = GLFW_HAT_CENTERED             # <<<<<<<<<<<<<<
 * HAT_UP = GLFW_HAT_UP
 * HAT_RIGHT = GLFW_HAT_RIGHT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_CENTERED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_CENTERED, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":12
 * REPEAT = GLFW_REPEAT
 * HAT_CENTERED = GLFW_HAT_CENTERED
 * HAT_UP = GLFW_HAT_UP             # <<<<<<<<<<<<<<
 * HAT_RIGHT = GLFW_HAT_RIGHT
 * HAT_DOWN = GLFW_HAT_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_UP, __pyx_t_2) < 0) __PYX_ERR(0, 12, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":13
 * HAT_CENTERED = GLFW_HAT_CENTERED
 * HAT_UP = GLFW_HAT_UP
 * HAT_RIGHT = GLFW_HAT_RIGHT             # <<<<<<<<<<<<<<
 * HAT_DOWN = GLFW_HAT_DOWN
 * HAT_LEFT = GLFW_HAT_LEFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_RIGHT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_RIGHT, __pyx_t_2) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":14
 * HAT_UP = GLFW_HAT_UP
 * HAT_RIGHT = GLFW_HAT_RIGHT
 * HAT_DOWN = GLFW_HAT_DOWN             # <<<<<<<<<<<<<<
 * HAT_LEFT = GLFW_HAT_LEFT
 * HAT_RIGHT_UP = GLFW_HAT_RIGHT_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 14, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":15
 * HAT_RIGHT = GLFW_HAT_RIGHT
 * HAT_DOWN = GLFW_HAT_DOWN
 * HAT_LEFT = GLFW_HAT_LEFT             # <<<<<<<<<<<<<<
 * HAT_RIGHT_UP = GLFW_HAT_RIGHT_UP
 * HAT_RIGHT_DOWN = GLFW_HAT_RIGHT_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_LEFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_LEFT, __pyx_t_2) < 0) __PYX_ERR(0, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":16
 * HAT_DOWN = GLFW_HAT_DOWN
 * HAT_LEFT = GLFW_HAT_LEFT
 * HAT_RIGHT_UP = GLFW_HAT_RIGHT_UP             # <<<<<<<<<<<<<<
 * HAT_RIGHT_DOWN = GLFW_HAT_RIGHT_DOWN
 * HAT_LEFT_UP = GLFW_HAT_LEFT_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_RIGHT_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_RIGHT_UP, __pyx_t_2) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":17
 * HAT_LEFT = GLFW_HAT_LEFT
 * HAT_RIGHT_UP = GLFW_HAT_RIGHT_UP
 * HAT_RIGHT_DOWN = GLFW_HAT_RIGHT_DOWN             # <<<<<<<<<<<<<<
 * HAT_LEFT_UP = GLFW_HAT_LEFT_UP
 * HAT_LEFT_DOWN = GLFW_HAT_LEFT_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_RIGHT_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_RIGHT_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":18
 * HAT_RIGHT_UP = GLFW_HAT_RIGHT_UP
 * HAT_RIGHT_DOWN = GLFW_HAT_RIGHT_DOWN
 * HAT_LEFT_UP = GLFW_HAT_LEFT_UP             # <<<<<<<<<<<<<<
 * HAT_LEFT_DOWN = GLFW_HAT_LEFT_DOWN
 * KEY_UNKNOWN = GLFW_KEY_UNKNOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_LEFT_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_LEFT_UP, __pyx_t_2) < 0) __PYX_ERR(0, 18, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":19
 * HAT_RIGHT_DOWN = GLFW_HAT_RIGHT_DOWN
 * HAT_LEFT_UP = GLFW_HAT_LEFT_UP
 * HAT_LEFT_DOWN = GLFW_HAT_LEFT_DOWN             # <<<<<<<<<<<<<<
 * KEY_UNKNOWN = GLFW_KEY_UNKNOWN
 * KEY_SPACE = GLFW_KEY_SPACE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAT_LEFT_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAT_LEFT_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":20
 * HAT_LEFT_UP = GLFW_HAT_LEFT_UP
 * HAT_LEFT_DOWN = GLFW_HAT_LEFT_DOWN
 * KEY_UNKNOWN = GLFW_KEY_UNKNOWN             # <<<<<<<<<<<<<<
 * KEY_SPACE = GLFW_KEY_SPACE
 * KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_UNKNOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_UNKNOWN, __pyx_t_2) < 0) __PYX_ERR(0, 20, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":21
 * HAT_LEFT_DOWN = GLFW_HAT_LEFT_DOWN
 * KEY_UNKNOWN = GLFW_KEY_UNKNOWN
 * KEY_SPACE = GLFW_KEY_SPACE             # <<<<<<<<<<<<<<
 * KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE
 * KEY_COMMA = GLFW_KEY_COMMA
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_SPACE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_SPACE, __pyx_t_2) < 0) __PYX_ERR(0, 21, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":22
 * KEY_UNKNOWN = GLFW_KEY_UNKNOWN
 * KEY_SPACE = GLFW_KEY_SPACE
 * KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE             # <<<<<<<<<<<<<<
 * KEY_COMMA = GLFW_KEY_COMMA
 * KEY_MINUS = GLFW_KEY_MINUS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_APOSTROPHE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_APOSTROPHE, __pyx_t_2) < 0) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":23
 * KEY_SPACE = GLFW_KEY_SPACE
 * KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE
 * KEY_COMMA = GLFW_KEY_COMMA             # <<<<<<<<<<<<<<
 * KEY_MINUS = GLFW_KEY_MINUS
 * KEY_PERIOD = GLFW_KEY_PERIOD
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_COMMA); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_COMMA, __pyx_t_2) < 0) __PYX_ERR(0, 23, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":24
 * KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE
 * KEY_COMMA = GLFW_KEY_COMMA
 * KEY_MINUS = GLFW_KEY_MINUS             # <<<<<<<<<<<<<<
 * KEY_PERIOD = GLFW_KEY_PERIOD
 * KEY_SLASH = GLFW_KEY_SLASH
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_MINUS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_MINUS, __pyx_t_2) < 0) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":25
 * KEY_COMMA = GLFW_KEY_COMMA
 * KEY_MINUS = GLFW_KEY_MINUS
 * KEY_PERIOD = GLFW_KEY_PERIOD             # <<<<<<<<<<<<<<
 * KEY_SLASH = GLFW_KEY_SLASH
 * KEY_0 = GLFW_KEY_0
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_PERIOD); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_PERIOD, __pyx_t_2) < 0) __PYX_ERR(0, 25, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":26
 * KEY_MINUS = GLFW_KEY_MINUS
 * KEY_PERIOD = GLFW_KEY_PERIOD
 * KEY_SLASH = GLFW_KEY_SLASH             # <<<<<<<<<<<<<<
 * KEY_0 = GLFW_KEY_0
 * KEY_1 = GLFW_KEY_1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_SLASH); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_SLASH, __pyx_t_2) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":27
 * KEY_PERIOD = GLFW_KEY_PERIOD
 * KEY_SLASH = GLFW_KEY_SLASH
 * KEY_0 = GLFW_KEY_0             # <<<<<<<<<<<<<<
 * KEY_1 = GLFW_KEY_1
 * KEY_2 = GLFW_KEY_2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_0, __pyx_t_2) < 0) __PYX_ERR(0, 27, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":28
 * KEY_SLASH = GLFW_KEY_SLASH
 * KEY_0 = GLFW_KEY_0
 * KEY_1 = GLFW_KEY_1             # <<<<<<<<<<<<<<
 * KEY_2 = GLFW_KEY_2
 * KEY_3 = GLFW_KEY_3
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_1, __pyx_t_2) < 0) __PYX_ERR(0, 28, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":29
 * KEY_0 = GLFW_KEY_0
 * KEY_1 = GLFW_KEY_1
 * KEY_2 = GLFW_KEY_2             # <<<<<<<<<<<<<<
 * KEY_3 = GLFW_KEY_3
 * KEY_4 = GLFW_KEY_4
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_2, __pyx_t_2) < 0) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":30
 * KEY_1 = GLFW_KEY_1
 * KEY_2 = GLFW_KEY_2
 * KEY_3 = GLFW_KEY_3             # <<<<<<<<<<<<<<
 * KEY_4 = GLFW_KEY_4
 * KEY_5 = GLFW_KEY_5
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_3, __pyx_t_2) < 0) __PYX_ERR(0, 30, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":31
 * KEY_2 = GLFW_KEY_2
 * KEY_3 = GLFW_KEY_3
 * KEY_4 = GLFW_KEY_4             # <<<<<<<<<<<<<<
 * KEY_5 = GLFW_KEY_5
 * KEY_6 = GLFW_KEY_6
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_4, __pyx_t_2) < 0) __PYX_ERR(0, 31, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":32
 * KEY_3 = GLFW_KEY_3
 * KEY_4 = GLFW_KEY_4
 * KEY_5 = GLFW_KEY_5             # <<<<<<<<<<<<<<
 * KEY_6 = GLFW_KEY_6
 * KEY_7 = GLFW_KEY_7
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_5, __pyx_t_2) < 0) __PYX_ERR(0, 32, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":33
 * KEY_4 = GLFW_KEY_4
 * KEY_5 = GLFW_KEY_5
 * KEY_6 = GLFW_KEY_6             # <<<<<<<<<<<<<<
 * KEY_7 = GLFW_KEY_7
 * KEY_8 = GLFW_KEY_8
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_6, __pyx_t_2) < 0) __PYX_ERR(0, 33, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":34
 * KEY_5 = GLFW_KEY_5
 * KEY_6 = GLFW_KEY_6
 * KEY_7 = GLFW_KEY_7             # <<<<<<<<<<<<<<
 * KEY_8 = GLFW_KEY_8
 * KEY_9 = GLFW_KEY_9
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_7, __pyx_t_2) < 0) __PYX_ERR(0, 34, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":35
 * KEY_6 = GLFW_KEY_6
 * KEY_7 = GLFW_KEY_7
 * KEY_8 = GLFW_KEY_8             # <<<<<<<<<<<<<<
 * KEY_9 = GLFW_KEY_9
 * KEY_SEMICOLON = GLFW_KEY_SEMICOLON
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_8, __pyx_t_2) < 0) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":36
 * KEY_7 = GLFW_KEY_7
 * KEY_8 = GLFW_KEY_8
 * KEY_9 = GLFW_KEY_9             # <<<<<<<<<<<<<<
 * KEY_SEMICOLON = GLFW_KEY_SEMICOLON
 * KEY_EQUAL = GLFW_KEY_EQUAL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_9, __pyx_t_2) < 0) __PYX_ERR(0, 36, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":37
 * KEY_8 = GLFW_KEY_8
 * KEY_9 = GLFW_KEY_9
 * KEY_SEMICOLON = GLFW_KEY_SEMICOLON             # <<<<<<<<<<<<<<
 * KEY_EQUAL = GLFW_KEY_EQUAL
 * KEY_A = GLFW_KEY_A
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_SEMICOLON); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_SEMICOLON, __pyx_t_2) < 0) __PYX_ERR(0, 37, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":38
 * KEY_9 = GLFW_KEY_9
 * KEY_SEMICOLON = GLFW_KEY_SEMICOLON
 * KEY_EQUAL = GLFW_KEY_EQUAL             # <<<<<<<<<<<<<<
 * KEY_A = GLFW_KEY_A
 * KEY_B = GLFW_KEY_B
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_EQUAL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_EQUAL, __pyx_t_2) < 0) __PYX_ERR(0, 38, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":39
 * KEY_SEMICOLON = GLFW_KEY_SEMICOLON
 * KEY_EQUAL = GLFW_KEY_EQUAL
 * KEY_A = GLFW_KEY_A             # <<<<<<<<<<<<<<
 * KEY_B = GLFW_KEY_B
 * KEY_C = GLFW_KEY_C
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_A); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_A, __pyx_t_2) < 0) __PYX_ERR(0, 39, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":40
 * KEY_EQUAL = GLFW_KEY_EQUAL
 * KEY_A = GLFW_KEY_A
 * KEY_B = GLFW_KEY_B             # <<<<<<<<<<<<<<
 * KEY_C = GLFW_KEY_C
 * KEY_D = GLFW_KEY_D
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_B, __pyx_t_2) < 0) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":41
 * KEY_A = GLFW_KEY_A
 * KEY_B = GLFW_KEY_B
 * KEY_C = GLFW_KEY_C             # <<<<<<<<<<<<<<
 * KEY_D = GLFW_KEY_D
 * KEY_E = GLFW_KEY_E
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_C); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_C, __pyx_t_2) < 0) __PYX_ERR(0, 41, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":42
 * KEY_B = GLFW_KEY_B
 * KEY_C = GLFW_KEY_C
 * KEY_D = GLFW_KEY_D             # <<<<<<<<<<<<<<
 * KEY_E = GLFW_KEY_E
 * KEY_F = GLFW_KEY_F
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_D); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_D, __pyx_t_2) < 0) __PYX_ERR(0, 42, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":43
 * KEY_C = GLFW_KEY_C
 * KEY_D = GLFW_KEY_D
 * KEY_E = GLFW_KEY_E             # <<<<<<<<<<<<<<
 * KEY_F = GLFW_KEY_F
 * KEY_G = GLFW_KEY_G
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_E); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_E, __pyx_t_2) < 0) __PYX_ERR(0, 43, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":44
 * KEY_D = GLFW_KEY_D
 * KEY_E = GLFW_KEY_E
 * KEY_F = GLFW_KEY_F             # <<<<<<<<<<<<<<
 * KEY_G = GLFW_KEY_G
 * KEY_H = GLFW_KEY_H
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F, __pyx_t_2) < 0) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":45
 * KEY_E = GLFW_KEY_E
 * KEY_F = GLFW_KEY_F
 * KEY_G = GLFW_KEY_G             # <<<<<<<<<<<<<<
 * KEY_H = GLFW_KEY_H
 * KEY_I = GLFW_KEY_I
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_G); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_G, __pyx_t_2) < 0) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":46
 * KEY_F = GLFW_KEY_F
 * KEY_G = GLFW_KEY_G
 * KEY_H = GLFW_KEY_H             # <<<<<<<<<<<<<<
 * KEY_I = GLFW_KEY_I
 * KEY_J = GLFW_KEY_J
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_H); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_H, __pyx_t_2) < 0) __PYX_ERR(0, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":47
 * KEY_G = GLFW_KEY_G
 * KEY_H = GLFW_KEY_H
 * KEY_I = GLFW_KEY_I             # <<<<<<<<<<<<<<
 * KEY_J = GLFW_KEY_J
 * KEY_K = GLFW_KEY_K
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_I); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_I, __pyx_t_2) < 0) __PYX_ERR(0, 47, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":48
 * KEY_H = GLFW_KEY_H
 * KEY_I = GLFW_KEY_I
 * KEY_J = GLFW_KEY_J             # <<<<<<<<<<<<<<
 * KEY_K = GLFW_KEY_K
 * KEY_L = GLFW_KEY_L
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_J); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_J, __pyx_t_2) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":49
 * KEY_I = GLFW_KEY_I
 * KEY_J = GLFW_KEY_J
 * KEY_K = GLFW_KEY_K             # <<<<<<<<<<<<<<
 * KEY_L = GLFW_KEY_L
 * KEY_M = GLFW_KEY_M
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_K); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 49, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_K, __pyx_t_2) < 0) __PYX_ERR(0, 49, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":50
 * KEY_J = GLFW_KEY_J
 * KEY_K = GLFW_KEY_K
 * KEY_L = GLFW_KEY_L             # <<<<<<<<<<<<<<
 * KEY_M = GLFW_KEY_M
 * KEY_N = GLFW_KEY_N
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_L); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_L, __pyx_t_2) < 0) __PYX_ERR(0, 50, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":51
 * KEY_K = GLFW_KEY_K
 * KEY_L = GLFW_KEY_L
 * KEY_M = GLFW_KEY_M             # <<<<<<<<<<<<<<
 * KEY_N = GLFW_KEY_N
 * KEY_O = GLFW_KEY_O
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_M); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_M, __pyx_t_2) < 0) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":52
 * KEY_L = GLFW_KEY_L
 * KEY_M = GLFW_KEY_M
 * KEY_N = GLFW_KEY_N             # <<<<<<<<<<<<<<
 * KEY_O = GLFW_KEY_O
 * KEY_P = GLFW_KEY_P
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_N); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_N, __pyx_t_2) < 0) __PYX_ERR(0, 52, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":53
 * KEY_M = GLFW_KEY_M
 * KEY_N = GLFW_KEY_N
 * KEY_O = GLFW_KEY_O             # <<<<<<<<<<<<<<
 * KEY_P = GLFW_KEY_P
 * KEY_Q = GLFW_KEY_Q
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_O); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_O, __pyx_t_2) < 0) __PYX_ERR(0, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":54
 * KEY_N = GLFW_KEY_N
 * KEY_O = GLFW_KEY_O
 * KEY_P = GLFW_KEY_P             # <<<<<<<<<<<<<<
 * KEY_Q = GLFW_KEY_Q
 * KEY_R = GLFW_KEY_R
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_P); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_P, __pyx_t_2) < 0) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":55
 * KEY_O = GLFW_KEY_O
 * KEY_P = GLFW_KEY_P
 * KEY_Q = GLFW_KEY_Q             # <<<<<<<<<<<<<<
 * KEY_R = GLFW_KEY_R
 * KEY_S = GLFW_KEY_S
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_Q); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_Q, __pyx_t_2) < 0) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":56
 * KEY_P = GLFW_KEY_P
 * KEY_Q = GLFW_KEY_Q
 * KEY_R = GLFW_KEY_R             # <<<<<<<<<<<<<<
 * KEY_S = GLFW_KEY_S
 * KEY_T = GLFW_KEY_T
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_R); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_R, __pyx_t_2) < 0) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":57
 * KEY_Q = GLFW_KEY_Q
 * KEY_R = GLFW_KEY_R
 * KEY_S = GLFW_KEY_S             # <<<<<<<<<<<<<<
 * KEY_T = GLFW_KEY_T
 * KEY_U = GLFW_KEY_U
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_S); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_S, __pyx_t_2) < 0) __PYX_ERR(0, 57, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":58
 * KEY_R = GLFW_KEY_R
 * KEY_S = GLFW_KEY_S
 * KEY_T = GLFW_KEY_T             # <<<<<<<<<<<<<<
 * KEY_U = GLFW_KEY_U
 * KEY_V = GLFW_KEY_V
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_T); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_T, __pyx_t_2) < 0) __PYX_ERR(0, 58, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":59
 * KEY_S = GLFW_KEY_S
 * KEY_T = GLFW_KEY_T
 * KEY_U = GLFW_KEY_U             # <<<<<<<<<<<<<<
 * KEY_V = GLFW_KEY_V
 * KEY_W = GLFW_KEY_W
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_U); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_U, __pyx_t_2) < 0) __PYX_ERR(0, 59, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":60
 * KEY_T = GLFW_KEY_T
 * KEY_U = GLFW_KEY_U
 * KEY_V = GLFW_KEY_V             # <<<<<<<<<<<<<<
 * KEY_W = GLFW_KEY_W
 * KEY_X = GLFW_KEY_X
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_V); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_V, __pyx_t_2) < 0) __PYX_ERR(0, 60, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":61
 * KEY_U = GLFW_KEY_U
 * KEY_V = GLFW_KEY_V
 * KEY_W = GLFW_KEY_W             # <<<<<<<<<<<<<<
 * KEY_X = GLFW_KEY_X
 * KEY_Y = GLFW_KEY_Y
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_W); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_W, __pyx_t_2) < 0) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":62
 * KEY_V = GLFW_KEY_V
 * KEY_W = GLFW_KEY_W
 * KEY_X = GLFW_KEY_X             # <<<<<<<<<<<<<<
 * KEY_Y = GLFW_KEY_Y
 * KEY_Z = GLFW_KEY_Z
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_X); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_X, __pyx_t_2) < 0) __PYX_ERR(0, 62, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":63
 * KEY_W = GLFW_KEY_W
 * KEY_X = GLFW_KEY_X
 * KEY_Y = GLFW_KEY_Y             # <<<<<<<<<<<<<<
 * KEY_Z = GLFW_KEY_Z
 * KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_Y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_Y, __pyx_t_2) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":64
 * KEY_X = GLFW_KEY_X
 * KEY_Y = GLFW_KEY_Y
 * KEY_Z = GLFW_KEY_Z             # <<<<<<<<<<<<<<
 * KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET
 * KEY_BACKSLASH = GLFW_KEY_BACKSLASH
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_Z); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_Z, __pyx_t_2) < 0) __PYX_ERR(0, 64, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":65
 * KEY_Y = GLFW_KEY_Y
 * KEY_Z = GLFW_KEY_Z
 * KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET             # <<<<<<<<<<<<<<
 * KEY_BACKSLASH = GLFW_KEY_BACKSLASH
 * KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT_BRACKET); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT_BRACKET, __pyx_t_2) < 0) __PYX_ERR(0, 65, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":66
 * KEY_Z = GLFW_KEY_Z
 * KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET
 * KEY_BACKSLASH = GLFW_KEY_BACKSLASH             # <<<<<<<<<<<<<<
 * KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET
 * KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_BACKSLASH); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_BACKSLASH, __pyx_t_2) < 0) __PYX_ERR(0, 66, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":67
 * KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET
 * KEY_BACKSLASH = GLFW_KEY_BACKSLASH
 * KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET             # <<<<<<<<<<<<<<
 * KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT
 * KEY_WORLD_1 = GLFW_KEY_WORLD_1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT_BRACKET); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT_BRACKET, __pyx_t_2) < 0) __PYX_ERR(0, 67, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":68
 * KEY_BACKSLASH = GLFW_KEY_BACKSLASH
 * KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET
 * KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT             # <<<<<<<<<<<<<<
 * KEY_WORLD_1 = GLFW_KEY_WORLD_1
 * KEY_WORLD_2 = GLFW_KEY_WORLD_2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_GRAVE_ACCENT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_GRAVE_ACCENT, __pyx_t_2) < 0) __PYX_ERR(0, 68, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":69
 * KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET
 * KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT
 * KEY_WORLD_1 = GLFW_KEY_WORLD_1             # <<<<<<<<<<<<<<
 * KEY_WORLD_2 = GLFW_KEY_WORLD_2
 * KEY_ESCAPE = GLFW_KEY_ESCAPE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_WORLD_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_WORLD_1, __pyx_t_2) < 0) __PYX_ERR(0, 69, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":70
 * KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT
 * KEY_WORLD_1 = GLFW_KEY_WORLD_1
 * KEY_WORLD_2 = GLFW_KEY_WORLD_2             # <<<<<<<<<<<<<<
 * KEY_ESCAPE = GLFW_KEY_ESCAPE
 * KEY_ENTER = GLFW_KEY_ENTER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_WORLD_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_WORLD_2, __pyx_t_2) < 0) __PYX_ERR(0, 70, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":71
 * KEY_WORLD_1 = GLFW_KEY_WORLD_1
 * KEY_WORLD_2 = GLFW_KEY_WORLD_2
 * KEY_ESCAPE = GLFW_KEY_ESCAPE             # <<<<<<<<<<<<<<
 * KEY_ENTER = GLFW_KEY_ENTER
 * KEY_TAB = GLFW_KEY_TAB
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_ESCAPE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_ESCAPE, __pyx_t_2) < 0) __PYX_ERR(0, 71, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":72
 * KEY_WORLD_2 = GLFW_KEY_WORLD_2
 * KEY_ESCAPE = GLFW_KEY_ESCAPE
 * KEY_ENTER = GLFW_KEY_ENTER             # <<<<<<<<<<<<<<
 * KEY_TAB = GLFW_KEY_TAB
 * KEY_BACKSPACE = GLFW_KEY_BACKSPACE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_ENTER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_ENTER, __pyx_t_2) < 0) __PYX_ERR(0, 72, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":73
 * KEY_ESCAPE = GLFW_KEY_ESCAPE
 * KEY_ENTER = GLFW_KEY_ENTER
 * KEY_TAB = GLFW_KEY_TAB             # <<<<<<<<<<<<<<
 * KEY_BACKSPACE = GLFW_KEY_BACKSPACE
 * KEY_INSERT = GLFW_KEY_INSERT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_TAB); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_TAB, __pyx_t_2) < 0) __PYX_ERR(0, 73, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":74
 * KEY_ENTER = GLFW_KEY_ENTER
 * KEY_TAB = GLFW_KEY_TAB
 * KEY_BACKSPACE = GLFW_KEY_BACKSPACE             # <<<<<<<<<<<<<<
 * KEY_INSERT = GLFW_KEY_INSERT
 * KEY_DELETE = GLFW_KEY_DELETE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_BACKSPACE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_BACKSPACE, __pyx_t_2) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":75
 * KEY_TAB = GLFW_KEY_TAB
 * KEY_BACKSPACE = GLFW_KEY_BACKSPACE
 * KEY_INSERT = GLFW_KEY_INSERT             # <<<<<<<<<<<<<<
 * KEY_DELETE = GLFW_KEY_DELETE
 * KEY_RIGHT = GLFW_KEY_RIGHT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_INSERT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_INSERT, __pyx_t_2) < 0) __PYX_ERR(0, 75, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":76
 * KEY_BACKSPACE = GLFW_KEY_BACKSPACE
 * KEY_INSERT = GLFW_KEY_INSERT
 * KEY_DELETE = GLFW_KEY_DELETE             # <<<<<<<<<<<<<<
 * KEY_RIGHT = GLFW_KEY_RIGHT
 * KEY_LEFT = GLFW_KEY_LEFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_DELETE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_DELETE, __pyx_t_2) < 0) __PYX_ERR(0, 76, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":77
 * KEY_INSERT = GLFW_KEY_INSERT
 * KEY_DELETE = GLFW_KEY_DELETE
 * KEY_RIGHT = GLFW_KEY_RIGHT             # <<<<<<<<<<<<<<
 * KEY_LEFT = GLFW_KEY_LEFT
 * KEY_DOWN = GLFW_KEY_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT, __pyx_t_2) < 0) __PYX_ERR(0, 77, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":78
 * KEY_DELETE = GLFW_KEY_DELETE
 * KEY_RIGHT = GLFW_KEY_RIGHT
 * KEY_LEFT = GLFW_KEY_LEFT             # <<<<<<<<<<<<<<
 * KEY_DOWN = GLFW_KEY_DOWN
 * KEY_UP = GLFW_KEY_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT, __pyx_t_2) < 0) __PYX_ERR(0, 78, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":79
 * KEY_RIGHT = GLFW_KEY_RIGHT
 * KEY_LEFT = GLFW_KEY_LEFT
 * KEY_DOWN = GLFW_KEY_DOWN             # <<<<<<<<<<<<<<
 * KEY_UP = GLFW_KEY_UP
 * KEY_PAGE_UP = GLFW_KEY_PAGE_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":80
 * KEY_LEFT = GLFW_KEY_LEFT
 * KEY_DOWN = GLFW_KEY_DOWN
 * KEY_UP = GLFW_KEY_UP             # <<<<<<<<<<<<<<
 * KEY_PAGE_UP = GLFW_KEY_PAGE_UP
 * KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_UP, __pyx_t_2) < 0) __PYX_ERR(0, 80, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":81
 * KEY_DOWN = GLFW_KEY_DOWN
 * KEY_UP = GLFW_KEY_UP
 * KEY_PAGE_UP = GLFW_KEY_PAGE_UP             # <<<<<<<<<<<<<<
 * KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN
 * KEY_HOME = GLFW_KEY_HOME
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_PAGE_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_PAGE_UP, __pyx_t_2) < 0) __PYX_ERR(0, 81, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":82
 * KEY_UP = GLFW_KEY_UP
 * KEY_PAGE_UP = GLFW_KEY_PAGE_UP
 * KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN             # <<<<<<<<<<<<<<
 * KEY_HOME = GLFW_KEY_HOME
 * KEY_END = GLFW_KEY_END
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_PAGE_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_PAGE_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":83
 * KEY_PAGE_UP = GLFW_KEY_PAGE_UP
 * KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN
 * KEY_HOME = GLFW_KEY_HOME             # <<<<<<<<<<<<<<
 * KEY_END = GLFW_KEY_END
 * KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_HOME); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_HOME, __pyx_t_2) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":84
 * KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN
 * KEY_HOME = GLFW_KEY_HOME
 * KEY_END = GLFW_KEY_END             # <<<<<<<<<<<<<<
 * KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK
 * KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_END); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_END, __pyx_t_2) < 0) __PYX_ERR(0, 84, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":85
 * KEY_HOME = GLFW_KEY_HOME
 * KEY_END = GLFW_KEY_END
 * KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK             # <<<<<<<<<<<<<<
 * KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK
 * KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_CAPS_LOCK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_CAPS_LOCK, __pyx_t_2) < 0) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":86
 * KEY_END = GLFW_KEY_END
 * KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK
 * KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK             # <<<<<<<<<<<<<<
 * KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK
 * KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_SCROLL_LOCK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_SCROLL_LOCK, __pyx_t_2) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":87
 * KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK
 * KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK
 * KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK             # <<<<<<<<<<<<<<
 * KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN
 * KEY_PAUSE = GLFW_KEY_PAUSE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_NUM_LOCK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_NUM_LOCK, __pyx_t_2) < 0) __PYX_ERR(0, 87, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":88
 * KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK
 * KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK
 * KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN             # <<<<<<<<<<<<<<
 * KEY_PAUSE = GLFW_KEY_PAUSE
 * KEY_F1 = GLFW_KEY_F1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_PRINT_SCREEN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_PRINT_SCREEN, __pyx_t_2) < 0) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":89
 * KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK
 * KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN
 * KEY_PAUSE = GLFW_KEY_PAUSE             # <<<<<<<<<<<<<<
 * KEY_F1 = GLFW_KEY_F1
 * KEY_F2 = GLFW_KEY_F2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_PAUSE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_PAUSE, __pyx_t_2) < 0) __PYX_ERR(0, 89, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":90
 * KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN
 * KEY_PAUSE = GLFW_KEY_PAUSE
 * KEY_F1 = GLFW_KEY_F1             # <<<<<<<<<<<<<<
 * KEY_F2 = GLFW_KEY_F2
 * KEY_F3 = GLFW_KEY_F3
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F1, __pyx_t_2) < 0) __PYX_ERR(0, 90, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":91
 * KEY_PAUSE = GLFW_KEY_PAUSE
 * KEY_F1 = GLFW_KEY_F1
 * KEY_F2 = GLFW_KEY_F2             # <<<<<<<<<<<<<<
 * KEY_F3 = GLFW_KEY_F3
 * KEY_F4 = GLFW_KEY_F4
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F2, __pyx_t_2) < 0) __PYX_ERR(0, 91, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":92
 * KEY_F1 = GLFW_KEY_F1
 * KEY_F2 = GLFW_KEY_F2
 * KEY_F3 = GLFW_KEY_F3             # <<<<<<<<<<<<<<
 * KEY_F4 = GLFW_KEY_F4
 * KEY_F5 = GLFW_KEY_F5
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F3, __pyx_t_2) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":93
 * KEY_F2 = GLFW_KEY_F2
 * KEY_F3 = GLFW_KEY_F3
 * KEY_F4 = GLFW_KEY_F4             # <<<<<<<<<<<<<<
 * KEY_F5 = GLFW_KEY_F5
 * KEY_F6 = GLFW_KEY_F6
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F4, __pyx_t_2) < 0) __PYX_ERR(0, 93, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":94
 * KEY_F3 = GLFW_KEY_F3
 * KEY_F4 = GLFW_KEY_F4
 * KEY_F5 = GLFW_KEY_F5             # <<<<<<<<<<<<<<
 * KEY_F6 = GLFW_KEY_F6
 * KEY_F7 = GLFW_KEY_F7
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F5, __pyx_t_2) < 0) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":95
 * KEY_F4 = GLFW_KEY_F4
 * KEY_F5 = GLFW_KEY_F5
 * KEY_F6 = GLFW_KEY_F6             # <<<<<<<<<<<<<<
 * KEY_F7 = GLFW_KEY_F7
 * KEY_F8 = GLFW_KEY_F8
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F6, __pyx_t_2) < 0) __PYX_ERR(0, 95, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":96
 * KEY_F5 = GLFW_KEY_F5
 * KEY_F6 = GLFW_KEY_F6
 * KEY_F7 = GLFW_KEY_F7             # <<<<<<<<<<<<<<
 * KEY_F8 = GLFW_KEY_F8
 * KEY_F9 = GLFW_KEY_F9
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F7, __pyx_t_2) < 0) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":97
 * KEY_F6 = GLFW_KEY_F6
 * KEY_F7 = GLFW_KEY_F7
 * KEY_F8 = GLFW_KEY_F8             # <<<<<<<<<<<<<<
 * KEY_F9 = GLFW_KEY_F9
 * KEY_F10 = GLFW_KEY_F10
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F8, __pyx_t_2) < 0) __PYX_ERR(0, 97, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":98
 * KEY_F7 = GLFW_KEY_F7
 * KEY_F8 = GLFW_KEY_F8
 * KEY_F9 = GLFW_KEY_F9             # <<<<<<<<<<<<<<
 * KEY_F10 = GLFW_KEY_F10
 * KEY_F11 = GLFW_KEY_F11
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F9, __pyx_t_2) < 0) __PYX_ERR(0, 98, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":99
 * KEY_F8 = GLFW_KEY_F8
 * KEY_F9 = GLFW_KEY_F9
 * KEY_F10 = GLFW_KEY_F10             # <<<<<<<<<<<<<<
 * KEY_F11 = GLFW_KEY_F11
 * KEY_F12 = GLFW_KEY_F12
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F10, __pyx_t_2) < 0) __PYX_ERR(0, 99, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":100
 * KEY_F9 = GLFW_KEY_F9
 * KEY_F10 = GLFW_KEY_F10
 * KEY_F11 = GLFW_KEY_F11             # <<<<<<<<<<<<<<
 * KEY_F12 = GLFW_KEY_F12
 * KEY_F13 = GLFW_KEY_F13
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F11, __pyx_t_2) < 0) __PYX_ERR(0, 100, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":101
 * KEY_F10 = GLFW_KEY_F10
 * KEY_F11 = GLFW_KEY_F11
 * KEY_F12 = GLFW_KEY_F12             # <<<<<<<<<<<<<<
 * KEY_F13 = GLFW_KEY_F13
 * KEY_F14 = GLFW_KEY_F14
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F12, __pyx_t_2) < 0) __PYX_ERR(0, 101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":102
 * KEY_F11 = GLFW_KEY_F11
 * KEY_F12 = GLFW_KEY_F12
 * KEY_F13 = GLFW_KEY_F13             # <<<<<<<<<<<<<<
 * KEY_F14 = GLFW_KEY_F14
 * KEY_F15 = GLFW_KEY_F15
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F13, __pyx_t_2) < 0) __PYX_ERR(0, 102, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":103
 * KEY_F12 = GLFW_KEY_F12
 * KEY_F13 = GLFW_KEY_F13
 * KEY_F14 = GLFW_KEY_F14             # <<<<<<<<<<<<<<
 * KEY_F15 = GLFW_KEY_F15
 * KEY_F16 = GLFW_KEY_F16
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F14, __pyx_t_2) < 0) __PYX_ERR(0, 103, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":104
 * KEY_F13 = GLFW_KEY_F13
 * KEY_F14 = GLFW_KEY_F14
 * KEY_F15 = GLFW_KEY_F15             # <<<<<<<<<<<<<<
 * KEY_F16 = GLFW_KEY_F16
 * KEY_F17 = GLFW_KEY_F17
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F15, __pyx_t_2) < 0) __PYX_ERR(0, 104, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":105
 * KEY_F14 = GLFW_KEY_F14
 * KEY_F15 = GLFW_KEY_F15
 * KEY_F16 = GLFW_KEY_F16             # <<<<<<<<<<<<<<
 * KEY_F17 = GLFW_KEY_F17
 * KEY_F18 = GLFW_KEY_F18
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F16); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F16, __pyx_t_2) < 0) __PYX_ERR(0, 105, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":106
 * KEY_F15 = GLFW_KEY_F15
 * KEY_F16 = GLFW_KEY_F16
 * KEY_F17 = GLFW_KEY_F17             # <<<<<<<<<<<<<<
 * KEY_F18 = GLFW_KEY_F18
 * KEY_F19 = GLFW_KEY_F19
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F17); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F17, __pyx_t_2) < 0) __PYX_ERR(0, 106, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":107
 * KEY_F16 = GLFW_KEY_F16
 * KEY_F17 = GLFW_KEY_F17
 * KEY_F18 = GLFW_KEY_F18             # <<<<<<<<<<<<<<
 * KEY_F19 = GLFW_KEY_F19
 * KEY_F20 = GLFW_KEY_F20
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F18); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F18, __pyx_t_2) < 0) __PYX_ERR(0, 107, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":108
 * KEY_F17 = GLFW_KEY_F17
 * KEY_F18 = GLFW_KEY_F18
 * KEY_F19 = GLFW_KEY_F19             # <<<<<<<<<<<<<<
 * KEY_F20 = GLFW_KEY_F20
 * KEY_F21 = GLFW_KEY_F21
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F19); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F19, __pyx_t_2) < 0) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":109
 * KEY_F18 = GLFW_KEY_F18
 * KEY_F19 = GLFW_KEY_F19
 * KEY_F20 = GLFW_KEY_F20             # <<<<<<<<<<<<<<
 * KEY_F21 = GLFW_KEY_F21
 * KEY_F22 = GLFW_KEY_F22
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F20); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F20, __pyx_t_2) < 0) __PYX_ERR(0, 109, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":110
 * KEY_F19 = GLFW_KEY_F19
 * KEY_F20 = GLFW_KEY_F20
 * KEY_F21 = GLFW_KEY_F21             # <<<<<<<<<<<<<<
 * KEY_F22 = GLFW_KEY_F22
 * KEY_F23 = GLFW_KEY_F23
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F21); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F21, __pyx_t_2) < 0) __PYX_ERR(0, 110, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":111
 * KEY_F20 = GLFW_KEY_F20
 * KEY_F21 = GLFW_KEY_F21
 * KEY_F22 = GLFW_KEY_F22             # <<<<<<<<<<<<<<
 * KEY_F23 = GLFW_KEY_F23
 * KEY_F24 = GLFW_KEY_F24
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F22); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F22, __pyx_t_2) < 0) __PYX_ERR(0, 111, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":112
 * KEY_F21 = GLFW_KEY_F21
 * KEY_F22 = GLFW_KEY_F22
 * KEY_F23 = GLFW_KEY_F23             # <<<<<<<<<<<<<<
 * KEY_F24 = GLFW_KEY_F24
 * KEY_F25 = GLFW_KEY_F25
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F23); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F23, __pyx_t_2) < 0) __PYX_ERR(0, 112, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":113
 * KEY_F22 = GLFW_KEY_F22
 * KEY_F23 = GLFW_KEY_F23
 * KEY_F24 = GLFW_KEY_F24             # <<<<<<<<<<<<<<
 * KEY_F25 = GLFW_KEY_F25
 * KEY_KP_0 = GLFW_KEY_KP_0
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F24); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F24, __pyx_t_2) < 0) __PYX_ERR(0, 113, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":114
 * KEY_F23 = GLFW_KEY_F23
 * KEY_F24 = GLFW_KEY_F24
 * KEY_F25 = GLFW_KEY_F25             # <<<<<<<<<<<<<<
 * KEY_KP_0 = GLFW_KEY_KP_0
 * KEY_KP_1 = GLFW_KEY_KP_1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_F25); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_F25, __pyx_t_2) < 0) __PYX_ERR(0, 114, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":115
 * KEY_F24 = GLFW_KEY_F24
 * KEY_F25 = GLFW_KEY_F25
 * KEY_KP_0 = GLFW_KEY_KP_0             # <<<<<<<<<<<<<<
 * KEY_KP_1 = GLFW_KEY_KP_1
 * KEY_KP_2 = GLFW_KEY_KP_2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_0, __pyx_t_2) < 0) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":116
 * KEY_F25 = GLFW_KEY_F25
 * KEY_KP_0 = GLFW_KEY_KP_0
 * KEY_KP_1 = GLFW_KEY_KP_1             # <<<<<<<<<<<<<<
 * KEY_KP_2 = GLFW_KEY_KP_2
 * KEY_KP_3 = GLFW_KEY_KP_3
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_1, __pyx_t_2) < 0) __PYX_ERR(0, 116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":117
 * KEY_KP_0 = GLFW_KEY_KP_0
 * KEY_KP_1 = GLFW_KEY_KP_1
 * KEY_KP_2 = GLFW_KEY_KP_2             # <<<<<<<<<<<<<<
 * KEY_KP_3 = GLFW_KEY_KP_3
 * KEY_KP_4 = GLFW_KEY_KP_4
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_2, __pyx_t_2) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":118
 * KEY_KP_1 = GLFW_KEY_KP_1
 * KEY_KP_2 = GLFW_KEY_KP_2
 * KEY_KP_3 = GLFW_KEY_KP_3             # <<<<<<<<<<<<<<
 * KEY_KP_4 = GLFW_KEY_KP_4
 * KEY_KP_5 = GLFW_KEY_KP_5
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_3, __pyx_t_2) < 0) __PYX_ERR(0, 118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":119
 * KEY_KP_2 = GLFW_KEY_KP_2
 * KEY_KP_3 = GLFW_KEY_KP_3
 * KEY_KP_4 = GLFW_KEY_KP_4             # <<<<<<<<<<<<<<
 * KEY_KP_5 = GLFW_KEY_KP_5
 * KEY_KP_6 = GLFW_KEY_KP_6
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_4, __pyx_t_2) < 0) __PYX_ERR(0, 119, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":120
 * KEY_KP_3 = GLFW_KEY_KP_3
 * KEY_KP_4 = GLFW_KEY_KP_4
 * KEY_KP_5 = GLFW_KEY_KP_5             # <<<<<<<<<<<<<<
 * KEY_KP_6 = GLFW_KEY_KP_6
 * KEY_KP_7 = GLFW_KEY_KP_7
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_5, __pyx_t_2) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":121
 * KEY_KP_4 = GLFW_KEY_KP_4
 * KEY_KP_5 = GLFW_KEY_KP_5
 * KEY_KP_6 = GLFW_KEY_KP_6             # <<<<<<<<<<<<<<
 * KEY_KP_7 = GLFW_KEY_KP_7
 * KEY_KP_8 = GLFW_KEY_KP_8
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_6, __pyx_t_2) < 0) __PYX_ERR(0, 121, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":122
 * KEY_KP_5 = GLFW_KEY_KP_5
 * KEY_KP_6 = GLFW_KEY_KP_6
 * KEY_KP_7 = GLFW_KEY_KP_7             # <<<<<<<<<<<<<<
 * KEY_KP_8 = GLFW_KEY_KP_8
 * KEY_KP_9 = GLFW_KEY_KP_9
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_7, __pyx_t_2) < 0) __PYX_ERR(0, 122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":123
 * KEY_KP_6 = GLFW_KEY_KP_6
 * KEY_KP_7 = GLFW_KEY_KP_7
 * KEY_KP_8 = GLFW_KEY_KP_8             # <<<<<<<<<<<<<<
 * KEY_KP_9 = GLFW_KEY_KP_9
 * KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_8, __pyx_t_2) < 0) __PYX_ERR(0, 123, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":124
 * KEY_KP_7 = GLFW_KEY_KP_7
 * KEY_KP_8 = GLFW_KEY_KP_8
 * KEY_KP_9 = GLFW_KEY_KP_9             # <<<<<<<<<<<<<<
 * KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL
 * KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_9, __pyx_t_2) < 0) __PYX_ERR(0, 124, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":125
 * KEY_KP_8 = GLFW_KEY_KP_8
 * KEY_KP_9 = GLFW_KEY_KP_9
 * KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL             # <<<<<<<<<<<<<<
 * KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE
 * KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_DECIMAL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_DECIMAL, __pyx_t_2) < 0) __PYX_ERR(0, 125, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":126
 * KEY_KP_9 = GLFW_KEY_KP_9
 * KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL
 * KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE             # <<<<<<<<<<<<<<
 * KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY
 * KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_DIVIDE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_DIVIDE, __pyx_t_2) < 0) __PYX_ERR(0, 126, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":127
 * KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL
 * KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE
 * KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY             # <<<<<<<<<<<<<<
 * KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT
 * KEY_KP_ADD = GLFW_KEY_KP_ADD
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_MULTIPLY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_MULTIPLY, __pyx_t_2) < 0) __PYX_ERR(0, 127, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":128
 * KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE
 * KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY
 * KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT             # <<<<<<<<<<<<<<
 * KEY_KP_ADD = GLFW_KEY_KP_ADD
 * KEY_KP_ENTER = GLFW_KEY_KP_ENTER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_SUBTRACT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_SUBTRACT, __pyx_t_2) < 0) __PYX_ERR(0, 128, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":129
 * KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY
 * KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT
 * KEY_KP_ADD = GLFW_KEY_KP_ADD             # <<<<<<<<<<<<<<
 * KEY_KP_ENTER = GLFW_KEY_KP_ENTER
 * KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_ADD); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_ADD, __pyx_t_2) < 0) __PYX_ERR(0, 129, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":130
 * KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT
 * KEY_KP_ADD = GLFW_KEY_KP_ADD
 * KEY_KP_ENTER = GLFW_KEY_KP_ENTER             # <<<<<<<<<<<<<<
 * KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL
 * KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_ENTER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_ENTER, __pyx_t_2) < 0) __PYX_ERR(0, 130, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":131
 * KEY_KP_ADD = GLFW_KEY_KP_ADD
 * KEY_KP_ENTER = GLFW_KEY_KP_ENTER
 * KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL             # <<<<<<<<<<<<<<
 * KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT
 * KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_KP_EQUAL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_KP_EQUAL, __pyx_t_2) < 0) __PYX_ERR(0, 131, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":132
 * KEY_KP_ENTER = GLFW_KEY_KP_ENTER
 * KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL
 * KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT             # <<<<<<<<<<<<<<
 * KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL
 * KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT_SHIFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT_SHIFT, __pyx_t_2) < 0) __PYX_ERR(0, 132, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":133
 * KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL
 * KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT
 * KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL             # <<<<<<<<<<<<<<
 * KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT
 * KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT_CONTROL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT_CONTROL, __pyx_t_2) < 0) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":134
 * KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT
 * KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL
 * KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT             # <<<<<<<<<<<<<<
 * KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER
 * KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT_ALT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT_ALT, __pyx_t_2) < 0) __PYX_ERR(0, 134, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":135
 * KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL
 * KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT
 * KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER             # <<<<<<<<<<<<<<
 * KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT
 * KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LEFT_SUPER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LEFT_SUPER, __pyx_t_2) < 0) __PYX_ERR(0, 135, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":136
 * KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT
 * KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER
 * KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT             # <<<<<<<<<<<<<<
 * KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL
 * KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT_SHIFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT_SHIFT, __pyx_t_2) < 0) __PYX_ERR(0, 136, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":137
 * KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER
 * KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT
 * KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL             # <<<<<<<<<<<<<<
 * KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT
 * KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT_CONTROL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT_CONTROL, __pyx_t_2) < 0) __PYX_ERR(0, 137, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":138
 * KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT
 * KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL
 * KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT             # <<<<<<<<<<<<<<
 * KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER
 * KEY_MENU = GLFW_KEY_MENU
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT_ALT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT_ALT, __pyx_t_2) < 0) __PYX_ERR(0, 138, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":139
 * KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL
 * KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT
 * KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER             # <<<<<<<<<<<<<<
 * KEY_MENU = GLFW_KEY_MENU
 * KEY_LAST = GLFW_KEY_LAST
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_RIGHT_SUPER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_RIGHT_SUPER, __pyx_t_2) < 0) __PYX_ERR(0, 139, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":140
 * KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT
 * KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER
 * KEY_MENU = GLFW_KEY_MENU             # <<<<<<<<<<<<<<
 * KEY_LAST = GLFW_KEY_LAST
 * MOD_SHIFT = GLFW_MOD_SHIFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_MENU); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_MENU, __pyx_t_2) < 0) __PYX_ERR(0, 140, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":141
 * KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER
 * KEY_MENU = GLFW_KEY_MENU
 * KEY_LAST = GLFW_KEY_LAST             # <<<<<<<<<<<<<<
 * MOD_SHIFT = GLFW_MOD_SHIFT
 * MOD_CONTROL = GLFW_MOD_CONTROL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_KEY_LAST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_KEY_LAST, __pyx_t_2) < 0) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":142
 * KEY_MENU = GLFW_KEY_MENU
 * KEY_LAST = GLFW_KEY_LAST
 * MOD_SHIFT = GLFW_MOD_SHIFT             # <<<<<<<<<<<<<<
 * MOD_CONTROL = GLFW_MOD_CONTROL
 * MOD_ALT = GLFW_MOD_ALT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_SHIFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_SHIFT, __pyx_t_2) < 0) __PYX_ERR(0, 142, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":143
 * KEY_LAST = GLFW_KEY_LAST
 * MOD_SHIFT = GLFW_MOD_SHIFT
 * MOD_CONTROL = GLFW_MOD_CONTROL             # <<<<<<<<<<<<<<
 * MOD_ALT = GLFW_MOD_ALT
 * MOD_SUPER = GLFW_MOD_SUPER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_CONTROL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_CONTROL, __pyx_t_2) < 0) __PYX_ERR(0, 143, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":144
 * MOD_SHIFT = GLFW_MOD_SHIFT
 * MOD_CONTROL = GLFW_MOD_CONTROL
 * MOD_ALT = GLFW_MOD_ALT             # <<<<<<<<<<<<<<
 * MOD_SUPER = GLFW_MOD_SUPER
 * MOD_CAPS_LOCK = GLFW_MOD_CAPS_LOCK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_ALT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_ALT, __pyx_t_2) < 0) __PYX_ERR(0, 144, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":145
 * MOD_CONTROL = GLFW_MOD_CONTROL
 * MOD_ALT = GLFW_MOD_ALT
 * MOD_SUPER = GLFW_MOD_SUPER             # <<<<<<<<<<<<<<
 * MOD_CAPS_LOCK = GLFW_MOD_CAPS_LOCK
 * MOD_NUM_LOCK = GLFW_MOD_NUM_LOCK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_SUPER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_SUPER, __pyx_t_2) < 0) __PYX_ERR(0, 145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":146
 * MOD_ALT = GLFW_MOD_ALT
 * MOD_SUPER = GLFW_MOD_SUPER
 * MOD_CAPS_LOCK = GLFW_MOD_CAPS_LOCK             # <<<<<<<<<<<<<<
 * MOD_NUM_LOCK = GLFW_MOD_NUM_LOCK
 * MOUSE_BUTTON_1 = GLFW_MOUSE_BUTTON_1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_CAPS_LOCK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_CAPS_LOCK, __pyx_t_2) < 0) __PYX_ERR(0, 146, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":147
 * MOD_SUPER = GLFW_MOD_SUPER
 * MOD_CAPS_LOCK = GLFW_MOD_CAPS_LOCK
 * MOD_NUM_LOCK = GLFW_MOD_NUM_LOCK             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_1 = GLFW_MOUSE_BUTTON_1
 * MOUSE_BUTTON_2 = GLFW_MOUSE_BUTTON_2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOD_NUM_LOCK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOD_NUM_LOCK, __pyx_t_2) < 0) __PYX_ERR(0, 147, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":148
 * MOD_CAPS_LOCK = GLFW_MOD_CAPS_LOCK
 * MOD_NUM_LOCK = GLFW_MOD_NUM_LOCK
 * MOUSE_BUTTON_1 = GLFW_MOUSE_BUTTON_1             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_2 = GLFW_MOUSE_BUTTON_2
 * MOUSE_BUTTON_3 = GLFW_MOUSE_BUTTON_3
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_1, __pyx_t_2) < 0) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":149
 * MOD_NUM_LOCK = GLFW_MOD_NUM_LOCK
 * MOUSE_BUTTON_1 = GLFW_MOUSE_BUTTON_1
 * MOUSE_BUTTON_2 = GLFW_MOUSE_BUTTON_2             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_3 = GLFW_MOUSE_BUTTON_3
 * MOUSE_BUTTON_4 = GLFW_MOUSE_BUTTON_4
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_2, __pyx_t_2) < 0) __PYX_ERR(0, 149, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":150
 * MOUSE_BUTTON_1 = GLFW_MOUSE_BUTTON_1
 * MOUSE_BUTTON_2 = GLFW_MOUSE_BUTTON_2
 * MOUSE_BUTTON_3 = GLFW_MOUSE_BUTTON_3             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_4 = GLFW_MOUSE_BUTTON_4
 * MOUSE_BUTTON_5 = GLFW_MOUSE_BUTTON_5
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_3, __pyx_t_2) < 0) __PYX_ERR(0, 150, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":151
 * MOUSE_BUTTON_2 = GLFW_MOUSE_BUTTON_2
 * MOUSE_BUTTON_3 = GLFW_MOUSE_BUTTON_3
 * MOUSE_BUTTON_4 = GLFW_MOUSE_BUTTON_4             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_5 = GLFW_MOUSE_BUTTON_5
 * MOUSE_BUTTON_6 = GLFW_MOUSE_BUTTON_6
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_4, __pyx_t_2) < 0) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":152
 * MOUSE_BUTTON_3 = GLFW_MOUSE_BUTTON_3
 * MOUSE_BUTTON_4 = GLFW_MOUSE_BUTTON_4
 * MOUSE_BUTTON_5 = GLFW_MOUSE_BUTTON_5             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_6 = GLFW_MOUSE_BUTTON_6
 * MOUSE_BUTTON_7 = GLFW_MOUSE_BUTTON_7
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_5, __pyx_t_2) < 0) __PYX_ERR(0, 152, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":153
 * MOUSE_BUTTON_4 = GLFW_MOUSE_BUTTON_4
 * MOUSE_BUTTON_5 = GLFW_MOUSE_BUTTON_5
 * MOUSE_BUTTON_6 = GLFW_MOUSE_BUTTON_6             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_7 = GLFW_MOUSE_BUTTON_7
 * MOUSE_BUTTON_8 = GLFW_MOUSE_BUTTON_8
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_6, __pyx_t_2) < 0) __PYX_ERR(0, 153, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":154
 * MOUSE_BUTTON_5 = GLFW_MOUSE_BUTTON_5
 * MOUSE_BUTTON_6 = GLFW_MOUSE_BUTTON_6
 * MOUSE_BUTTON_7 = GLFW_MOUSE_BUTTON_7             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_8 = GLFW_MOUSE_BUTTON_8
 * MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_LAST
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_7, __pyx_t_2) < 0) __PYX_ERR(0, 154, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":155
 * MOUSE_BUTTON_6 = GLFW_MOUSE_BUTTON_6
 * MOUSE_BUTTON_7 = GLFW_MOUSE_BUTTON_7
 * MOUSE_BUTTON_8 = GLFW_MOUSE_BUTTON_8             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_LAST
 * MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_LEFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_8, __pyx_t_2) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":156
 * MOUSE_BUTTON_7 = GLFW_MOUSE_BUTTON_7
 * MOUSE_BUTTON_8 = GLFW_MOUSE_BUTTON_8
 * MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_LAST             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_LEFT
 * MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_RIGHT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_LAST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_LAST, __pyx_t_2) < 0) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":157
 * MOUSE_BUTTON_8 = GLFW_MOUSE_BUTTON_8
 * MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_LAST
 * MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_LEFT             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_RIGHT
 * MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_LEFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_LEFT, __pyx_t_2) < 0) __PYX_ERR(0, 157, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":158
 * MOUSE_BUTTON_LAST = GLFW_MOUSE_BUTTON_LAST
 * MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_LEFT
 * MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_RIGHT             # <<<<<<<<<<<<<<
 * MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE
 * JOYSTICK_1 = GLFW_JOYSTICK_1
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_RIGHT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_RIGHT, __pyx_t_2) < 0) __PYX_ERR(0, 158, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":159
 * MOUSE_BUTTON_LEFT = GLFW_MOUSE_BUTTON_LEFT
 * MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_RIGHT
 * MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE             # <<<<<<<<<<<<<<
 * JOYSTICK_1 = GLFW_JOYSTICK_1
 * JOYSTICK_2 = GLFW_JOYSTICK_2
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MOUSE_BUTTON_MIDDLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MOUSE_BUTTON_MIDDLE, __pyx_t_2) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":160
 * MOUSE_BUTTON_RIGHT = GLFW_MOUSE_BUTTON_RIGHT
 * MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE
 * JOYSTICK_1 = GLFW_JOYSTICK_1             # <<<<<<<<<<<<<<
 * JOYSTICK_2 = GLFW_JOYSTICK_2
 * JOYSTICK_3 = GLFW_JOYSTICK_3
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_1, __pyx_t_2) < 0) __PYX_ERR(0, 160, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":161
 * MOUSE_BUTTON_MIDDLE = GLFW_MOUSE_BUTTON_MIDDLE
 * JOYSTICK_1 = GLFW_JOYSTICK_1
 * JOYSTICK_2 = GLFW_JOYSTICK_2             # <<<<<<<<<<<<<<
 * JOYSTICK_3 = GLFW_JOYSTICK_3
 * JOYSTICK_4 = GLFW_JOYSTICK_4
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_2, __pyx_t_2) < 0) __PYX_ERR(0, 161, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":162
 * JOYSTICK_1 = GLFW_JOYSTICK_1
 * JOYSTICK_2 = GLFW_JOYSTICK_2
 * JOYSTICK_3 = GLFW_JOYSTICK_3             # <<<<<<<<<<<<<<
 * JOYSTICK_4 = GLFW_JOYSTICK_4
 * JOYSTICK_5 = GLFW_JOYSTICK_5
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_3, __pyx_t_2) < 0) __PYX_ERR(0, 162, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":163
 * JOYSTICK_2 = GLFW_JOYSTICK_2
 * JOYSTICK_3 = GLFW_JOYSTICK_3
 * JOYSTICK_4 = GLFW_JOYSTICK_4             # <<<<<<<<<<<<<<
 * JOYSTICK_5 = GLFW_JOYSTICK_5
 * JOYSTICK_6 = GLFW_JOYSTICK_6
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_4, __pyx_t_2) < 0) __PYX_ERR(0, 163, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":164
 * JOYSTICK_3 = GLFW_JOYSTICK_3
 * JOYSTICK_4 = GLFW_JOYSTICK_4
 * JOYSTICK_5 = GLFW_JOYSTICK_5             # <<<<<<<<<<<<<<
 * JOYSTICK_6 = GLFW_JOYSTICK_6
 * JOYSTICK_7 = GLFW_JOYSTICK_7
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_5, __pyx_t_2) < 0) __PYX_ERR(0, 164, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":165
 * JOYSTICK_4 = GLFW_JOYSTICK_4
 * JOYSTICK_5 = GLFW_JOYSTICK_5
 * JOYSTICK_6 = GLFW_JOYSTICK_6             # <<<<<<<<<<<<<<
 * JOYSTICK_7 = GLFW_JOYSTICK_7
 * JOYSTICK_8 = GLFW_JOYSTICK_8
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_6, __pyx_t_2) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":166
 * JOYSTICK_5 = GLFW_JOYSTICK_5
 * JOYSTICK_6 = GLFW_JOYSTICK_6
 * JOYSTICK_7 = GLFW_JOYSTICK_7             # <<<<<<<<<<<<<<
 * JOYSTICK_8 = GLFW_JOYSTICK_8
 * JOYSTICK_9 = GLFW_JOYSTICK_9
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_7, __pyx_t_2) < 0) __PYX_ERR(0, 166, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":167
 * JOYSTICK_6 = GLFW_JOYSTICK_6
 * JOYSTICK_7 = GLFW_JOYSTICK_7
 * JOYSTICK_8 = GLFW_JOYSTICK_8             # <<<<<<<<<<<<<<
 * JOYSTICK_9 = GLFW_JOYSTICK_9
 * JOYSTICK_10 = GLFW_JOYSTICK_10
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_8, __pyx_t_2) < 0) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":168
 * JOYSTICK_7 = GLFW_JOYSTICK_7
 * JOYSTICK_8 = GLFW_JOYSTICK_8
 * JOYSTICK_9 = GLFW_JOYSTICK_9             # <<<<<<<<<<<<<<
 * JOYSTICK_10 = GLFW_JOYSTICK_10
 * JOYSTICK_11 = GLFW_JOYSTICK_11
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_9, __pyx_t_2) < 0) __PYX_ERR(0, 168, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":169
 * JOYSTICK_8 = GLFW_JOYSTICK_8
 * JOYSTICK_9 = GLFW_JOYSTICK_9
 * JOYSTICK_10 = GLFW_JOYSTICK_10             # <<<<<<<<<<<<<<
 * JOYSTICK_11 = GLFW_JOYSTICK_11
 * JOYSTICK_12 = GLFW_JOYSTICK_12
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_10); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 169, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_10, __pyx_t_2) < 0) __PYX_ERR(0, 169, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":170
 * JOYSTICK_9 = GLFW_JOYSTICK_9
 * JOYSTICK_10 = GLFW_JOYSTICK_10
 * JOYSTICK_11 = GLFW_JOYSTICK_11             # <<<<<<<<<<<<<<
 * JOYSTICK_12 = GLFW_JOYSTICK_12
 * JOYSTICK_13 = GLFW_JOYSTICK_13
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_11); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 170, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_11, __pyx_t_2) < 0) __PYX_ERR(0, 170, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":171
 * JOYSTICK_10 = GLFW_JOYSTICK_10
 * JOYSTICK_11 = GLFW_JOYSTICK_11
 * JOYSTICK_12 = GLFW_JOYSTICK_12             # <<<<<<<<<<<<<<
 * JOYSTICK_13 = GLFW_JOYSTICK_13
 * JOYSTICK_14 = GLFW_JOYSTICK_14
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_12); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_12, __pyx_t_2) < 0) __PYX_ERR(0, 171, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":172
 * JOYSTICK_11 = GLFW_JOYSTICK_11
 * JOYSTICK_12 = GLFW_JOYSTICK_12
 * JOYSTICK_13 = GLFW_JOYSTICK_13             # <<<<<<<<<<<<<<
 * JOYSTICK_14 = GLFW_JOYSTICK_14
 * JOYSTICK_15 = GLFW_JOYSTICK_15
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_13); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_13, __pyx_t_2) < 0) __PYX_ERR(0, 172, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":173
 * JOYSTICK_12 = GLFW_JOYSTICK_12
 * JOYSTICK_13 = GLFW_JOYSTICK_13
 * JOYSTICK_14 = GLFW_JOYSTICK_14             # <<<<<<<<<<<<<<
 * JOYSTICK_15 = GLFW_JOYSTICK_15
 * JOYSTICK_16 = GLFW_JOYSTICK_16
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_14); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_14, __pyx_t_2) < 0) __PYX_ERR(0, 173, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":174
 * JOYSTICK_13 = GLFW_JOYSTICK_13
 * JOYSTICK_14 = GLFW_JOYSTICK_14
 * JOYSTICK_15 = GLFW_JOYSTICK_15             # <<<<<<<<<<<<<<
 * JOYSTICK_16 = GLFW_JOYSTICK_16
 * JOYSTICK_LAST = GLFW_JOYSTICK_LAST
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_15, __pyx_t_2) < 0) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":175
 * JOYSTICK_14 = GLFW_JOYSTICK_14
 * JOYSTICK_15 = GLFW_JOYSTICK_15
 * JOYSTICK_16 = GLFW_JOYSTICK_16             # <<<<<<<<<<<<<<
 * JOYSTICK_LAST = GLFW_JOYSTICK_LAST
 * GAMEPAD_BUTTON_A = GLFW_GAMEPAD_BUTTON_A
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_16); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 175, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_16, __pyx_t_2) < 0) __PYX_ERR(0, 175, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":176
 * JOYSTICK_15 = GLFW_JOYSTICK_15
 * JOYSTICK_16 = GLFW_JOYSTICK_16
 * JOYSTICK_LAST = GLFW_JOYSTICK_LAST             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_A = GLFW_GAMEPAD_BUTTON_A
 * GAMEPAD_BUTTON_B = GLFW_GAMEPAD_BUTTON_B
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_LAST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_LAST, __pyx_t_2) < 0) __PYX_ERR(0, 176, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":177
 * JOYSTICK_16 = GLFW_JOYSTICK_16
 * JOYSTICK_LAST = GLFW_JOYSTICK_LAST
 * GAMEPAD_BUTTON_A = GLFW_GAMEPAD_BUTTON_A             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_B = GLFW_GAMEPAD_BUTTON_B
 * GAMEPAD_BUTTON_X = GLFW_GAMEPAD_BUTTON_X
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_A); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_A, __pyx_t_2) < 0) __PYX_ERR(0, 177, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":178
 * JOYSTICK_LAST = GLFW_JOYSTICK_LAST
 * GAMEPAD_BUTTON_A = GLFW_GAMEPAD_BUTTON_A
 * GAMEPAD_BUTTON_B = GLFW_GAMEPAD_BUTTON_B             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_X = GLFW_GAMEPAD_BUTTON_X
 * GAMEPAD_BUTTON_Y = GLFW_GAMEPAD_BUTTON_Y
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_B); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_B, __pyx_t_2) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":179
 * GAMEPAD_BUTTON_A = GLFW_GAMEPAD_BUTTON_A
 * GAMEPAD_BUTTON_B = GLFW_GAMEPAD_BUTTON_B
 * GAMEPAD_BUTTON_X = GLFW_GAMEPAD_BUTTON_X             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_Y = GLFW_GAMEPAD_BUTTON_Y
 * GAMEPAD_BUTTON_LEFT_BUMPER = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_X); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_X, __pyx_t_2) < 0) __PYX_ERR(0, 179, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":180
 * GAMEPAD_BUTTON_B = GLFW_GAMEPAD_BUTTON_B
 * GAMEPAD_BUTTON_X = GLFW_GAMEPAD_BUTTON_X
 * GAMEPAD_BUTTON_Y = GLFW_GAMEPAD_BUTTON_Y             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_LEFT_BUMPER = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER
 * GAMEPAD_BUTTON_RIGHT_BUMPER = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_Y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_Y, __pyx_t_2) < 0) __PYX_ERR(0, 180, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":181
 * GAMEPAD_BUTTON_X = GLFW_GAMEPAD_BUTTON_X
 * GAMEPAD_BUTTON_Y = GLFW_GAMEPAD_BUTTON_Y
 * GAMEPAD_BUTTON_LEFT_BUMPER = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_RIGHT_BUMPER = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER
 * GAMEPAD_BUTTON_BACK = GLFW_GAMEPAD_BUTTON_BACK
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_LEFT_BUMPER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_LEFT_BUMPER, __pyx_t_2) < 0) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":182
 * GAMEPAD_BUTTON_Y = GLFW_GAMEPAD_BUTTON_Y
 * GAMEPAD_BUTTON_LEFT_BUMPER = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER
 * GAMEPAD_BUTTON_RIGHT_BUMPER = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_BACK = GLFW_GAMEPAD_BUTTON_BACK
 * GAMEPAD_BUTTON_START = GLFW_GAMEPAD_BUTTON_START
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_RIGHT_BUMPER, __pyx_t_2) < 0) __PYX_ERR(0, 182, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":183
 * GAMEPAD_BUTTON_LEFT_BUMPER = GLFW_GAMEPAD_BUTTON_LEFT_BUMPER
 * GAMEPAD_BUTTON_RIGHT_BUMPER = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER
 * GAMEPAD_BUTTON_BACK = GLFW_GAMEPAD_BUTTON_BACK             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_START = GLFW_GAMEPAD_BUTTON_START
 * GAMEPAD_BUTTON_GUIDE = GLFW_GAMEPAD_BUTTON_GUIDE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_BACK); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_BACK, __pyx_t_2) < 0) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":184
 * GAMEPAD_BUTTON_RIGHT_BUMPER = GLFW_GAMEPAD_BUTTON_RIGHT_BUMPER
 * GAMEPAD_BUTTON_BACK = GLFW_GAMEPAD_BUTTON_BACK
 * GAMEPAD_BUTTON_START = GLFW_GAMEPAD_BUTTON_START             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_GUIDE = GLFW_GAMEPAD_BUTTON_GUIDE
 * GAMEPAD_BUTTON_LEFT_THUMB = GLFW_GAMEPAD_BUTTON_LEFT_THUMB
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_START); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_START, __pyx_t_2) < 0) __PYX_ERR(0, 184, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":185
 * GAMEPAD_BUTTON_BACK = GLFW_GAMEPAD_BUTTON_BACK
 * GAMEPAD_BUTTON_START = GLFW_GAMEPAD_BUTTON_START
 * GAMEPAD_BUTTON_GUIDE = GLFW_GAMEPAD_BUTTON_GUIDE             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_LEFT_THUMB = GLFW_GAMEPAD_BUTTON_LEFT_THUMB
 * GAMEPAD_BUTTON_RIGHT_THUMB = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_GUIDE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_GUIDE, __pyx_t_2) < 0) __PYX_ERR(0, 185, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":186
 * GAMEPAD_BUTTON_START = GLFW_GAMEPAD_BUTTON_START
 * GAMEPAD_BUTTON_GUIDE = GLFW_GAMEPAD_BUTTON_GUIDE
 * GAMEPAD_BUTTON_LEFT_THUMB = GLFW_GAMEPAD_BUTTON_LEFT_THUMB             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_RIGHT_THUMB = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB
 * GAMEPAD_BUTTON_DPAD_UP = GLFW_GAMEPAD_BUTTON_DPAD_UP
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_LEFT_THUMB); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_LEFT_THUMB, __pyx_t_2) < 0) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":187
 * GAMEPAD_BUTTON_GUIDE = GLFW_GAMEPAD_BUTTON_GUIDE
 * GAMEPAD_BUTTON_LEFT_THUMB = GLFW_GAMEPAD_BUTTON_LEFT_THUMB
 * GAMEPAD_BUTTON_RIGHT_THUMB = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_DPAD_UP = GLFW_GAMEPAD_BUTTON_DPAD_UP
 * GAMEPAD_BUTTON_DPAD_RIGHT = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_RIGHT_THUMB); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_RIGHT_THUMB, __pyx_t_2) < 0) __PYX_ERR(0, 187, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":188
 * GAMEPAD_BUTTON_LEFT_THUMB = GLFW_GAMEPAD_BUTTON_LEFT_THUMB
 * GAMEPAD_BUTTON_RIGHT_THUMB = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB
 * GAMEPAD_BUTTON_DPAD_UP = GLFW_GAMEPAD_BUTTON_DPAD_UP             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_DPAD_RIGHT = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT
 * GAMEPAD_BUTTON_DPAD_DOWN = GLFW_GAMEPAD_BUTTON_DPAD_DOWN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_DPAD_UP); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_DPAD_UP, __pyx_t_2) < 0) __PYX_ERR(0, 188, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":189
 * GAMEPAD_BUTTON_RIGHT_THUMB = GLFW_GAMEPAD_BUTTON_RIGHT_THUMB
 * GAMEPAD_BUTTON_DPAD_UP = GLFW_GAMEPAD_BUTTON_DPAD_UP
 * GAMEPAD_BUTTON_DPAD_RIGHT = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_DPAD_DOWN = GLFW_GAMEPAD_BUTTON_DPAD_DOWN
 * GAMEPAD_BUTTON_DPAD_LEFT = GLFW_GAMEPAD_BUTTON_DPAD_LEFT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_DPAD_RIGHT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_DPAD_RIGHT, __pyx_t_2) < 0) __PYX_ERR(0, 189, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":190
 * GAMEPAD_BUTTON_DPAD_UP = GLFW_GAMEPAD_BUTTON_DPAD_UP
 * GAMEPAD_BUTTON_DPAD_RIGHT = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT
 * GAMEPAD_BUTTON_DPAD_DOWN = GLFW_GAMEPAD_BUTTON_DPAD_DOWN             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_DPAD_LEFT = GLFW_GAMEPAD_BUTTON_DPAD_LEFT
 * GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_LAST
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_DPAD_DOWN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_DPAD_DOWN, __pyx_t_2) < 0) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":191
 * GAMEPAD_BUTTON_DPAD_RIGHT = GLFW_GAMEPAD_BUTTON_DPAD_RIGHT
 * GAMEPAD_BUTTON_DPAD_DOWN = GLFW_GAMEPAD_BUTTON_DPAD_DOWN
 * GAMEPAD_BUTTON_DPAD_LEFT = GLFW_GAMEPAD_BUTTON_DPAD_LEFT             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_LAST
 * GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_CROSS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_DPAD_LEFT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_DPAD_LEFT, __pyx_t_2) < 0) __PYX_ERR(0, 191, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":192
 * GAMEPAD_BUTTON_DPAD_DOWN = GLFW_GAMEPAD_BUTTON_DPAD_DOWN
 * GAMEPAD_BUTTON_DPAD_LEFT = GLFW_GAMEPAD_BUTTON_DPAD_LEFT
 * GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_LAST             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_CROSS
 * GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_CIRCLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_LAST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_LAST, __pyx_t_2) < 0) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":193
 * GAMEPAD_BUTTON_DPAD_LEFT = GLFW_GAMEPAD_BUTTON_DPAD_LEFT
 * GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_LAST
 * GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_CROSS             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_CIRCLE
 * GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_SQUARE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_CROSS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_CROSS, __pyx_t_2) < 0) __PYX_ERR(0, 193, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":194
 * GAMEPAD_BUTTON_LAST = GLFW_GAMEPAD_BUTTON_LAST
 * GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_CROSS
 * GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_CIRCLE             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_SQUARE
 * GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_TRIANGLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_CIRCLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_CIRCLE, __pyx_t_2) < 0) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":195
 * GAMEPAD_BUTTON_CROSS = GLFW_GAMEPAD_BUTTON_CROSS
 * GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_CIRCLE
 * GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_SQUARE             # <<<<<<<<<<<<<<
 * GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_TRIANGLE
 * GAMEPAD_AXIS_LEFT_X = GLFW_GAMEPAD_AXIS_LEFT_X
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_SQUARE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_SQUARE, __pyx_t_2) < 0) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":196
 * GAMEPAD_BUTTON_CIRCLE = GLFW_GAMEPAD_BUTTON_CIRCLE
 * GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_SQUARE
 * GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_TRIANGLE             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_LEFT_X = GLFW_GAMEPAD_AXIS_LEFT_X
 * GAMEPAD_AXIS_LEFT_Y = GLFW_GAMEPAD_AXIS_LEFT_Y
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_BUTTON_TRIANGLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_BUTTON_TRIANGLE, __pyx_t_2) < 0) __PYX_ERR(0, 196, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":197
 * GAMEPAD_BUTTON_SQUARE = GLFW_GAMEPAD_BUTTON_SQUARE
 * GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_TRIANGLE
 * GAMEPAD_AXIS_LEFT_X = GLFW_GAMEPAD_AXIS_LEFT_X             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_LEFT_Y = GLFW_GAMEPAD_AXIS_LEFT_Y
 * GAMEPAD_AXIS_RIGHT_X = GLFW_GAMEPAD_AXIS_RIGHT_X
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_LEFT_X); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_LEFT_X, __pyx_t_2) < 0) __PYX_ERR(0, 197, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":198
 * GAMEPAD_BUTTON_TRIANGLE = GLFW_GAMEPAD_BUTTON_TRIANGLE
 * GAMEPAD_AXIS_LEFT_X = GLFW_GAMEPAD_AXIS_LEFT_X
 * GAMEPAD_AXIS_LEFT_Y = GLFW_GAMEPAD_AXIS_LEFT_Y             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_RIGHT_X = GLFW_GAMEPAD_AXIS_RIGHT_X
 * GAMEPAD_AXIS_RIGHT_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_LEFT_Y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_LEFT_Y, __pyx_t_2) < 0) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":199
 * GAMEPAD_AXIS_LEFT_X = GLFW_GAMEPAD_AXIS_LEFT_X
 * GAMEPAD_AXIS_LEFT_Y = GLFW_GAMEPAD_AXIS_LEFT_Y
 * GAMEPAD_AXIS_RIGHT_X = GLFW_GAMEPAD_AXIS_RIGHT_X             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_RIGHT_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y
 * GAMEPAD_AXIS_LEFT_TRIGGER = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_RIGHT_X); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_RIGHT_X, __pyx_t_2) < 0) __PYX_ERR(0, 199, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":200
 * GAMEPAD_AXIS_LEFT_Y = GLFW_GAMEPAD_AXIS_LEFT_Y
 * GAMEPAD_AXIS_RIGHT_X = GLFW_GAMEPAD_AXIS_RIGHT_X
 * GAMEPAD_AXIS_RIGHT_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_LEFT_TRIGGER = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER
 * GAMEPAD_AXIS_RIGHT_TRIGGER = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_RIGHT_Y); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_RIGHT_Y, __pyx_t_2) < 0) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":201
 * GAMEPAD_AXIS_RIGHT_X = GLFW_GAMEPAD_AXIS_RIGHT_X
 * GAMEPAD_AXIS_RIGHT_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y
 * GAMEPAD_AXIS_LEFT_TRIGGER = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_RIGHT_TRIGGER = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER
 * GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_LAST
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_LEFT_TRIGGER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_LEFT_TRIGGER, __pyx_t_2) < 0) __PYX_ERR(0, 201, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":202
 * GAMEPAD_AXIS_RIGHT_Y = GLFW_GAMEPAD_AXIS_RIGHT_Y
 * GAMEPAD_AXIS_LEFT_TRIGGER = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER
 * GAMEPAD_AXIS_RIGHT_TRIGGER = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER             # <<<<<<<<<<<<<<
 * GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_LAST
 * NO_ERROR = GLFW_NO_ERROR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_RIGHT_TRIGGER, __pyx_t_2) < 0) __PYX_ERR(0, 202, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":203
 * GAMEPAD_AXIS_LEFT_TRIGGER = GLFW_GAMEPAD_AXIS_LEFT_TRIGGER
 * GAMEPAD_AXIS_RIGHT_TRIGGER = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER
 * GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_LAST             # <<<<<<<<<<<<<<
 * NO_ERROR = GLFW_NO_ERROR
 * NOT_INITIALIZED = GLFW_NOT_INITIALIZED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GAMEPAD_AXIS_LAST); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GAMEPAD_AXIS_LAST, __pyx_t_2) < 0) __PYX_ERR(0, 203, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":204
 * GAMEPAD_AXIS_RIGHT_TRIGGER = GLFW_GAMEPAD_AXIS_RIGHT_TRIGGER
 * GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_LAST
 * NO_ERROR = GLFW_NO_ERROR             # <<<<<<<<<<<<<<
 * NOT_INITIALIZED = GLFW_NOT_INITIALIZED
 * NO_CURRENT_CONTEXT = GLFW_NO_CURRENT_CONTEXT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_ERROR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_ERROR, __pyx_t_2) < 0) __PYX_ERR(0, 204, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":205
 * GAMEPAD_AXIS_LAST = GLFW_GAMEPAD_AXIS_LAST
 * NO_ERROR = GLFW_NO_ERROR
 * NOT_INITIALIZED = GLFW_NOT_INITIALIZED             # <<<<<<<<<<<<<<
 * NO_CURRENT_CONTEXT = GLFW_NO_CURRENT_CONTEXT
 * INVALID_ENUM = GLFW_INVALID_ENUM
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NOT_INITIALIZED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NOT_INITIALIZED, __pyx_t_2) < 0) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":206
 * NO_ERROR = GLFW_NO_ERROR
 * NOT_INITIALIZED = GLFW_NOT_INITIALIZED
 * NO_CURRENT_CONTEXT = GLFW_NO_CURRENT_CONTEXT             # <<<<<<<<<<<<<<
 * INVALID_ENUM = GLFW_INVALID_ENUM
 * INVALID_VALUE = GLFW_INVALID_VALUE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_CURRENT_CONTEXT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_CURRENT_CONTEXT, __pyx_t_2) < 0) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":207
 * NOT_INITIALIZED = GLFW_NOT_INITIALIZED
 * NO_CURRENT_CONTEXT = GLFW_NO_CURRENT_CONTEXT
 * INVALID_ENUM = GLFW_INVALID_ENUM             # <<<<<<<<<<<<<<
 * INVALID_VALUE = GLFW_INVALID_VALUE
 * OUT_OF_MEMORY = GLFW_OUT_OF_MEMORY
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_INVALID_ENUM); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_INVALID_ENUM, __pyx_t_2) < 0) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":208
 * NO_CURRENT_CONTEXT = GLFW_NO_CURRENT_CONTEXT
 * INVALID_ENUM = GLFW_INVALID_ENUM
 * INVALID_VALUE = GLFW_INVALID_VALUE             # <<<<<<<<<<<<<<
 * OUT_OF_MEMORY = GLFW_OUT_OF_MEMORY
 * API_UNAVAILABLE = GLFW_API_UNAVAILABLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_INVALID_VALUE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_INVALID_VALUE, __pyx_t_2) < 0) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":209
 * INVALID_ENUM = GLFW_INVALID_ENUM
 * INVALID_VALUE = GLFW_INVALID_VALUE
 * OUT_OF_MEMORY = GLFW_OUT_OF_MEMORY             # <<<<<<<<<<<<<<
 * API_UNAVAILABLE = GLFW_API_UNAVAILABLE
 * VERSION_UNAVAILABLE = GLFW_VERSION_UNAVAILABLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OUT_OF_MEMORY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OUT_OF_MEMORY, __pyx_t_2) < 0) __PYX_ERR(0, 209, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":210
 * INVALID_VALUE = GLFW_INVALID_VALUE
 * OUT_OF_MEMORY = GLFW_OUT_OF_MEMORY
 * API_UNAVAILABLE = GLFW_API_UNAVAILABLE             # <<<<<<<<<<<<<<
 * VERSION_UNAVAILABLE = GLFW_VERSION_UNAVAILABLE
 * PLATFORM_ERROR = GLFW_PLATFORM_ERROR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_API_UNAVAILABLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_API_UNAVAILABLE, __pyx_t_2) < 0) __PYX_ERR(0, 210, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":211
 * OUT_OF_MEMORY = GLFW_OUT_OF_MEMORY
 * API_UNAVAILABLE = GLFW_API_UNAVAILABLE
 * VERSION_UNAVAILABLE = GLFW_VERSION_UNAVAILABLE             # <<<<<<<<<<<<<<
 * PLATFORM_ERROR = GLFW_PLATFORM_ERROR
 * FORMAT_UNAVAILABLE = GLFW_FORMAT_UNAVAILABLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VERSION_UNAVAILABLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 211, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VERSION_UNAVAILABLE, __pyx_t_2) < 0) __PYX_ERR(0, 211, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":212
 * API_UNAVAILABLE = GLFW_API_UNAVAILABLE
 * VERSION_UNAVAILABLE = GLFW_VERSION_UNAVAILABLE
 * PLATFORM_ERROR = GLFW_PLATFORM_ERROR             # <<<<<<<<<<<<<<
 * FORMAT_UNAVAILABLE = GLFW_FORMAT_UNAVAILABLE
 * NO_WINDOW_CONTEXT = GLFW_NO_WINDOW_CONTEXT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_PLATFORM_ERROR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_PLATFORM_ERROR, __pyx_t_2) < 0) __PYX_ERR(0, 212, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":213
 * VERSION_UNAVAILABLE = GLFW_VERSION_UNAVAILABLE
 * PLATFORM_ERROR = GLFW_PLATFORM_ERROR
 * FORMAT_UNAVAILABLE = GLFW_FORMAT_UNAVAILABLE             # <<<<<<<<<<<<<<
 * NO_WINDOW_CONTEXT = GLFW_NO_WINDOW_CONTEXT
 * FOCUSED = GLFW_FOCUSED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_FORMAT_UNAVAILABLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FORMAT_UNAVAILABLE, __pyx_t_2) < 0) __PYX_ERR(0, 213, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":214
 * PLATFORM_ERROR = GLFW_PLATFORM_ERROR
 * FORMAT_UNAVAILABLE = GLFW_FORMAT_UNAVAILABLE
 * NO_WINDOW_CONTEXT = GLFW_NO_WINDOW_CONTEXT             # <<<<<<<<<<<<<<
 * FOCUSED = GLFW_FOCUSED
 * ICONIFIED = GLFW_ICONIFIED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_WINDOW_CONTEXT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_WINDOW_CONTEXT, __pyx_t_2) < 0) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":215
 * FORMAT_UNAVAILABLE = GLFW_FORMAT_UNAVAILABLE
 * NO_WINDOW_CONTEXT = GLFW_NO_WINDOW_CONTEXT
 * FOCUSED = GLFW_FOCUSED             # <<<<<<<<<<<<<<
 * ICONIFIED = GLFW_ICONIFIED
 * RESIZABLE = GLFW_RESIZABLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_FOCUSED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FOCUSED, __pyx_t_2) < 0) __PYX_ERR(0, 215, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":216
 * NO_WINDOW_CONTEXT = GLFW_NO_WINDOW_CONTEXT
 * FOCUSED = GLFW_FOCUSED
 * ICONIFIED = GLFW_ICONIFIED             # <<<<<<<<<<<<<<
 * RESIZABLE = GLFW_RESIZABLE
 * VISIBLE = GLFW_VISIBLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ICONIFIED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ICONIFIED, __pyx_t_2) < 0) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":217
 * FOCUSED = GLFW_FOCUSED
 * ICONIFIED = GLFW_ICONIFIED
 * RESIZABLE = GLFW_RESIZABLE             # <<<<<<<<<<<<<<
 * VISIBLE = GLFW_VISIBLE
 * DECORATED = GLFW_DECORATED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RESIZABLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RESIZABLE, __pyx_t_2) < 0) __PYX_ERR(0, 217, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":218
 * ICONIFIED = GLFW_ICONIFIED
 * RESIZABLE = GLFW_RESIZABLE
 * VISIBLE = GLFW_VISIBLE             # <<<<<<<<<<<<<<
 * DECORATED = GLFW_DECORATED
 * AUTO_ICONIFY = GLFW_AUTO_ICONIFY
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VISIBLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VISIBLE, __pyx_t_2) < 0) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":219
 * RESIZABLE = GLFW_RESIZABLE
 * VISIBLE = GLFW_VISIBLE
 * DECORATED = GLFW_DECORATED             # <<<<<<<<<<<<<<
 * AUTO_ICONIFY = GLFW_AUTO_ICONIFY
 * FLOATING = GLFW_FLOATING
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_DECORATED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 219, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DECORATED, __pyx_t_2) < 0) __PYX_ERR(0, 219, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":220
 * VISIBLE = GLFW_VISIBLE
 * DECORATED = GLFW_DECORATED
 * AUTO_ICONIFY = GLFW_AUTO_ICONIFY             # <<<<<<<<<<<<<<
 * FLOATING = GLFW_FLOATING
 * MAXIMIZED = GLFW_MAXIMIZED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_AUTO_ICONIFY); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AUTO_ICONIFY, __pyx_t_2) < 0) __PYX_ERR(0, 220, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":221
 * DECORATED = GLFW_DECORATED
 * AUTO_ICONIFY = GLFW_AUTO_ICONIFY
 * FLOATING = GLFW_FLOATING             # <<<<<<<<<<<<<<
 * MAXIMIZED = GLFW_MAXIMIZED
 * CENTER_CURSOR = GLFW_CENTER_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_FLOATING); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FLOATING, __pyx_t_2) < 0) __PYX_ERR(0, 221, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":222
 * AUTO_ICONIFY = GLFW_AUTO_ICONIFY
 * FLOATING = GLFW_FLOATING
 * MAXIMIZED = GLFW_MAXIMIZED             # <<<<<<<<<<<<<<
 * CENTER_CURSOR = GLFW_CENTER_CURSOR
 * TRANSPARENT_FRAMEBUFFER = GLFW_TRANSPARENT_FRAMEBUFFER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_MAXIMIZED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_MAXIMIZED, __pyx_t_2) < 0) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":223
 * FLOATING = GLFW_FLOATING
 * MAXIMIZED = GLFW_MAXIMIZED
 * CENTER_CURSOR = GLFW_CENTER_CURSOR             # <<<<<<<<<<<<<<
 * TRANSPARENT_FRAMEBUFFER = GLFW_TRANSPARENT_FRAMEBUFFER
 * HOVERED = GLFW_HOVERED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CENTER_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 223, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CENTER_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 223, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":224
 * MAXIMIZED = GLFW_MAXIMIZED
 * CENTER_CURSOR = GLFW_CENTER_CURSOR
 * TRANSPARENT_FRAMEBUFFER = GLFW_TRANSPARENT_FRAMEBUFFER             # <<<<<<<<<<<<<<
 * HOVERED = GLFW_HOVERED
 * FOCUS_ON_SHOW = GLFW_FOCUS_ON_SHOW
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_TRANSPARENT_FRAMEBUFFER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_TRANSPARENT_FRAMEBUFFER, __pyx_t_2) < 0) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":225
 * CENTER_CURSOR = GLFW_CENTER_CURSOR
 * TRANSPARENT_FRAMEBUFFER = GLFW_TRANSPARENT_FRAMEBUFFER
 * HOVERED = GLFW_HOVERED             # <<<<<<<<<<<<<<
 * FOCUS_ON_SHOW = GLFW_FOCUS_ON_SHOW
 * RED_BITS = GLFW_RED_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HOVERED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HOVERED, __pyx_t_2) < 0) __PYX_ERR(0, 225, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":226
 * TRANSPARENT_FRAMEBUFFER = GLFW_TRANSPARENT_FRAMEBUFFER
 * HOVERED = GLFW_HOVERED
 * FOCUS_ON_SHOW = GLFW_FOCUS_ON_SHOW             # <<<<<<<<<<<<<<
 * RED_BITS = GLFW_RED_BITS
 * GREEN_BITS = GLFW_GREEN_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_FOCUS_ON_SHOW); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_FOCUS_ON_SHOW, __pyx_t_2) < 0) __PYX_ERR(0, 226, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":227
 * HOVERED = GLFW_HOVERED
 * FOCUS_ON_SHOW = GLFW_FOCUS_ON_SHOW
 * RED_BITS = GLFW_RED_BITS             # <<<<<<<<<<<<<<
 * GREEN_BITS = GLFW_GREEN_BITS
 * BLUE_BITS = GLFW_BLUE_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RED_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RED_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":228
 * FOCUS_ON_SHOW = GLFW_FOCUS_ON_SHOW
 * RED_BITS = GLFW_RED_BITS
 * GREEN_BITS = GLFW_GREEN_BITS             # <<<<<<<<<<<<<<
 * BLUE_BITS = GLFW_BLUE_BITS
 * ALPHA_BITS = GLFW_ALPHA_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_GREEN_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_GREEN_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 228, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":229
 * RED_BITS = GLFW_RED_BITS
 * GREEN_BITS = GLFW_GREEN_BITS
 * BLUE_BITS = GLFW_BLUE_BITS             # <<<<<<<<<<<<<<
 * ALPHA_BITS = GLFW_ALPHA_BITS
 * DEPTH_BITS = GLFW_DEPTH_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_BLUE_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_BLUE_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":230
 * GREEN_BITS = GLFW_GREEN_BITS
 * BLUE_BITS = GLFW_BLUE_BITS
 * ALPHA_BITS = GLFW_ALPHA_BITS             # <<<<<<<<<<<<<<
 * DEPTH_BITS = GLFW_DEPTH_BITS
 * STENCIL_BITS = GLFW_STENCIL_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ALPHA_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ALPHA_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 230, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":231
 * BLUE_BITS = GLFW_BLUE_BITS
 * ALPHA_BITS = GLFW_ALPHA_BITS
 * DEPTH_BITS = GLFW_DEPTH_BITS             # <<<<<<<<<<<<<<
 * STENCIL_BITS = GLFW_STENCIL_BITS
 * ACCUM_RED_BITS = GLFW_ACCUM_RED_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_DEPTH_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DEPTH_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 231, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":232
 * ALPHA_BITS = GLFW_ALPHA_BITS
 * DEPTH_BITS = GLFW_DEPTH_BITS
 * STENCIL_BITS = GLFW_STENCIL_BITS             # <<<<<<<<<<<<<<
 * ACCUM_RED_BITS = GLFW_ACCUM_RED_BITS
 * ACCUM_GREEN_BITS = GLFW_ACCUM_GREEN_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_STENCIL_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STENCIL_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 232, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":233
 * DEPTH_BITS = GLFW_DEPTH_BITS
 * STENCIL_BITS = GLFW_STENCIL_BITS
 * ACCUM_RED_BITS = GLFW_ACCUM_RED_BITS             # <<<<<<<<<<<<<<
 * ACCUM_GREEN_BITS = GLFW_ACCUM_GREEN_BITS
 * ACCUM_BLUE_BITS = GLFW_ACCUM_BLUE_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ACCUM_RED_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ACCUM_RED_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 233, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":234
 * STENCIL_BITS = GLFW_STENCIL_BITS
 * ACCUM_RED_BITS = GLFW_ACCUM_RED_BITS
 * ACCUM_GREEN_BITS = GLFW_ACCUM_GREEN_BITS             # <<<<<<<<<<<<<<
 * ACCUM_BLUE_BITS = GLFW_ACCUM_BLUE_BITS
 * ACCUM_ALPHA_BITS = GLFW_ACCUM_ALPHA_BITS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ACCUM_GREEN_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ACCUM_GREEN_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 234, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":235
 * ACCUM_RED_BITS = GLFW_ACCUM_RED_BITS
 * ACCUM_GREEN_BITS = GLFW_ACCUM_GREEN_BITS
 * ACCUM_BLUE_BITS = GLFW_ACCUM_BLUE_BITS             # <<<<<<<<<<<<<<
 * ACCUM_ALPHA_BITS = GLFW_ACCUM_ALPHA_BITS
 * AUX_BUFFERS = GLFW_AUX_BUFFERS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ACCUM_BLUE_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ACCUM_BLUE_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 235, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":236
 * ACCUM_GREEN_BITS = GLFW_ACCUM_GREEN_BITS
 * ACCUM_BLUE_BITS = GLFW_ACCUM_BLUE_BITS
 * ACCUM_ALPHA_BITS = GLFW_ACCUM_ALPHA_BITS             # <<<<<<<<<<<<<<
 * AUX_BUFFERS = GLFW_AUX_BUFFERS
 * STEREO = GLFW_STEREO
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ACCUM_ALPHA_BITS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ACCUM_ALPHA_BITS, __pyx_t_2) < 0) __PYX_ERR(0, 236, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":237
 * ACCUM_BLUE_BITS = GLFW_ACCUM_BLUE_BITS
 * ACCUM_ALPHA_BITS = GLFW_ACCUM_ALPHA_BITS
 * AUX_BUFFERS = GLFW_AUX_BUFFERS             # <<<<<<<<<<<<<<
 * STEREO = GLFW_STEREO
 * SAMPLES = GLFW_SAMPLES
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_AUX_BUFFERS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_AUX_BUFFERS, __pyx_t_2) < 0) __PYX_ERR(0, 237, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":238
 * ACCUM_ALPHA_BITS = GLFW_ACCUM_ALPHA_BITS
 * AUX_BUFFERS = GLFW_AUX_BUFFERS
 * STEREO = GLFW_STEREO             # <<<<<<<<<<<<<<
 * SAMPLES = GLFW_SAMPLES
 * SRGB_CAPABLE = GLFW_SRGB_CAPABLE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_STEREO); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STEREO, __pyx_t_2) < 0) __PYX_ERR(0, 238, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":239
 * AUX_BUFFERS = GLFW_AUX_BUFFERS
 * STEREO = GLFW_STEREO
 * SAMPLES = GLFW_SAMPLES             # <<<<<<<<<<<<<<
 * SRGB_CAPABLE = GLFW_SRGB_CAPABLE
 * REFRESH_RATE = GLFW_REFRESH_RATE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_SAMPLES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SAMPLES, __pyx_t_2) < 0) __PYX_ERR(0, 239, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":240
 * STEREO = GLFW_STEREO
 * SAMPLES = GLFW_SAMPLES
 * SRGB_CAPABLE = GLFW_SRGB_CAPABLE             # <<<<<<<<<<<<<<
 * REFRESH_RATE = GLFW_REFRESH_RATE
 * DOUBLEBUFFER = GLFW_DOUBLEBUFFER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_SRGB_CAPABLE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SRGB_CAPABLE, __pyx_t_2) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":241
 * SAMPLES = GLFW_SAMPLES
 * SRGB_CAPABLE = GLFW_SRGB_CAPABLE
 * REFRESH_RATE = GLFW_REFRESH_RATE             # <<<<<<<<<<<<<<
 * DOUBLEBUFFER = GLFW_DOUBLEBUFFER
 * CLIENT_API = GLFW_CLIENT_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_REFRESH_RATE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_REFRESH_RATE, __pyx_t_2) < 0) __PYX_ERR(0, 241, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":242
 * SRGB_CAPABLE = GLFW_SRGB_CAPABLE
 * REFRESH_RATE = GLFW_REFRESH_RATE
 * DOUBLEBUFFER = GLFW_DOUBLEBUFFER             # <<<<<<<<<<<<<<
 * CLIENT_API = GLFW_CLIENT_API
 * CONTEXT_VERSION_MAJOR = GLFW_CONTEXT_VERSION_MAJOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_DOUBLEBUFFER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DOUBLEBUFFER, __pyx_t_2) < 0) __PYX_ERR(0, 242, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":243
 * REFRESH_RATE = GLFW_REFRESH_RATE
 * DOUBLEBUFFER = GLFW_DOUBLEBUFFER
 * CLIENT_API = GLFW_CLIENT_API             # <<<<<<<<<<<<<<
 * CONTEXT_VERSION_MAJOR = GLFW_CONTEXT_VERSION_MAJOR
 * CONTEXT_VERSION_MINOR = GLFW_CONTEXT_VERSION_MINOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CLIENT_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CLIENT_API, __pyx_t_2) < 0) __PYX_ERR(0, 243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":244
 * DOUBLEBUFFER = GLFW_DOUBLEBUFFER
 * CLIENT_API = GLFW_CLIENT_API
 * CONTEXT_VERSION_MAJOR = GLFW_CONTEXT_VERSION_MAJOR             # <<<<<<<<<<<<<<
 * CONTEXT_VERSION_MINOR = GLFW_CONTEXT_VERSION_MINOR
 * CONTEXT_REVISION = GLFW_CONTEXT_REVISION
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_VERSION_MAJOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_VERSION_MAJOR, __pyx_t_2) < 0) __PYX_ERR(0, 244, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":245
 * CLIENT_API = GLFW_CLIENT_API
 * CONTEXT_VERSION_MAJOR = GLFW_CONTEXT_VERSION_MAJOR
 * CONTEXT_VERSION_MINOR = GLFW_CONTEXT_VERSION_MINOR             # <<<<<<<<<<<<<<
 * CONTEXT_REVISION = GLFW_CONTEXT_REVISION
 * CONTEXT_ROBUSTNESS = GLFW_CONTEXT_ROBUSTNESS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_VERSION_MINOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_VERSION_MINOR, __pyx_t_2) < 0) __PYX_ERR(0, 245, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":246
 * CONTEXT_VERSION_MAJOR = GLFW_CONTEXT_VERSION_MAJOR
 * CONTEXT_VERSION_MINOR = GLFW_CONTEXT_VERSION_MINOR
 * CONTEXT_REVISION = GLFW_CONTEXT_REVISION             # <<<<<<<<<<<<<<
 * CONTEXT_ROBUSTNESS = GLFW_CONTEXT_ROBUSTNESS
 * OPENGL_FORWARD_COMPAT = GLFW_OPENGL_FORWARD_COMPAT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_REVISION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_REVISION, __pyx_t_2) < 0) __PYX_ERR(0, 246, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":247
 * CONTEXT_VERSION_MINOR = GLFW_CONTEXT_VERSION_MINOR
 * CONTEXT_REVISION = GLFW_CONTEXT_REVISION
 * CONTEXT_ROBUSTNESS = GLFW_CONTEXT_ROBUSTNESS             # <<<<<<<<<<<<<<
 * OPENGL_FORWARD_COMPAT = GLFW_OPENGL_FORWARD_COMPAT
 * OPENGL_DEBUG_CONTEXT = GLFW_OPENGL_DEBUG_CONTEXT
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_ROBUSTNESS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_ROBUSTNESS, __pyx_t_2) < 0) __PYX_ERR(0, 247, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":248
 * CONTEXT_REVISION = GLFW_CONTEXT_REVISION
 * CONTEXT_ROBUSTNESS = GLFW_CONTEXT_ROBUSTNESS
 * OPENGL_FORWARD_COMPAT = GLFW_OPENGL_FORWARD_COMPAT             # <<<<<<<<<<<<<<
 * OPENGL_DEBUG_CONTEXT = GLFW_OPENGL_DEBUG_CONTEXT
 * OPENGL_PROFILE = GLFW_OPENGL_PROFILE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_FORWARD_COMPAT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_FORWARD_COMPAT, __pyx_t_2) < 0) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":249
 * CONTEXT_ROBUSTNESS = GLFW_CONTEXT_ROBUSTNESS
 * OPENGL_FORWARD_COMPAT = GLFW_OPENGL_FORWARD_COMPAT
 * OPENGL_DEBUG_CONTEXT = GLFW_OPENGL_DEBUG_CONTEXT             # <<<<<<<<<<<<<<
 * OPENGL_PROFILE = GLFW_OPENGL_PROFILE
 * CONTEXT_RELEASE_BEHAVIOR = GLFW_CONTEXT_RELEASE_BEHAVIOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_DEBUG_CONTEXT); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_DEBUG_CONTEXT, __pyx_t_2) < 0) __PYX_ERR(0, 249, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":250
 * OPENGL_FORWARD_COMPAT = GLFW_OPENGL_FORWARD_COMPAT
 * OPENGL_DEBUG_CONTEXT = GLFW_OPENGL_DEBUG_CONTEXT
 * OPENGL_PROFILE = GLFW_OPENGL_PROFILE             # <<<<<<<<<<<<<<
 * CONTEXT_RELEASE_BEHAVIOR = GLFW_CONTEXT_RELEASE_BEHAVIOR
 * CONTEXT_NO_ERROR = GLFW_CONTEXT_NO_ERROR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_PROFILE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_PROFILE, __pyx_t_2) < 0) __PYX_ERR(0, 250, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":251
 * OPENGL_DEBUG_CONTEXT = GLFW_OPENGL_DEBUG_CONTEXT
 * OPENGL_PROFILE = GLFW_OPENGL_PROFILE
 * CONTEXT_RELEASE_BEHAVIOR = GLFW_CONTEXT_RELEASE_BEHAVIOR             # <<<<<<<<<<<<<<
 * CONTEXT_NO_ERROR = GLFW_CONTEXT_NO_ERROR
 * CONTEXT_CREATION_API = GLFW_CONTEXT_CREATION_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_RELEASE_BEHAVIOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_RELEASE_BEHAVIOR, __pyx_t_2) < 0) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":252
 * OPENGL_PROFILE = GLFW_OPENGL_PROFILE
 * CONTEXT_RELEASE_BEHAVIOR = GLFW_CONTEXT_RELEASE_BEHAVIOR
 * CONTEXT_NO_ERROR = GLFW_CONTEXT_NO_ERROR             # <<<<<<<<<<<<<<
 * CONTEXT_CREATION_API = GLFW_CONTEXT_CREATION_API
 * SCALE_TO_MONITOR = GLFW_SCALE_TO_MONITOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_NO_ERROR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_NO_ERROR, __pyx_t_2) < 0) __PYX_ERR(0, 252, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":253
 * CONTEXT_RELEASE_BEHAVIOR = GLFW_CONTEXT_RELEASE_BEHAVIOR
 * CONTEXT_NO_ERROR = GLFW_CONTEXT_NO_ERROR
 * CONTEXT_CREATION_API = GLFW_CONTEXT_CREATION_API             # <<<<<<<<<<<<<<
 * SCALE_TO_MONITOR = GLFW_SCALE_TO_MONITOR
 * COCOA_RETINA_FRAMEBUFFER = GLFW_COCOA_RETINA_FRAMEBUFFER
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONTEXT_CREATION_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONTEXT_CREATION_API, __pyx_t_2) < 0) __PYX_ERR(0, 253, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":254
 * CONTEXT_NO_ERROR = GLFW_CONTEXT_NO_ERROR
 * CONTEXT_CREATION_API = GLFW_CONTEXT_CREATION_API
 * SCALE_TO_MONITOR = GLFW_SCALE_TO_MONITOR             # <<<<<<<<<<<<<<
 * COCOA_RETINA_FRAMEBUFFER = GLFW_COCOA_RETINA_FRAMEBUFFER
 * COCOA_FRAME_NAME = GLFW_COCOA_FRAME_NAME
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_SCALE_TO_MONITOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_SCALE_TO_MONITOR, __pyx_t_2) < 0) __PYX_ERR(0, 254, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":255
 * CONTEXT_CREATION_API = GLFW_CONTEXT_CREATION_API
 * SCALE_TO_MONITOR = GLFW_SCALE_TO_MONITOR
 * COCOA_RETINA_FRAMEBUFFER = GLFW_COCOA_RETINA_FRAMEBUFFER             # <<<<<<<<<<<<<<
 * COCOA_FRAME_NAME = GLFW_COCOA_FRAME_NAME
 * COCOA_GRAPHICS_SWITCHING = GLFW_COCOA_GRAPHICS_SWITCHING
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_COCOA_RETINA_FRAMEBUFFER); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COCOA_RETINA_FRAMEBUFFER, __pyx_t_2) < 0) __PYX_ERR(0, 255, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":256
 * SCALE_TO_MONITOR = GLFW_SCALE_TO_MONITOR
 * COCOA_RETINA_FRAMEBUFFER = GLFW_COCOA_RETINA_FRAMEBUFFER
 * COCOA_FRAME_NAME = GLFW_COCOA_FRAME_NAME             # <<<<<<<<<<<<<<
 * COCOA_GRAPHICS_SWITCHING = GLFW_COCOA_GRAPHICS_SWITCHING
 * X11_CLASS_NAME = GLFW_X11_CLASS_NAME
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_COCOA_FRAME_NAME); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COCOA_FRAME_NAME, __pyx_t_2) < 0) __PYX_ERR(0, 256, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":257
 * COCOA_RETINA_FRAMEBUFFER = GLFW_COCOA_RETINA_FRAMEBUFFER
 * COCOA_FRAME_NAME = GLFW_COCOA_FRAME_NAME
 * COCOA_GRAPHICS_SWITCHING = GLFW_COCOA_GRAPHICS_SWITCHING             # <<<<<<<<<<<<<<
 * X11_CLASS_NAME = GLFW_X11_CLASS_NAME
 * X11_INSTANCE_NAME = GLFW_X11_INSTANCE_NAME
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_COCOA_GRAPHICS_SWITCHING); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COCOA_GRAPHICS_SWITCHING, __pyx_t_2) < 0) __PYX_ERR(0, 257, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":258
 * COCOA_FRAME_NAME = GLFW_COCOA_FRAME_NAME
 * COCOA_GRAPHICS_SWITCHING = GLFW_COCOA_GRAPHICS_SWITCHING
 * X11_CLASS_NAME = GLFW_X11_CLASS_NAME             # <<<<<<<<<<<<<<
 * X11_INSTANCE_NAME = GLFW_X11_INSTANCE_NAME
 * NO_API = GLFW_NO_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_X11_CLASS_NAME); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X11_CLASS_NAME, __pyx_t_2) < 0) __PYX_ERR(0, 258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":259
 * COCOA_GRAPHICS_SWITCHING = GLFW_COCOA_GRAPHICS_SWITCHING
 * X11_CLASS_NAME = GLFW_X11_CLASS_NAME
 * X11_INSTANCE_NAME = GLFW_X11_INSTANCE_NAME             # <<<<<<<<<<<<<<
 * NO_API = GLFW_NO_API
 * OPENGL_API = GLFW_OPENGL_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_X11_INSTANCE_NAME); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_X11_INSTANCE_NAME, __pyx_t_2) < 0) __PYX_ERR(0, 259, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":260
 * X11_CLASS_NAME = GLFW_X11_CLASS_NAME
 * X11_INSTANCE_NAME = GLFW_X11_INSTANCE_NAME
 * NO_API = GLFW_NO_API             # <<<<<<<<<<<<<<
 * OPENGL_API = GLFW_OPENGL_API
 * OPENGL_ES_API = GLFW_OPENGL_ES_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_API, __pyx_t_2) < 0) __PYX_ERR(0, 260, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":261
 * X11_INSTANCE_NAME = GLFW_X11_INSTANCE_NAME
 * NO_API = GLFW_NO_API
 * OPENGL_API = GLFW_OPENGL_API             # <<<<<<<<<<<<<<
 * OPENGL_ES_API = GLFW_OPENGL_ES_API
 * NO_ROBUSTNESS = GLFW_NO_ROBUSTNESS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_API, __pyx_t_2) < 0) __PYX_ERR(0, 261, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":262
 * NO_API = GLFW_NO_API
 * OPENGL_API = GLFW_OPENGL_API
 * OPENGL_ES_API = GLFW_OPENGL_ES_API             # <<<<<<<<<<<<<<
 * NO_ROBUSTNESS = GLFW_NO_ROBUSTNESS
 * NO_RESET_NOTIFICATION = GLFW_NO_RESET_NOTIFICATION
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_ES_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_ES_API, __pyx_t_2) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":263
 * OPENGL_API = GLFW_OPENGL_API
 * OPENGL_ES_API = GLFW_OPENGL_ES_API
 * NO_ROBUSTNESS = GLFW_NO_ROBUSTNESS             # <<<<<<<<<<<<<<
 * NO_RESET_NOTIFICATION = GLFW_NO_RESET_NOTIFICATION
 * LOSE_CONTEXT_ON_RESET = GLFW_LOSE_CONTEXT_ON_RESET
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_ROBUSTNESS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_ROBUSTNESS, __pyx_t_2) < 0) __PYX_ERR(0, 263, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":264
 * OPENGL_ES_API = GLFW_OPENGL_ES_API
 * NO_ROBUSTNESS = GLFW_NO_ROBUSTNESS
 * NO_RESET_NOTIFICATION = GLFW_NO_RESET_NOTIFICATION             # <<<<<<<<<<<<<<
 * LOSE_CONTEXT_ON_RESET = GLFW_LOSE_CONTEXT_ON_RESET
 * OPENGL_ANY_PROFILE = GLFW_OPENGL_ANY_PROFILE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NO_RESET_NOTIFICATION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NO_RESET_NOTIFICATION, __pyx_t_2) < 0) __PYX_ERR(0, 264, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":265
 * NO_ROBUSTNESS = GLFW_NO_ROBUSTNESS
 * NO_RESET_NOTIFICATION = GLFW_NO_RESET_NOTIFICATION
 * LOSE_CONTEXT_ON_RESET = GLFW_LOSE_CONTEXT_ON_RESET             # <<<<<<<<<<<<<<
 * OPENGL_ANY_PROFILE = GLFW_OPENGL_ANY_PROFILE
 * OPENGL_CORE_PROFILE = GLFW_OPENGL_CORE_PROFILE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_LOSE_CONTEXT_ON_RESET); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LOSE_CONTEXT_ON_RESET, __pyx_t_2) < 0) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":266
 * NO_RESET_NOTIFICATION = GLFW_NO_RESET_NOTIFICATION
 * LOSE_CONTEXT_ON_RESET = GLFW_LOSE_CONTEXT_ON_RESET
 * OPENGL_ANY_PROFILE = GLFW_OPENGL_ANY_PROFILE             # <<<<<<<<<<<<<<
 * OPENGL_CORE_PROFILE = GLFW_OPENGL_CORE_PROFILE
 * OPENGL_COMPAT_PROFILE = GLFW_OPENGL_COMPAT_PROFILE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_ANY_PROFILE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_ANY_PROFILE, __pyx_t_2) < 0) __PYX_ERR(0, 266, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":267
 * LOSE_CONTEXT_ON_RESET = GLFW_LOSE_CONTEXT_ON_RESET
 * OPENGL_ANY_PROFILE = GLFW_OPENGL_ANY_PROFILE
 * OPENGL_CORE_PROFILE = GLFW_OPENGL_CORE_PROFILE             # <<<<<<<<<<<<<<
 * OPENGL_COMPAT_PROFILE = GLFW_OPENGL_COMPAT_PROFILE
 * CURSOR = GLFW_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_CORE_PROFILE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_CORE_PROFILE, __pyx_t_2) < 0) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":268
 * OPENGL_ANY_PROFILE = GLFW_OPENGL_ANY_PROFILE
 * OPENGL_CORE_PROFILE = GLFW_OPENGL_CORE_PROFILE
 * OPENGL_COMPAT_PROFILE = GLFW_OPENGL_COMPAT_PROFILE             # <<<<<<<<<<<<<<
 * CURSOR = GLFW_CURSOR
 * STICKY_KEYS = GLFW_STICKY_KEYS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OPENGL_COMPAT_PROFILE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OPENGL_COMPAT_PROFILE, __pyx_t_2) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":269
 * OPENGL_CORE_PROFILE = GLFW_OPENGL_CORE_PROFILE
 * OPENGL_COMPAT_PROFILE = GLFW_OPENGL_COMPAT_PROFILE
 * CURSOR = GLFW_CURSOR             # <<<<<<<<<<<<<<
 * STICKY_KEYS = GLFW_STICKY_KEYS
 * STICKY_MOUSE_BUTTONS = GLFW_STICKY_MOUSE_BUTTONS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 269, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":270
 * OPENGL_COMPAT_PROFILE = GLFW_OPENGL_COMPAT_PROFILE
 * CURSOR = GLFW_CURSOR
 * STICKY_KEYS = GLFW_STICKY_KEYS             # <<<<<<<<<<<<<<
 * STICKY_MOUSE_BUTTONS = GLFW_STICKY_MOUSE_BUTTONS
 * LOCK_KEY_MODS = GLFW_LOCK_KEY_MODS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_STICKY_KEYS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STICKY_KEYS, __pyx_t_2) < 0) __PYX_ERR(0, 270, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":271
 * CURSOR = GLFW_CURSOR
 * STICKY_KEYS = GLFW_STICKY_KEYS
 * STICKY_MOUSE_BUTTONS = GLFW_STICKY_MOUSE_BUTTONS             # <<<<<<<<<<<<<<
 * LOCK_KEY_MODS = GLFW_LOCK_KEY_MODS
 * RAW_MOUSE_MOTION = GLFW_RAW_MOUSE_MOTION
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_STICKY_MOUSE_BUTTONS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_STICKY_MOUSE_BUTTONS, __pyx_t_2) < 0) __PYX_ERR(0, 271, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":272
 * STICKY_KEYS = GLFW_STICKY_KEYS
 * STICKY_MOUSE_BUTTONS = GLFW_STICKY_MOUSE_BUTTONS
 * LOCK_KEY_MODS = GLFW_LOCK_KEY_MODS             # <<<<<<<<<<<<<<
 * RAW_MOUSE_MOTION = GLFW_RAW_MOUSE_MOTION
 * CURSOR_NORMAL = GLFW_CURSOR_NORMAL
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_LOCK_KEY_MODS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_LOCK_KEY_MODS, __pyx_t_2) < 0) __PYX_ERR(0, 272, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":273
 * STICKY_MOUSE_BUTTONS = GLFW_STICKY_MOUSE_BUTTONS
 * LOCK_KEY_MODS = GLFW_LOCK_KEY_MODS
 * RAW_MOUSE_MOTION = GLFW_RAW_MOUSE_MOTION             # <<<<<<<<<<<<<<
 * CURSOR_NORMAL = GLFW_CURSOR_NORMAL
 * CURSOR_HIDDEN = GLFW_CURSOR_HIDDEN
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RAW_MOUSE_MOTION); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RAW_MOUSE_MOTION, __pyx_t_2) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":274
 * LOCK_KEY_MODS = GLFW_LOCK_KEY_MODS
 * RAW_MOUSE_MOTION = GLFW_RAW_MOUSE_MOTION
 * CURSOR_NORMAL = GLFW_CURSOR_NORMAL             # <<<<<<<<<<<<<<
 * CURSOR_HIDDEN = GLFW_CURSOR_HIDDEN
 * CURSOR_DISABLED = GLFW_CURSOR_DISABLED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CURSOR_NORMAL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CURSOR_NORMAL, __pyx_t_2) < 0) __PYX_ERR(0, 274, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":275
 * RAW_MOUSE_MOTION = GLFW_RAW_MOUSE_MOTION
 * CURSOR_NORMAL = GLFW_CURSOR_NORMAL
 * CURSOR_HIDDEN = GLFW_CURSOR_HIDDEN             # <<<<<<<<<<<<<<
 * CURSOR_DISABLED = GLFW_CURSOR_DISABLED
 * ANY_RELEASE_BEHAVIOR = GLFW_ANY_RELEASE_BEHAVIOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CURSOR_HIDDEN); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CURSOR_HIDDEN, __pyx_t_2) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":276
 * CURSOR_NORMAL = GLFW_CURSOR_NORMAL
 * CURSOR_HIDDEN = GLFW_CURSOR_HIDDEN
 * CURSOR_DISABLED = GLFW_CURSOR_DISABLED             # <<<<<<<<<<<<<<
 * ANY_RELEASE_BEHAVIOR = GLFW_ANY_RELEASE_BEHAVIOR
 * RELEASE_BEHAVIOR_FLUSH = GLFW_RELEASE_BEHAVIOR_FLUSH
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CURSOR_DISABLED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CURSOR_DISABLED, __pyx_t_2) < 0) __PYX_ERR(0, 276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":277
 * CURSOR_HIDDEN = GLFW_CURSOR_HIDDEN
 * CURSOR_DISABLED = GLFW_CURSOR_DISABLED
 * ANY_RELEASE_BEHAVIOR = GLFW_ANY_RELEASE_BEHAVIOR             # <<<<<<<<<<<<<<
 * RELEASE_BEHAVIOR_FLUSH = GLFW_RELEASE_BEHAVIOR_FLUSH
 * RELEASE_BEHAVIOR_NONE = GLFW_RELEASE_BEHAVIOR_NONE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ANY_RELEASE_BEHAVIOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ANY_RELEASE_BEHAVIOR, __pyx_t_2) < 0) __PYX_ERR(0, 277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":278
 * CURSOR_DISABLED = GLFW_CURSOR_DISABLED
 * ANY_RELEASE_BEHAVIOR = GLFW_ANY_RELEASE_BEHAVIOR
 * RELEASE_BEHAVIOR_FLUSH = GLFW_RELEASE_BEHAVIOR_FLUSH             # <<<<<<<<<<<<<<
 * RELEASE_BEHAVIOR_NONE = GLFW_RELEASE_BEHAVIOR_NONE
 * NATIVE_CONTEXT_API = GLFW_NATIVE_CONTEXT_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RELEASE_BEHAVIOR_FLUSH); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RELEASE_BEHAVIOR_FLUSH, __pyx_t_2) < 0) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":279
 * ANY_RELEASE_BEHAVIOR = GLFW_ANY_RELEASE_BEHAVIOR
 * RELEASE_BEHAVIOR_FLUSH = GLFW_RELEASE_BEHAVIOR_FLUSH
 * RELEASE_BEHAVIOR_NONE = GLFW_RELEASE_BEHAVIOR_NONE             # <<<<<<<<<<<<<<
 * NATIVE_CONTEXT_API = GLFW_NATIVE_CONTEXT_API
 * EGL_CONTEXT_API = GLFW_EGL_CONTEXT_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_RELEASE_BEHAVIOR_NONE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_RELEASE_BEHAVIOR_NONE, __pyx_t_2) < 0) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":280
 * RELEASE_BEHAVIOR_FLUSH = GLFW_RELEASE_BEHAVIOR_FLUSH
 * RELEASE_BEHAVIOR_NONE = GLFW_RELEASE_BEHAVIOR_NONE
 * NATIVE_CONTEXT_API = GLFW_NATIVE_CONTEXT_API             # <<<<<<<<<<<<<<
 * EGL_CONTEXT_API = GLFW_EGL_CONTEXT_API
 * OSMESA_CONTEXT_API = GLFW_OSMESA_CONTEXT_API
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_NATIVE_CONTEXT_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 280, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_NATIVE_CONTEXT_API, __pyx_t_2) < 0) __PYX_ERR(0, 280, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":281
 * RELEASE_BEHAVIOR_NONE = GLFW_RELEASE_BEHAVIOR_NONE
 * NATIVE_CONTEXT_API = GLFW_NATIVE_CONTEXT_API
 * EGL_CONTEXT_API = GLFW_EGL_CONTEXT_API             # <<<<<<<<<<<<<<
 * OSMESA_CONTEXT_API = GLFW_OSMESA_CONTEXT_API
 * ARROW_CURSOR = GLFW_ARROW_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_EGL_CONTEXT_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_EGL_CONTEXT_API, __pyx_t_2) < 0) __PYX_ERR(0, 281, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":282
 * NATIVE_CONTEXT_API = GLFW_NATIVE_CONTEXT_API
 * EGL_CONTEXT_API = GLFW_EGL_CONTEXT_API
 * OSMESA_CONTEXT_API = GLFW_OSMESA_CONTEXT_API             # <<<<<<<<<<<<<<
 * ARROW_CURSOR = GLFW_ARROW_CURSOR
 * IBEAM_CURSOR = GLFW_IBEAM_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_OSMESA_CONTEXT_API); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_OSMESA_CONTEXT_API, __pyx_t_2) < 0) __PYX_ERR(0, 282, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":283
 * EGL_CONTEXT_API = GLFW_EGL_CONTEXT_API
 * OSMESA_CONTEXT_API = GLFW_OSMESA_CONTEXT_API
 * ARROW_CURSOR = GLFW_ARROW_CURSOR             # <<<<<<<<<<<<<<
 * IBEAM_CURSOR = GLFW_IBEAM_CURSOR
 * CROSSHAIR_CURSOR = GLFW_CROSSHAIR_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_ARROW_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_ARROW_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":284
 * OSMESA_CONTEXT_API = GLFW_OSMESA_CONTEXT_API
 * ARROW_CURSOR = GLFW_ARROW_CURSOR
 * IBEAM_CURSOR = GLFW_IBEAM_CURSOR             # <<<<<<<<<<<<<<
 * CROSSHAIR_CURSOR = GLFW_CROSSHAIR_CURSOR
 * HAND_CURSOR = GLFW_HAND_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_IBEAM_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_IBEAM_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":285
 * ARROW_CURSOR = GLFW_ARROW_CURSOR
 * IBEAM_CURSOR = GLFW_IBEAM_CURSOR
 * CROSSHAIR_CURSOR = GLFW_CROSSHAIR_CURSOR             # <<<<<<<<<<<<<<
 * HAND_CURSOR = GLFW_HAND_CURSOR
 * HRESIZE_CURSOR = GLFW_HRESIZE_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CROSSHAIR_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CROSSHAIR_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":286
 * IBEAM_CURSOR = GLFW_IBEAM_CURSOR
 * CROSSHAIR_CURSOR = GLFW_CROSSHAIR_CURSOR
 * HAND_CURSOR = GLFW_HAND_CURSOR             # <<<<<<<<<<<<<<
 * HRESIZE_CURSOR = GLFW_HRESIZE_CURSOR
 * VRESIZE_CURSOR = GLFW_VRESIZE_CURSOR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HAND_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HAND_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":287
 * CROSSHAIR_CURSOR = GLFW_CROSSHAIR_CURSOR
 * HAND_CURSOR = GLFW_HAND_CURSOR
 * HRESIZE_CURSOR = GLFW_HRESIZE_CURSOR             # <<<<<<<<<<<<<<
 * VRESIZE_CURSOR = GLFW_VRESIZE_CURSOR
 * CONNECTED = GLFW_CONNECTED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_HRESIZE_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_HRESIZE_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":288
 * HAND_CURSOR = GLFW_HAND_CURSOR
 * HRESIZE_CURSOR = GLFW_HRESIZE_CURSOR
 * VRESIZE_CURSOR = GLFW_VRESIZE_CURSOR             # <<<<<<<<<<<<<<
 * CONNECTED = GLFW_CONNECTED
 * DISCONNECTED = GLFW_DISCONNECTED
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_VRESIZE_CURSOR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_VRESIZE_CURSOR, __pyx_t_2) < 0) __PYX_ERR(0, 288, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":289
 * HRESIZE_CURSOR = GLFW_HRESIZE_CURSOR
 * VRESIZE_CURSOR = GLFW_VRESIZE_CURSOR
 * CONNECTED = GLFW_CONNECTED             # <<<<<<<<<<<<<<
 * DISCONNECTED = GLFW_DISCONNECTED
 * JOYSTICK_HAT_BUTTONS = GLFW_JOYSTICK_HAT_BUTTONS
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_CONNECTED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CONNECTED, __pyx_t_2) < 0) __PYX_ERR(0, 289, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":290
 * VRESIZE_CURSOR = GLFW_VRESIZE_CURSOR
 * CONNECTED = GLFW_CONNECTED
 * DISCONNECTED = GLFW_DISCONNECTED             # <<<<<<<<<<<<<<
 * JOYSTICK_HAT_BUTTONS = GLFW_JOYSTICK_HAT_BUTTONS
 * COCOA_CHDIR_RESOURCES = GLFW_COCOA_CHDIR_RESOURCES
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_DISCONNECTED); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DISCONNECTED, __pyx_t_2) < 0) __PYX_ERR(0, 290, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":291
 * CONNECTED = GLFW_CONNECTED
 * DISCONNECTED = GLFW_DISCONNECTED
 * JOYSTICK_HAT_BUTTONS = GLFW_JOYSTICK_HAT_BUTTONS             # <<<<<<<<<<<<<<
 * COCOA_CHDIR_RESOURCES = GLFW_COCOA_CHDIR_RESOURCES
 * COCOA_MENUBAR = GLFW_COCOA_MENUBAR
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_JOYSTICK_HAT_BUTTONS); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_JOYSTICK_HAT_BUTTONS, __pyx_t_2) < 0) __PYX_ERR(0, 291, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":292
 * DISCONNECTED = GLFW_DISCONNECTED
 * JOYSTICK_HAT_BUTTONS = GLFW_JOYSTICK_HAT_BUTTONS
 * COCOA_CHDIR_RESOURCES = GLFW_COCOA_CHDIR_RESOURCES             # <<<<<<<<<<<<<<
 * COCOA_MENUBAR = GLFW_COCOA_MENUBAR
 * DONT_CARE = GLFW_DONT_CARE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_COCOA_CHDIR_RESOURCES); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COCOA_CHDIR_RESOURCES, __pyx_t_2) < 0) __PYX_ERR(0, 292, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":293
 * JOYSTICK_HAT_BUTTONS = GLFW_JOYSTICK_HAT_BUTTONS
 * COCOA_CHDIR_RESOURCES = GLFW_COCOA_CHDIR_RESOURCES
 * COCOA_MENUBAR = GLFW_COCOA_MENUBAR             # <<<<<<<<<<<<<<
 * DONT_CARE = GLFW_DONT_CARE
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_COCOA_MENUBAR); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_COCOA_MENUBAR, __pyx_t_2) < 0) __PYX_ERR(0, 293, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":294
 * COCOA_CHDIR_RESOURCES = GLFW_COCOA_CHDIR_RESOURCES
 * COCOA_MENUBAR = GLFW_COCOA_MENUBAR
 * DONT_CARE = GLFW_DONT_CARE             # <<<<<<<<<<<<<<
 */
  __pyx_t_2 = __Pyx_PyInt_From_int(GLFW_DONT_CARE); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_DONT_CARE, __pyx_t_2) < 0) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "engine/constants.py":1
 * from cython.cimports.engine.libs.glfw import *             # <<<<<<<<<<<<<<
 * 
 * VERSION_MAJOR = GLFW_VERSION_MAJOR
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init engine.constants", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init engine.constants");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#if _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    PyObject *exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
    if (unlikely(PyTuple_Check(err)))
        return __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    return __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(CYTHON_NCP_UNUSED PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    _PyTraceback_Add(funcname, filename, py_line);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XSETREF(name, __Pyx_NewRef(__pyx_n_s_));
    }
    return name;
}
#endif

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case  1: __PYX_VERIFY_RETURN_INT(long, digit, digits[0])
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                            return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                            return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                            return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (long) 0;
                case -1: __PYX_VERIFY_RETURN_INT(long, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(long,  digit, +digits[0])
                case -2:
                    if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                            return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if (CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available, cannot convert large numbers");
#else
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case  1: __PYX_VERIFY_RETURN_INT(int, digit, digits[0])
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                            return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                            return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                            return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                        }
                    }
                    break;
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            const digit* digits = ((PyLongObject*)x)->ob_digit;
            switch (Py_SIZE(x)) {
                case  0: return (int) 0;
                case -1: __PYX_VERIFY_RETURN_INT(int, sdigit, (sdigit) (-(sdigit)digits[0]))
                case  1: __PYX_VERIFY_RETURN_INT(int,  digit, +digits[0])
                case -2:
                    if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 2:
                    if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -3:
                    if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 3:
                    if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case -4:
                    if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
                case 4:
                    if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                        if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                            __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                        } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                            return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                        }
                    }
                    break;
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
#if (CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) && !defined(_PyLong_AsByteArray)
            PyErr_SetString(PyExc_RuntimeError,
                            "_PyLong_AsByteArray() not available, cannot convert large numbers");
#else
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
 #if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
 #endif
            if (likely(v)) {
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                int ret = _PyLong_AsByteArray((PyLongObject *)v,
                                              bytes, sizeof(val),
                                              is_little, !is_unsigned);
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
#endif
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compile time version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}
#endif

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    const digit* digits = ((PyLongObject*)b)->ob_digit;
    const Py_ssize_t size = Py_SIZE(b);
    if (likely(__Pyx_sst_abs(size) <= 1)) {
        ival = likely(size) ? digits[0] : 0;
        if (size == -1) ival = -ival;
        return ival;
    } else {
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#if _MSV_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
